-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity covariance_covariance_Pipeline_VITIS_LOOP_50_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    mean : IN STD_LOGIC_VECTOR (63 downto 0);
    data : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_224_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_224_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_224_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_224_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_224_p_ce : OUT STD_LOGIC;
    grp_fu_228_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_228_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_228_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_228_p_ce : OUT STD_LOGIC );
end;


architecture behav of covariance_covariance_Pipeline_VITIS_LOOP_50_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3D800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111101100000000000000000000000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal icmp_ln50_reg_1065 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_state17_io : BOOLEAN;
    signal ap_block_state34_pp0_stage16_iter1 : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage16 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal gmem_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal reg_335 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_state12_io : BOOLEAN;
    signal ap_block_state29_pp0_stage11_iter1 : BOOLEAN;
    signal ap_block_state46_pp0_stage11_iter2 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_state14_io : BOOLEAN;
    signal ap_block_state31_pp0_stage13_iter1 : BOOLEAN;
    signal ap_block_state48_pp0_stage13_iter2 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_state16_io : BOOLEAN;
    signal ap_block_state33_pp0_stage15_iter1 : BOOLEAN;
    signal ap_block_state50_pp0_stage15_iter2 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state20_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state37_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_state22_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state39_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state7_io : BOOLEAN;
    signal ap_block_state24_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state41_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state9_io : BOOLEAN;
    signal ap_block_state26_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_state43_pp0_stage8_iter2 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal reg_340 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_state11_io : BOOLEAN;
    signal ap_block_state28_pp0_stage10_iter1 : BOOLEAN;
    signal ap_block_state45_pp0_stage10_iter2 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_state13_io : BOOLEAN;
    signal ap_block_state30_pp0_stage12_iter1 : BOOLEAN;
    signal ap_block_state47_pp0_stage12_iter2 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_state15_io : BOOLEAN;
    signal ap_block_state32_pp0_stage14_iter1 : BOOLEAN;
    signal ap_block_state49_pp0_stage14_iter2 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state36_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state21_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state38_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_state23_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state40_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state8_io : BOOLEAN;
    signal ap_block_state25_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state42_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal icmp_ln50_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_1065_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_23_fu_366_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_23_reg_1069 : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_addr_reg_1081 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_reg_1081_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_reg_1081_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_reg_1088 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln55_1_cast_fu_439_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln55_1_cast_reg_1094 : STD_LOGIC_VECTOR (6 downto 0);
    signal gmem_addr_6_reg_1101 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln55_2_cast_fu_477_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln55_2_cast_reg_1107 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_7_reg_1113 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_8_reg_1119 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln55_4_cast_fu_547_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln55_4_cast_reg_1125 : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_addr_9_reg_1130 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln55_5_cast_fu_585_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln55_5_cast_reg_1136 : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_addr_10_reg_1141 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_11_reg_1147 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_read_reg_1153 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_12_reg_1158 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_read_reg_1164 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_state27_pp0_stage9_iter1 : BOOLEAN;
    signal ap_block_state44_pp0_stage9_iter2 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal gmem_addr_13_reg_1169 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln55_fu_725_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_1_fu_729_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_6_read_reg_1185 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_14_reg_1190 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_7_read_reg_1196 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_15_reg_1201 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln55_2_fu_809_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_8_read_reg_1212 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_16_reg_1217 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_9_read_reg_1223 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_17_reg_1228 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln55_3_fu_883_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_10_read_reg_1239 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_18_reg_1244 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_11_read_reg_1250 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_19_reg_1255 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln55_4_fu_951_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_12_read_reg_1266 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_20_reg_1271 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_13_read_reg_1277 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_5_fu_987_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_14_read_reg_1287 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_15_read_reg_1292 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_6_fu_991_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_16_read_reg_1302 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_17_read_reg_1307 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_7_fu_995_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_18_read_reg_1317 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_19_read_reg_1322 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_8_fu_999_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_20_read_reg_1332 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_9_fu_1003_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_10_fu_1007_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_11_fu_1011_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_12_fu_1015_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_13_fu_1019_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_14_fu_1023_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_15_fu_1027_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln55_16_fu_1031_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal div_reg_1377 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal sext_ln55_fu_398_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_1_fu_424_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_2_fu_467_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_3_fu_505_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_4_fu_537_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_5_fu_575_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_6_fu_613_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_7_fu_645_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_8_fu_677_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_9_fu_715_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_10_fu_761_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_11_fu_799_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_12_fu_841_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_13_fu_873_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_14_fu_909_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_15_fu_941_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln55_16_fu_977_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage10_01001 : BOOLEAN;
    signal j_fu_96 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln50_fu_360_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_2 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_326_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_326_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_370_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast_fu_378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_24_fu_382_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1_fu_388_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln55_fu_408_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln55_2_fu_414_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln55_fu_448_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_1_fu_452_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln55_3_fu_457_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln55_1_fu_486_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_2_fu_490_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln55_4_fu_495_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal sext_ln55_17_fu_515_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln55_2_fu_518_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_3_fu_522_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln55_5_fu_527_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln55_3_fu_556_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_4_fu_560_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln55_6_fu_565_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln55_4_fu_594_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_5_fu_598_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln55_7_fu_603_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal sext_ln55_18_fu_623_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln55_5_fu_626_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_6_fu_630_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln55_8_fu_635_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal sext_ln55_19_fu_655_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln55_6_fu_658_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_7_fu_662_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln55_9_fu_667_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln55_8_cast_fu_687_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln55_7_fu_696_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_8_fu_700_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln55_s_fu_705_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln55_9_cast_fu_733_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln55_8_fu_742_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_9_fu_746_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln55_1_fu_751_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln55_10_cast_fu_771_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln55_9_fu_780_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_10_fu_784_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln55_10_fu_789_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln55_11_cast_fu_813_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln55_10_fu_822_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_11_fu_826_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln55_11_fu_831_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal sext_ln55_20_fu_851_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln55_11_fu_854_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_12_fu_858_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln55_12_fu_863_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal sext_ln55_21_fu_887_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln55_12_fu_890_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_13_fu_894_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln55_13_fu_899_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal sext_ln55_22_fu_919_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln55_13_fu_922_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_14_fu_926_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln55_14_fu_931_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal sext_ln55_23_fu_955_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln55_14_fu_958_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln55_15_fu_962_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln55_15_fu_967_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_block_pp0_stage10_00001 : BOOLEAN;
    signal ap_block_pp0_stage12_00001 : BOOLEAN;
    signal ap_block_pp0_stage14_00001 : BOOLEAN;
    signal ap_block_pp0_stage16_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_block_pp0_stage7_00001 : BOOLEAN;
    signal ap_block_pp0_stage9_00001 : BOOLEAN;
    signal ap_block_pp0_stage11_00001 : BOOLEAN;
    signal ap_block_pp0_stage13_00001 : BOOLEAN;
    signal ap_block_pp0_stage15_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal grp_fu_326_ce : STD_LOGIC;
    signal grp_fu_330_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter1_stage15 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component covariance_faddfsub_32ns_32ns_32_2_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component covariance_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component covariance_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component covariance_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage16,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage16)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage15) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    j_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln50_fu_354_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_fu_96 <= add_ln50_fu_360_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_96 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                div_reg_1377 <= grp_fu_228_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln50_fu_354_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                empty_23_reg_1069 <= empty_23_fu_366_p1;
                gmem_addr_1_reg_1088 <= sext_ln55_1_fu_424_p1;
                gmem_addr_reg_1081 <= sext_ln55_fu_398_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then
                gmem_addr_10_read_reg_1239 <= m_axi_gmem_RDATA;
                gmem_addr_18_reg_1244 <= sext_ln55_14_fu_909_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then
                gmem_addr_10_reg_1141 <= sext_ln55_6_fu_613_p1;
                    zext_ln55_5_cast_reg_1136(5 downto 2) <= zext_ln55_5_cast_fu_585_p4(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then
                gmem_addr_11_read_reg_1250 <= m_axi_gmem_RDATA;
                gmem_addr_19_reg_1255 <= sext_ln55_15_fu_941_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then
                gmem_addr_11_reg_1147 <= sext_ln55_7_fu_645_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then
                gmem_addr_12_read_reg_1266 <= m_axi_gmem_RDATA;
                gmem_addr_20_reg_1271 <= sext_ln55_16_fu_977_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then
                gmem_addr_12_reg_1158 <= sext_ln55_8_fu_677_p1;
                gmem_addr_read_reg_1153 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gmem_addr_13_read_reg_1277 <= m_axi_gmem_RDATA;
                gmem_addr_reg_1081_pp0_iter1_reg <= gmem_addr_reg_1081;
                gmem_addr_reg_1081_pp0_iter2_reg <= gmem_addr_reg_1081_pp0_iter1_reg;
                icmp_ln50_reg_1065 <= icmp_ln50_fu_354_p2;
                icmp_ln50_reg_1065_pp0_iter1_reg <= icmp_ln50_reg_1065;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then
                gmem_addr_13_reg_1169 <= sext_ln55_9_fu_715_p1;
                gmem_addr_1_read_reg_1164 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                gmem_addr_14_read_reg_1287 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then
                gmem_addr_14_reg_1190 <= sext_ln55_10_fu_761_p1;
                gmem_addr_6_read_reg_1185 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                gmem_addr_15_read_reg_1292 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then
                gmem_addr_15_reg_1201 <= sext_ln55_11_fu_799_p1;
                gmem_addr_7_read_reg_1196 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                gmem_addr_16_read_reg_1302 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then
                gmem_addr_16_reg_1217 <= sext_ln55_12_fu_841_p1;
                gmem_addr_8_read_reg_1212 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                gmem_addr_17_read_reg_1307 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then
                gmem_addr_17_reg_1228 <= sext_ln55_13_fu_873_p1;
                gmem_addr_9_read_reg_1223 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                gmem_addr_18_read_reg_1317 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                gmem_addr_19_read_reg_1322 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                gmem_addr_20_read_reg_1332 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then
                gmem_addr_6_reg_1101 <= sext_ln55_2_fu_467_p1;
                    zext_ln55_1_cast_reg_1094(5 downto 2) <= zext_ln55_1_cast_fu_439_p4(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then
                gmem_addr_7_reg_1113 <= sext_ln55_3_fu_505_p1;
                    zext_ln55_2_cast_reg_1107(5 downto 2) <= zext_ln55_2_cast_fu_477_p4(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then
                gmem_addr_8_reg_1119 <= sext_ln55_4_fu_537_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then
                gmem_addr_9_reg_1130 <= sext_ln55_5_fu_575_p1;
                    zext_ln55_4_cast_reg_1125(5 downto 2) <= zext_ln55_4_cast_fu_547_p4(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)))) then
                reg_335 <= grp_fu_224_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then
                reg_340 <= grp_fu_224_p_dout0;
            end if;
        end if;
    end process;
    zext_ln55_1_cast_reg_1094(1 downto 0) <= "00";
    zext_ln55_1_cast_reg_1094(6) <= '1';
    zext_ln55_2_cast_reg_1107(1 downto 0) <= "00";
    zext_ln55_2_cast_reg_1107(7 downto 6) <= "10";
    zext_ln55_4_cast_reg_1125(1 downto 0) <= "00";
    zext_ln55_4_cast_reg_1125(8 downto 6) <= "100";
    zext_ln55_5_cast_reg_1136(1 downto 0) <= "00";
    zext_ln55_5_cast_reg_1136(8 downto 6) <= "101";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage16_subdone, ap_block_pp0_stage15_subdone, ap_condition_exit_pp0_iter1_stage15, ap_idle_pp0_0to0, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to2, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage15) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln50_fu_360_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_2) + unsigned(ap_const_lv5_1));
    add_ln55_10_fu_784_p2 <= std_logic_vector(unsigned(zext_ln55_9_fu_780_p1) + unsigned(data));
    add_ln55_11_fu_826_p2 <= std_logic_vector(unsigned(zext_ln55_10_fu_822_p1) + unsigned(data));
    add_ln55_12_fu_858_p2 <= std_logic_vector(unsigned(zext_ln55_11_fu_854_p1) + unsigned(data));
    add_ln55_13_fu_894_p2 <= std_logic_vector(unsigned(zext_ln55_12_fu_890_p1) + unsigned(data));
    add_ln55_14_fu_926_p2 <= std_logic_vector(unsigned(zext_ln55_13_fu_922_p1) + unsigned(data));
    add_ln55_15_fu_962_p2 <= std_logic_vector(unsigned(zext_ln55_14_fu_958_p1) + unsigned(data));
    add_ln55_1_fu_452_p2 <= std_logic_vector(unsigned(zext_ln55_fu_448_p1) + unsigned(data));
    add_ln55_2_fu_490_p2 <= std_logic_vector(unsigned(zext_ln55_1_fu_486_p1) + unsigned(data));
    add_ln55_3_fu_522_p2 <= std_logic_vector(unsigned(zext_ln55_2_fu_518_p1) + unsigned(data));
    add_ln55_4_fu_560_p2 <= std_logic_vector(unsigned(zext_ln55_3_fu_556_p1) + unsigned(data));
    add_ln55_5_fu_598_p2 <= std_logic_vector(unsigned(zext_ln55_4_fu_594_p1) + unsigned(data));
    add_ln55_6_fu_630_p2 <= std_logic_vector(unsigned(zext_ln55_5_fu_626_p1) + unsigned(data));
    add_ln55_7_fu_662_p2 <= std_logic_vector(unsigned(zext_ln55_6_fu_658_p1) + unsigned(data));
    add_ln55_8_fu_700_p2 <= std_logic_vector(unsigned(zext_ln55_7_fu_696_p1) + unsigned(data));
    add_ln55_9_fu_746_p2 <= std_logic_vector(unsigned(zext_ln55_8_fu_742_p1) + unsigned(data));
    add_ln55_fu_408_p2 <= std_logic_vector(unsigned(p_cast_fu_378_p1) + unsigned(data));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_00001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage0_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_ARREADY, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((m_axi_gmem_RVALID = ap_const_logic_0) or (m_axi_gmem_ARREADY = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_ARREADY, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((m_axi_gmem_RVALID = ap_const_logic_0) or (m_axi_gmem_ARREADY = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_00001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_pp0_stage10_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage10_01001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_pp0_stage10_01001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage10_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, m_axi_gmem_WREADY, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_block_state11_io)
    begin
                ap_block_pp0_stage10_11001 <= (((m_axi_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state11_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, m_axi_gmem_WREADY, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_block_state11_io)
    begin
                ap_block_pp0_stage10_subdone <= (((m_axi_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state11_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0)))));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_00001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_pp0_stage11_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_block_state12_io)
    begin
                ap_block_pp0_stage11_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state12_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_block_state12_io)
    begin
                ap_block_pp0_stage11_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state12_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage12_00001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_pp0_stage12_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage12_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_block_state13_io)
    begin
                ap_block_pp0_stage12_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage12_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_block_state13_io)
    begin
                ap_block_pp0_stage12_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_00001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_pp0_stage13_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage13_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_block_state14_io)
    begin
                ap_block_pp0_stage13_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state14_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage13_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_block_state14_io)
    begin
                ap_block_pp0_stage13_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state14_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_00001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_pp0_stage14_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage14_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_block_state15_io)
    begin
                ap_block_pp0_stage14_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state15_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage14_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_block_state15_io)
    begin
                ap_block_pp0_stage14_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state15_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_00001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, m_axi_gmem_RVALID, m_axi_gmem_BVALID, icmp_ln50_reg_1065)
    begin
                ap_block_pp0_stage15_00001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (m_axi_gmem_BVALID = ap_const_logic_0)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln50_reg_1065 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage15_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, m_axi_gmem_RVALID, m_axi_gmem_BVALID, icmp_ln50_reg_1065, ap_block_state16_io)
    begin
                ap_block_pp0_stage15_11001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (m_axi_gmem_BVALID = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state16_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage15_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, m_axi_gmem_RVALID, m_axi_gmem_BVALID, icmp_ln50_reg_1065, ap_block_state16_io)
    begin
                ap_block_pp0_stage15_subdone <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (m_axi_gmem_BVALID = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state16_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0)))));
    end process;

        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage16_00001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_pp0_stage16_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage16_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_block_state17_io)
    begin
                ap_block_pp0_stage16_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state17_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage16_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_block_state17_io)
    begin
                ap_block_pp0_stage16_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state17_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage1_00001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage1_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state2_io)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state2_io)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_00001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage2_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state3_io)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state3_io)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_00001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage3_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state4_io)
    begin
                ap_block_pp0_stage3_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state4_io)
    begin
                ap_block_pp0_stage3_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_00001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage4_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state5_io)
    begin
                ap_block_pp0_stage4_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state5_io)
    begin
                ap_block_pp0_stage4_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_00001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage5_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state6_io)
    begin
                ap_block_pp0_stage5_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state6_io)
    begin
                ap_block_pp0_stage5_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_00001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage6_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state7_io)
    begin
                ap_block_pp0_stage6_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state7_io)
    begin
                ap_block_pp0_stage6_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_00001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage7_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state8_io)
    begin
                ap_block_pp0_stage7_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state8_io)
    begin
                ap_block_pp0_stage7_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_block_state9_io)
    begin
                ap_block_pp0_stage8_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state9_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_block_state9_io)
    begin
                ap_block_pp0_stage8_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state9_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_00001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_pp0_stage9_00001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, m_axi_gmem_AWREADY, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_block_state10_io)
    begin
                ap_block_pp0_stage9_11001 <= (((m_axi_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, m_axi_gmem_AWREADY, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_block_state10_io)
    begin
                ap_block_pp0_stage9_subdone <= (((m_axi_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0)))));
    end process;


    ap_block_state10_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln50_reg_1065)
    begin
                ap_block_state10_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state10_pp0_stage9_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_state10_pp0_stage9_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state11_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln50_reg_1065)
    begin
                ap_block_state11_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state11_pp0_stage10_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_state11_pp0_stage10_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state12_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln50_reg_1065)
    begin
                ap_block_state12_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state12_pp0_stage11_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_state12_pp0_stage11_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state13_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln50_reg_1065)
    begin
                ap_block_state13_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state13_pp0_stage12_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_state13_pp0_stage12_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state14_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln50_reg_1065)
    begin
                ap_block_state14_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state14_pp0_stage13_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_state14_pp0_stage13_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state15_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln50_reg_1065)
    begin
                ap_block_state15_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state15_pp0_stage14_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_state15_pp0_stage14_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state16_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln50_reg_1065)
    begin
                ap_block_state16_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state16_pp0_stage15_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_state16_pp0_stage15_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state17_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln50_reg_1065)
    begin
                ap_block_state17_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state17_pp0_stage16_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_state17_pp0_stage16_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state18_pp0_stage0_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state18_pp0_stage0_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state19_pp0_stage1_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state19_pp0_stage1_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state20_pp0_stage2_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state20_pp0_stage2_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state21_pp0_stage3_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state21_pp0_stage3_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state22_pp0_stage4_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state22_pp0_stage4_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state23_pp0_stage5_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state23_pp0_stage5_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state24_pp0_stage6_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state24_pp0_stage6_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state25_pp0_stage7_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state25_pp0_stage7_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;

        ap_block_state26_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage9_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage10_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage11_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln50_reg_1065)
    begin
                ap_block_state2_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage12_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage13_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage14_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage15_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage16_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln50_reg_1065)
    begin
                ap_block_state3_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;

        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage8_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage9_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage10_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage11_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage12_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage13_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage14_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln50_reg_1065)
    begin
                ap_block_state4_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state50_pp0_stage15_iter2_assign_proc : process(m_axi_gmem_BVALID)
    begin
                ap_block_state50_pp0_stage15_iter2 <= (m_axi_gmem_BVALID = ap_const_logic_0);
    end process;


    ap_block_state5_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln50_reg_1065)
    begin
                ap_block_state5_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;

        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln50_reg_1065)
    begin
                ap_block_state6_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;

        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln50_reg_1065)
    begin
                ap_block_state7_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;

        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln50_reg_1065)
    begin
                ap_block_state8_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;

        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln50_reg_1065)
    begin
                ap_block_state9_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_block_state9_pp0_stage8_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln50_reg_1065)
    begin
                ap_block_state9_pp0_stage8_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln50_reg_1065 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage16_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage16, icmp_ln50_reg_1065, ap_block_pp0_stage16_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_subdone) and (icmp_ln50_reg_1065 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage16 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage15_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage15, icmp_ln50_reg_1065_pp0_iter1_reg, ap_block_pp0_stage15_subdone)
    begin
        if (((icmp_ln50_reg_1065_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_subdone))) then 
            ap_condition_exit_pp0_iter1_stage15 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage15_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage16;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_96, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_j_2 <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_j_2 <= j_fu_96;
        end if; 
    end process;

    bitcast_ln55_10_fu_1007_p1 <= gmem_addr_14_read_reg_1287;
    bitcast_ln55_11_fu_1011_p1 <= gmem_addr_15_read_reg_1292;
    bitcast_ln55_12_fu_1015_p1 <= gmem_addr_16_read_reg_1302;
    bitcast_ln55_13_fu_1019_p1 <= gmem_addr_17_read_reg_1307;
    bitcast_ln55_14_fu_1023_p1 <= gmem_addr_18_read_reg_1317;
    bitcast_ln55_15_fu_1027_p1 <= gmem_addr_19_read_reg_1322;
    bitcast_ln55_16_fu_1031_p1 <= gmem_addr_20_read_reg_1332;
    bitcast_ln55_1_fu_729_p1 <= gmem_addr_1_read_reg_1164;
    bitcast_ln55_2_fu_809_p1 <= gmem_addr_6_read_reg_1185;
    bitcast_ln55_3_fu_883_p1 <= gmem_addr_7_read_reg_1196;
    bitcast_ln55_4_fu_951_p1 <= gmem_addr_8_read_reg_1212;
    bitcast_ln55_5_fu_987_p1 <= gmem_addr_9_read_reg_1223;
    bitcast_ln55_6_fu_991_p1 <= gmem_addr_10_read_reg_1239;
    bitcast_ln55_7_fu_995_p1 <= gmem_addr_11_read_reg_1250;
    bitcast_ln55_8_fu_999_p1 <= gmem_addr_12_read_reg_1266;
    bitcast_ln55_9_fu_1003_p1 <= gmem_addr_13_read_reg_1277;
    bitcast_ln55_fu_725_p1 <= gmem_addr_read_reg_1153;
    empty_23_fu_366_p1 <= ap_sig_allocacmp_j_2(4 - 1 downto 0);
    empty_24_fu_382_p2 <= std_logic_vector(unsigned(p_cast_fu_378_p1) + unsigned(mean));

    gmem_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage16, m_axi_gmem_ARREADY, icmp_ln50_reg_1065, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_block_pp0_stage16, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln50_reg_1065 = ap_const_lv1_0)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(ap_enable_reg_pp0_iter2, m_axi_gmem_AWREADY, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(ap_enable_reg_pp0_iter2, m_axi_gmem_BVALID, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage16, m_axi_gmem_RVALID, icmp_ln50_reg_1065, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_block_pp0_stage16, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (icmp_ln50_reg_1065 = ap_const_lv1_0)))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(ap_enable_reg_pp0_iter2, m_axi_gmem_WREADY, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_224_p_ce <= grp_fu_326_ce;
    grp_fu_224_p_din0 <= grp_fu_326_p0;
    grp_fu_224_p_din1 <= grp_fu_326_p1;
    grp_fu_224_p_opcode <= ap_const_lv2_0(1 - 1 downto 0);
    grp_fu_228_p_ce <= grp_fu_330_ce;
    grp_fu_228_p_din0 <= reg_340;
    grp_fu_228_p_din1 <= ap_const_lv32_3D800000;

    grp_fu_326_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage11_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            grp_fu_326_ce <= ap_const_logic_1;
        else 
            grp_fu_326_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_326_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_block_pp0_stage16, ap_block_pp0_stage0, reg_335, reg_340, bitcast_ln55_fu_725_p1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            grp_fu_326_p0 <= reg_340;
        elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12)))) then 
            grp_fu_326_p0 <= reg_335;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
            grp_fu_326_p0 <= bitcast_ln55_fu_725_p1;
        else 
            grp_fu_326_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_326_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_block_pp0_stage16, ap_block_pp0_stage0, bitcast_ln55_1_fu_729_p1, bitcast_ln55_2_fu_809_p1, bitcast_ln55_3_fu_883_p1, bitcast_ln55_4_fu_951_p1, bitcast_ln55_5_fu_987_p1, bitcast_ln55_6_fu_991_p1, bitcast_ln55_7_fu_995_p1, bitcast_ln55_8_fu_999_p1, bitcast_ln55_9_fu_1003_p1, bitcast_ln55_10_fu_1007_p1, bitcast_ln55_11_fu_1011_p1, bitcast_ln55_12_fu_1015_p1, bitcast_ln55_13_fu_1019_p1, bitcast_ln55_14_fu_1023_p1, bitcast_ln55_15_fu_1027_p1, bitcast_ln55_16_fu_1031_p1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6))) then 
            grp_fu_326_p1 <= bitcast_ln55_16_fu_1031_p1;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
            grp_fu_326_p1 <= bitcast_ln55_15_fu_1027_p1;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_326_p1 <= bitcast_ln55_14_fu_1023_p1;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_326_p1 <= bitcast_ln55_13_fu_1019_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15))) then 
            grp_fu_326_p1 <= bitcast_ln55_12_fu_1015_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
            grp_fu_326_p1 <= bitcast_ln55_11_fu_1011_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
            grp_fu_326_p1 <= bitcast_ln55_10_fu_1007_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
            grp_fu_326_p1 <= bitcast_ln55_9_fu_1003_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7))) then 
            grp_fu_326_p1 <= bitcast_ln55_8_fu_999_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_326_p1 <= bitcast_ln55_7_fu_995_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
            grp_fu_326_p1 <= bitcast_ln55_6_fu_991_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            grp_fu_326_p1 <= bitcast_ln55_5_fu_987_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16))) then 
            grp_fu_326_p1 <= bitcast_ln55_4_fu_951_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14))) then 
            grp_fu_326_p1 <= bitcast_ln55_3_fu_883_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
            grp_fu_326_p1 <= bitcast_ln55_2_fu_809_p1;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10))) then 
            grp_fu_326_p1 <= bitcast_ln55_1_fu_729_p1;
        else 
            grp_fu_326_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_330_ce_assign_proc : process(ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)))) then 
            grp_fu_330_ce <= ap_const_logic_1;
        else 
            grp_fu_330_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln50_fu_354_p2 <= "1" when (ap_sig_allocacmp_j_2 = ap_const_lv5_10) else "0";

    m_axi_gmem_ARADDR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage16, icmp_ln50_reg_1065, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage11_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, gmem_addr_reg_1081, gmem_addr_1_reg_1088, gmem_addr_6_reg_1101, gmem_addr_7_reg_1113, gmem_addr_8_reg_1119, gmem_addr_9_reg_1130, gmem_addr_10_reg_1141, gmem_addr_11_reg_1147, gmem_addr_12_reg_1158, ap_block_pp0_stage9_11001, gmem_addr_13_reg_1169, gmem_addr_14_reg_1190, gmem_addr_15_reg_1201, gmem_addr_16_reg_1217, gmem_addr_17_reg_1228, gmem_addr_18_reg_1244, gmem_addr_19_reg_1255, gmem_addr_20_reg_1271)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem_ARADDR <= gmem_addr_20_reg_1271;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_19_reg_1255;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_18_reg_1244;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_17_reg_1228;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_16_reg_1217;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_15_reg_1201;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_14_reg_1190;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_13_reg_1169;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_12_reg_1158;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_11_reg_1147;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_10_reg_1141;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_9_reg_1130;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_8_reg_1119;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_7_reg_1113;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_6_reg_1101;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_1_reg_1088;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_reg_1081;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_1;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage16, icmp_ln50_reg_1065, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage11_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= gmem_addr_reg_1081_pp0_iter2_reg;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_1;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;

    m_axi_gmem_AWVALID_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then 
            m_axi_gmem_AWVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_BREADY_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001))) then 
            m_axi_gmem_BREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage16, icmp_ln50_reg_1065, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage11_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage9_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln50_reg_1065 = ap_const_lv1_0)))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= div_reg_1377;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv4_F;
    m_axi_gmem_WUSER <= ap_const_lv1_0;

    m_axi_gmem_WVALID_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then 
            m_axi_gmem_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_cast_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_370_p3),64));
        sext_ln55_10_fu_761_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_1_fu_751_p4),64));

        sext_ln55_11_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_10_fu_789_p4),64));

        sext_ln55_12_fu_841_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_11_fu_831_p4),64));

        sext_ln55_13_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_12_fu_863_p4),64));

        sext_ln55_14_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_13_fu_899_p4),64));

        sext_ln55_15_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_14_fu_931_p4),64));

        sext_ln55_16_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_15_fu_967_p4),64));

        sext_ln55_17_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln55_1_cast_reg_1094),8));

        sext_ln55_18_fu_623_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln55_2_cast_reg_1107),9));

        sext_ln55_19_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln55_1_cast_reg_1094),9));

        sext_ln55_1_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_2_fu_414_p4),64));

        sext_ln55_20_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln55_4_cast_reg_1125),10));

        sext_ln55_21_fu_887_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln55_5_cast_reg_1136),10));

        sext_ln55_22_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln55_2_cast_reg_1107),10));

        sext_ln55_23_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(zext_ln55_1_cast_reg_1094),10));

        sext_ln55_2_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_3_fu_457_p4),64));

        sext_ln55_3_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_4_fu_495_p4),64));

        sext_ln55_4_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_5_fu_527_p4),64));

        sext_ln55_5_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_6_fu_565_p4),64));

        sext_ln55_6_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_7_fu_603_p4),64));

        sext_ln55_7_fu_645_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_8_fu_635_p4),64));

        sext_ln55_8_fu_677_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_9_fu_667_p4),64));

        sext_ln55_9_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln55_s_fu_705_p4),64));

        sext_ln55_fu_398_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_fu_388_p4),64));

    tmp_2_fu_370_p3 <= (empty_23_fu_366_p1 & ap_const_lv2_0);
    trunc_ln1_fu_388_p4 <= empty_24_fu_382_p2(63 downto 2);
    trunc_ln55_10_fu_789_p4 <= add_ln55_10_fu_784_p2(63 downto 2);
    trunc_ln55_11_fu_831_p4 <= add_ln55_11_fu_826_p2(63 downto 2);
    trunc_ln55_12_fu_863_p4 <= add_ln55_12_fu_858_p2(63 downto 2);
    trunc_ln55_13_fu_899_p4 <= add_ln55_13_fu_894_p2(63 downto 2);
    trunc_ln55_14_fu_931_p4 <= add_ln55_14_fu_926_p2(63 downto 2);
    trunc_ln55_15_fu_967_p4 <= add_ln55_15_fu_962_p2(63 downto 2);
    trunc_ln55_1_fu_751_p4 <= add_ln55_9_fu_746_p2(63 downto 2);
    trunc_ln55_2_fu_414_p4 <= add_ln55_fu_408_p2(63 downto 2);
    trunc_ln55_3_fu_457_p4 <= add_ln55_1_fu_452_p2(63 downto 2);
    trunc_ln55_4_fu_495_p4 <= add_ln55_2_fu_490_p2(63 downto 2);
    trunc_ln55_5_fu_527_p4 <= add_ln55_3_fu_522_p2(63 downto 2);
    trunc_ln55_6_fu_565_p4 <= add_ln55_4_fu_560_p2(63 downto 2);
    trunc_ln55_7_fu_603_p4 <= add_ln55_5_fu_598_p2(63 downto 2);
    trunc_ln55_8_fu_635_p4 <= add_ln55_6_fu_630_p2(63 downto 2);
    trunc_ln55_9_fu_667_p4 <= add_ln55_7_fu_662_p2(63 downto 2);
    trunc_ln55_s_fu_705_p4 <= add_ln55_8_fu_700_p2(63 downto 2);
    zext_ln55_10_cast_fu_771_p4 <= ((ap_const_lv4_A & empty_23_reg_1069) & ap_const_lv2_0);
    zext_ln55_10_fu_822_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln55_11_cast_fu_813_p4),64));
    zext_ln55_11_cast_fu_813_p4 <= ((ap_const_lv4_B & empty_23_reg_1069) & ap_const_lv2_0);
    zext_ln55_11_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln55_20_fu_851_p1),64));
    zext_ln55_12_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln55_21_fu_887_p1),64));
    zext_ln55_13_fu_922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln55_22_fu_919_p1),64));
    zext_ln55_14_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln55_23_fu_955_p1),64));
    zext_ln55_1_cast_fu_439_p4 <= ((ap_const_lv1_1 & empty_23_reg_1069) & ap_const_lv2_0);
    zext_ln55_1_fu_486_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln55_2_cast_fu_477_p4),64));
    zext_ln55_2_cast_fu_477_p4 <= ((ap_const_lv2_2 & empty_23_reg_1069) & ap_const_lv2_0);
    zext_ln55_2_fu_518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln55_17_fu_515_p1),64));
    zext_ln55_3_fu_556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln55_4_cast_fu_547_p4),64));
    zext_ln55_4_cast_fu_547_p4 <= ((ap_const_lv3_4 & empty_23_reg_1069) & ap_const_lv2_0);
    zext_ln55_4_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln55_5_cast_fu_585_p4),64));
    zext_ln55_5_cast_fu_585_p4 <= ((ap_const_lv3_5 & empty_23_reg_1069) & ap_const_lv2_0);
    zext_ln55_5_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln55_18_fu_623_p1),64));
    zext_ln55_6_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln55_19_fu_655_p1),64));
    zext_ln55_7_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln55_8_cast_fu_687_p4),64));
    zext_ln55_8_cast_fu_687_p4 <= ((ap_const_lv4_8 & empty_23_reg_1069) & ap_const_lv2_0);
    zext_ln55_8_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln55_9_cast_fu_733_p4),64));
    zext_ln55_9_cast_fu_733_p4 <= ((ap_const_lv4_9 & empty_23_reg_1069) & ap_const_lv2_0);
    zext_ln55_9_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln55_10_cast_fu_771_p4),64));
    zext_ln55_fu_448_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln55_1_cast_fu_439_p4),64));
end behav;

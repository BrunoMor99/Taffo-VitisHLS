-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity covariance_covariance_Pipeline_VITIS_LOOP_70_6 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    zext_ln68 : IN STD_LOGIC_VECTOR (3 downto 0);
    zext_ln70 : IN STD_LOGIC_VECTOR (7 downto 0);
    cov : IN STD_LOGIC_VECTOR (63 downto 0);
    data : IN STD_LOGIC_VECTOR (63 downto 0);
    i_2_cast : IN STD_LOGIC_VECTOR (3 downto 0);
    grp_fu_224_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_224_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_224_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_224_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_224_p_ce : OUT STD_LOGIC;
    grp_fu_228_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_228_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_228_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_228_p_ce : OUT STD_LOGIC );
end;


architecture behav of covariance_covariance_Pipeline_VITIS_LOOP_70_6 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_pp0_stage25 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_pp0_stage26 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_pp0_stage27 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage28 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage29 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage30 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage31 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage32 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage33 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage34 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage35 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage36 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage37 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage38 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage39 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage40 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage41 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage42 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage43 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage44 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage45 : STD_LOGIC_VECTOR (55 downto 0) := "00000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage46 : STD_LOGIC_VECTOR (55 downto 0) := "00000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage47 : STD_LOGIC_VECTOR (55 downto 0) := "00000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage48 : STD_LOGIC_VECTOR (55 downto 0) := "00000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage49 : STD_LOGIC_VECTOR (55 downto 0) := "00000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage50 : STD_LOGIC_VECTOR (55 downto 0) := "00000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage51 : STD_LOGIC_VECTOR (55 downto 0) := "00001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage52 : STD_LOGIC_VECTOR (55 downto 0) := "00010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage53 : STD_LOGIC_VECTOR (55 downto 0) := "00100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage54 : STD_LOGIC_VECTOR (55 downto 0) := "01000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage55 : STD_LOGIC_VECTOR (55 downto 0) := "10000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_41700000 : STD_LOGIC_VECTOR (31 downto 0) := "01000001011100000000000000000000";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv62_10 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv62_20 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000100000";
    constant ap_const_lv62_30 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000110000";
    constant ap_const_lv62_40 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000001000000";
    constant ap_const_lv62_50 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000001010000";
    constant ap_const_lv62_60 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000001100000";
    constant ap_const_lv62_70 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000001110000";
    constant ap_const_lv62_80 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000010000000";
    constant ap_const_lv62_90 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000010010000";
    constant ap_const_lv62_A0 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000010100000";
    constant ap_const_lv62_B0 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000010110000";
    constant ap_const_lv62_C0 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000011000000";
    constant ap_const_lv62_D0 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000011010000";
    constant ap_const_lv62_E0 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000011100000";
    constant ap_const_lv62_F0 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000011110000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state58_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal icmp_ln70_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage55 : signal is "none";
    signal ap_block_state56_pp0_stage55_iter0 : BOOLEAN;
    signal ap_block_pp0_stage55_subdone : BOOLEAN;
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal icmp_ln70_reg_1266 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage50 : signal is "none";
    signal ap_block_pp0_stage50 : BOOLEAN;
    signal gmem_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage51 : signal is "none";
    signal ap_block_pp0_stage51 : BOOLEAN;
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_block_pp0_stage20 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal ap_block_pp0_stage21 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_block_pp0_stage22 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal ap_block_pp0_stage23 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage24 : signal is "none";
    signal ap_block_pp0_stage24 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage25 : signal is "none";
    signal ap_block_pp0_stage25 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage52 : signal is "none";
    signal ap_block_pp0_stage52 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal reg_391 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_state13_io : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_state15_io : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal ap_block_state19_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_state19_io : BOOLEAN;
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage26 : signal is "none";
    signal ap_block_state27_pp0_stage26_iter0 : BOOLEAN;
    signal ap_block_pp0_stage26_11001 : BOOLEAN;
    signal reg_396 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_state14_io : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_state17_io : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal ap_block_state23_pp0_stage22_iter0 : BOOLEAN;
    signal ap_block_pp0_stage22_11001 : BOOLEAN;
    signal reg_401 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state21_pp0_stage20_iter0 : BOOLEAN;
    signal ap_block_pp0_stage20_11001 : BOOLEAN;
    signal ap_block_state25_pp0_stage24_iter0 : BOOLEAN;
    signal ap_block_pp0_stage24_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage28 : signal is "none";
    signal ap_block_state29_pp0_stage28_iter0 : BOOLEAN;
    signal ap_block_pp0_stage28_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage30 : signal is "none";
    signal ap_block_state31_pp0_stage30_iter0 : BOOLEAN;
    signal ap_block_pp0_stage30_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage32 : signal is "none";
    signal ap_block_state33_pp0_stage32_iter0 : BOOLEAN;
    signal ap_block_pp0_stage32_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage34 : signal is "none";
    signal ap_block_state35_pp0_stage34_iter0 : BOOLEAN;
    signal ap_block_pp0_stage34_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage36 : signal is "none";
    signal ap_block_state37_pp0_stage36_iter0 : BOOLEAN;
    signal ap_block_pp0_stage36_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage38 : signal is "none";
    signal ap_block_state39_pp0_stage38_iter0 : BOOLEAN;
    signal ap_block_pp0_stage38_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage40 : signal is "none";
    signal ap_block_state41_pp0_stage40_iter0 : BOOLEAN;
    signal ap_block_pp0_stage40_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage42 : signal is "none";
    signal ap_block_state43_pp0_stage42_iter0 : BOOLEAN;
    signal ap_block_pp0_stage42_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage44 : signal is "none";
    signal ap_block_state45_pp0_stage44_iter0 : BOOLEAN;
    signal ap_block_pp0_stage44_11001 : BOOLEAN;
    signal reg_407 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_state16_io : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal reg_412 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_state18_io : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state57_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln70_cast_fu_417_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln70_cast_reg_1255 : STD_LOGIC_VECTOR (61 downto 0);
    signal j_1_reg_1260 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal empty_20_fu_439_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal empty_20_reg_1270 : STD_LOGIC_VECTOR (61 downto 0);
    signal gmem_addr_reg_1289 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_5_reg_1296 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_reg_1302 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal gmem_addr_2_reg_1308 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal gmem_addr_3_reg_1314 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal gmem_addr_4_reg_1320 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal gmem_addr_6_reg_1326 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state7_io : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal gmem_addr_7_reg_1332 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state8_io : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal gmem_addr_8_reg_1338 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state9_io : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal gmem_addr_read_reg_1344 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal gmem_addr_9_reg_1349 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_read_reg_1355 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_state11_io : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal gmem_addr_10_reg_1360 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln75_1_fu_853_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_state12_io : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal gmem_addr_2_read_reg_1372 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_11_reg_1377 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln75_2_fu_896_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_3_read_reg_1389 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_12_reg_1394 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln75_fu_939_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln75_3_fu_943_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_4_read_reg_1411 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_13_reg_1416 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln75_4_fu_986_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_6_read_reg_1428 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_14_reg_1433 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_15_reg_1439 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_16_reg_1445 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_17_reg_1451 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln75_5_fu_1143_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_7_read_reg_1463 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln75_6_fu_1148_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_8_read_reg_1474 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln75_7_fu_1153_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_9_read_reg_1485 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln75_8_fu_1158_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_10_read_reg_1496 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_7_reg_1501 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state20_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal bitcast_ln75_9_fu_1163_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_11_read_reg_1512 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln75_10_fu_1168_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_12_read_reg_1523 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_9_reg_1528 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state22_pp0_stage21_iter0 : BOOLEAN;
    signal ap_block_pp0_stage21_11001 : BOOLEAN;
    signal bitcast_ln75_11_fu_1173_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_13_read_reg_1539 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln75_12_fu_1178_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_14_read_reg_1550 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_10_reg_1555 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state24_pp0_stage23_iter0 : BOOLEAN;
    signal ap_block_pp0_stage23_11001 : BOOLEAN;
    signal bitcast_ln75_13_fu_1183_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_15_read_reg_1566 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln75_14_fu_1188_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_16_read_reg_1577 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_12_reg_1582 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state26_pp0_stage25_iter0 : BOOLEAN;
    signal ap_block_pp0_stage25_11001 : BOOLEAN;
    signal bitcast_ln75_15_fu_1193_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_17_read_reg_1593 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln75_16_fu_1198_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_14_reg_1604 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage27 : signal is "none";
    signal ap_block_state28_pp0_stage27_iter0 : BOOLEAN;
    signal ap_block_pp0_stage27_11001 : BOOLEAN;
    signal grp_fu_386_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal div1_reg_1609 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state51_pp0_stage50_iter0 : BOOLEAN;
    signal ap_block_state51_io : BOOLEAN;
    signal ap_block_pp0_stage50_11001 : BOOLEAN;
    signal bitcast_ln77_fu_1203_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln77_reg_1614 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state52_pp0_stage51_iter0 : BOOLEAN;
    signal ap_block_state52_io : BOOLEAN;
    signal ap_block_pp0_stage51_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal sext_ln75_fu_471_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln78_fu_509_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_1_fu_539_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_2_fu_577_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_3_fu_615_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_4_fu_653_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_5_fu_691_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_6_fu_729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_7_fu_767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_8_fu_805_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_9_fu_843_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_10_fu_886_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_11_fu_929_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_12_fu_976_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_13_fu_1019_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_14_fu_1057_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_15_fu_1095_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_16_fu_1133_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage51_01001 : BOOLEAN;
    signal ap_block_state53_pp0_stage52_iter0 : BOOLEAN;
    signal ap_block_state53_io : BOOLEAN;
    signal ap_block_pp0_stage52_11001 : BOOLEAN;
    signal ap_block_pp0_stage52_01001 : BOOLEAN;
    signal j_fu_114 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln70_fu_1207_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln68_cast_fu_421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal grp_fu_378_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_378_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage27 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage29 : signal is "none";
    signal ap_block_pp0_stage29 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage31 : signal is "none";
    signal ap_block_pp0_stage31 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage33 : signal is "none";
    signal ap_block_pp0_stage33 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage35 : signal is "none";
    signal ap_block_pp0_stage35 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage37 : signal is "none";
    signal ap_block_pp0_stage37 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage39 : signal is "none";
    signal ap_block_pp0_stage39 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage41 : signal is "none";
    signal ap_block_pp0_stage41 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage43 : signal is "none";
    signal ap_block_pp0_stage43 : BOOLEAN;
    signal grp_fu_382_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_382_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage26 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage45 : signal is "none";
    signal ap_block_pp0_stage45 : BOOLEAN;
    signal empty_21_fu_443_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_s_fu_448_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_22_fu_456_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln3_fu_461_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln78_fu_481_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal shl_ln3_fu_485_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln78_fu_494_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln4_fu_499_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln75_fu_519_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_fu_524_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln75_1_fu_529_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_1_fu_549_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln75_1_fu_554_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_2_fu_562_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln75_2_fu_567_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_3_fu_587_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln75_2_fu_592_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_4_fu_600_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln75_3_fu_605_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_5_fu_625_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln75_3_fu_630_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_6_fu_638_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln75_4_fu_643_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_7_fu_663_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln75_4_fu_668_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_8_fu_676_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln75_5_fu_681_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_9_fu_701_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln75_5_fu_706_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_10_fu_714_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln75_6_fu_719_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_11_fu_739_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln75_6_fu_744_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_12_fu_752_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln75_7_fu_757_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_13_fu_777_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln75_7_fu_782_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_14_fu_790_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln75_8_fu_795_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_15_fu_815_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln75_8_fu_820_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_16_fu_828_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln75_9_fu_833_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_17_fu_858_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln75_9_fu_863_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_18_fu_871_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln75_s_fu_876_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_19_fu_901_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln75_s_fu_906_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_20_fu_914_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln75_10_fu_919_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_21_fu_948_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln75_10_fu_953_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_22_fu_961_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln75_11_fu_966_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_23_fu_991_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln75_11_fu_996_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_24_fu_1004_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln75_12_fu_1009_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_25_fu_1029_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln75_12_fu_1034_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_26_fu_1042_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln75_13_fu_1047_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_27_fu_1067_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln75_13_fu_1072_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_28_fu_1080_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln75_14_fu_1085_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln75_29_fu_1105_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln75_14_fu_1110_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln75_30_fu_1118_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln75_15_fu_1123_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_block_pp0_stage13_00001 : BOOLEAN;
    signal ap_block_pp0_stage15_00001 : BOOLEAN;
    signal ap_block_pp0_stage17_00001 : BOOLEAN;
    signal ap_block_pp0_stage19_00001 : BOOLEAN;
    signal ap_block_pp0_stage21_00001 : BOOLEAN;
    signal ap_block_pp0_stage23_00001 : BOOLEAN;
    signal ap_block_pp0_stage25_00001 : BOOLEAN;
    signal ap_block_pp0_stage27_00001 : BOOLEAN;
    signal ap_block_state30_pp0_stage29_iter0 : BOOLEAN;
    signal ap_block_pp0_stage29_00001 : BOOLEAN;
    signal ap_block_state32_pp0_stage31_iter0 : BOOLEAN;
    signal ap_block_pp0_stage31_00001 : BOOLEAN;
    signal ap_block_state34_pp0_stage33_iter0 : BOOLEAN;
    signal ap_block_pp0_stage33_00001 : BOOLEAN;
    signal ap_block_state36_pp0_stage35_iter0 : BOOLEAN;
    signal ap_block_pp0_stage35_00001 : BOOLEAN;
    signal ap_block_state38_pp0_stage37_iter0 : BOOLEAN;
    signal ap_block_pp0_stage37_00001 : BOOLEAN;
    signal ap_block_state40_pp0_stage39_iter0 : BOOLEAN;
    signal ap_block_pp0_stage39_00001 : BOOLEAN;
    signal ap_block_state42_pp0_stage41_iter0 : BOOLEAN;
    signal ap_block_pp0_stage41_00001 : BOOLEAN;
    signal ap_block_state44_pp0_stage43_iter0 : BOOLEAN;
    signal ap_block_pp0_stage43_00001 : BOOLEAN;
    signal grp_fu_378_ce : STD_LOGIC;
    signal ap_block_pp0_stage29_11001 : BOOLEAN;
    signal ap_block_pp0_stage31_11001 : BOOLEAN;
    signal ap_block_pp0_stage33_11001 : BOOLEAN;
    signal ap_block_pp0_stage35_11001 : BOOLEAN;
    signal ap_block_pp0_stage37_11001 : BOOLEAN;
    signal ap_block_pp0_stage39_11001 : BOOLEAN;
    signal ap_block_pp0_stage41_11001 : BOOLEAN;
    signal ap_block_pp0_stage43_11001 : BOOLEAN;
    signal grp_fu_382_ce : STD_LOGIC;
    signal grp_fu_386_ce : STD_LOGIC;
    signal ap_block_state46_pp0_stage45_iter0 : BOOLEAN;
    signal ap_block_pp0_stage45_11001 : BOOLEAN;
    signal ap_block_state47_pp0_stage46_iter0 : BOOLEAN;
    signal ap_block_pp0_stage46_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage46 : signal is "none";
    signal ap_block_state48_pp0_stage47_iter0 : BOOLEAN;
    signal ap_block_pp0_stage47_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage47 : signal is "none";
    signal ap_block_state49_pp0_stage48_iter0 : BOOLEAN;
    signal ap_block_pp0_stage48_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage48 : signal is "none";
    signal ap_block_state50_pp0_stage49_iter0 : BOOLEAN;
    signal ap_block_pp0_stage49_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage49 : signal is "none";
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (55 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal ap_block_pp0_stage20_subdone : BOOLEAN;
    signal ap_block_pp0_stage21_subdone : BOOLEAN;
    signal ap_block_pp0_stage22_subdone : BOOLEAN;
    signal ap_block_pp0_stage23_subdone : BOOLEAN;
    signal ap_block_pp0_stage24_subdone : BOOLEAN;
    signal ap_block_pp0_stage25_subdone : BOOLEAN;
    signal ap_block_pp0_stage26_subdone : BOOLEAN;
    signal ap_block_pp0_stage27_subdone : BOOLEAN;
    signal ap_block_pp0_stage28_subdone : BOOLEAN;
    signal ap_block_pp0_stage29_subdone : BOOLEAN;
    signal ap_block_pp0_stage30_subdone : BOOLEAN;
    signal ap_block_pp0_stage31_subdone : BOOLEAN;
    signal ap_block_pp0_stage32_subdone : BOOLEAN;
    signal ap_block_pp0_stage33_subdone : BOOLEAN;
    signal ap_block_pp0_stage34_subdone : BOOLEAN;
    signal ap_block_pp0_stage35_subdone : BOOLEAN;
    signal ap_block_pp0_stage36_subdone : BOOLEAN;
    signal ap_block_pp0_stage37_subdone : BOOLEAN;
    signal ap_block_pp0_stage38_subdone : BOOLEAN;
    signal ap_block_pp0_stage39_subdone : BOOLEAN;
    signal ap_block_pp0_stage40_subdone : BOOLEAN;
    signal ap_block_pp0_stage41_subdone : BOOLEAN;
    signal ap_block_pp0_stage42_subdone : BOOLEAN;
    signal ap_block_pp0_stage43_subdone : BOOLEAN;
    signal ap_block_pp0_stage44_subdone : BOOLEAN;
    signal ap_block_pp0_stage45_subdone : BOOLEAN;
    signal ap_block_pp0_stage46_subdone : BOOLEAN;
    signal ap_block_pp0_stage47_subdone : BOOLEAN;
    signal ap_block_pp0_stage48_subdone : BOOLEAN;
    signal ap_block_pp0_stage49_subdone : BOOLEAN;
    signal ap_block_pp0_stage50_subdone : BOOLEAN;
    signal ap_block_pp0_stage51_subdone : BOOLEAN;
    signal ap_block_pp0_stage52_subdone : BOOLEAN;
    signal ap_block_state54_pp0_stage53_iter0 : BOOLEAN;
    signal ap_block_pp0_stage53_subdone : BOOLEAN;
    signal ap_block_state55_pp0_stage54_iter0 : BOOLEAN;
    signal ap_block_pp0_stage54_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component covariance_faddfsub_32ns_32ns_32_2_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component covariance_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component covariance_fdiv_32ns_32ns_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component covariance_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fdiv_32ns_32ns_32_6_no_dsp_1_U12 : component covariance_fdiv_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_401,
        din1 => ap_const_lv32_41700000,
        ce => grp_fu_386_ce,
        dout => grp_fu_386_p2);

    flow_control_loop_pipe_sequential_init_U : component covariance_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage55) and (ap_const_boolean_0 = ap_block_pp0_stage55_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    j_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_114 <= zext_ln68_cast_fu_421_p1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0))) then 
                    j_fu_114 <= add_ln70_fu_1207_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage51_11001))) then
                bitcast_ln77_reg_1614 <= bitcast_ln77_fu_1203_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage50_11001))) then
                div1_reg_1609 <= grp_fu_386_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln70_fu_433_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                empty_20_reg_1270 <= empty_20_fu_439_p1;
                gmem_addr_5_reg_1296 <= sext_ln78_fu_509_p1;
                gmem_addr_reg_1289 <= sext_ln75_fu_471_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001))) then
                gmem_addr_10_read_reg_1496 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                gmem_addr_10_reg_1360 <= sext_ln75_9_fu_843_p1;
                gmem_addr_1_read_reg_1355 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001))) then
                gmem_addr_11_read_reg_1512 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                gmem_addr_11_reg_1377 <= sext_ln75_10_fu_886_p1;
                gmem_addr_2_read_reg_1372 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001))) then
                gmem_addr_12_read_reg_1523 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then
                gmem_addr_12_reg_1394 <= sext_ln75_11_fu_929_p1;
                gmem_addr_3_read_reg_1389 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001))) then
                gmem_addr_13_read_reg_1539 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001))) then
                gmem_addr_13_reg_1416 <= sext_ln75_12_fu_976_p1;
                gmem_addr_4_read_reg_1411 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001))) then
                gmem_addr_14_read_reg_1550 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001))) then
                gmem_addr_14_reg_1433 <= sext_ln75_13_fu_1019_p1;
                gmem_addr_15_reg_1439 <= sext_ln75_14_fu_1057_p1;
                gmem_addr_16_reg_1445 <= sext_ln75_15_fu_1095_p1;
                gmem_addr_17_reg_1451 <= sext_ln75_16_fu_1133_p1;
                gmem_addr_6_read_reg_1428 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001))) then
                gmem_addr_15_read_reg_1566 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001))) then
                gmem_addr_16_read_reg_1577 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001))) then
                gmem_addr_17_read_reg_1593 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                gmem_addr_1_reg_1302 <= sext_ln75_1_fu_539_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                gmem_addr_2_reg_1308 <= sext_ln75_2_fu_577_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                gmem_addr_3_reg_1314 <= sext_ln75_3_fu_615_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                gmem_addr_4_reg_1320 <= sext_ln75_4_fu_653_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                gmem_addr_6_reg_1326 <= sext_ln75_5_fu_691_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001))) then
                gmem_addr_7_read_reg_1463 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                gmem_addr_7_reg_1332 <= sext_ln75_6_fu_729_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001))) then
                gmem_addr_8_read_reg_1474 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                gmem_addr_8_reg_1338 <= sext_ln75_7_fu_767_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then
                gmem_addr_9_read_reg_1485 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                gmem_addr_9_reg_1349 <= sext_ln75_8_fu_805_p1;
                gmem_addr_read_reg_1344 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                icmp_ln70_reg_1266 <= icmp_ln70_fu_433_p2;
                j_1_reg_1260 <= j_fu_114;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001))) then
                mul_10_reg_1555 <= grp_fu_228_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001))) then
                mul_12_reg_1582 <= grp_fu_228_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001))) then
                mul_14_reg_1604 <= grp_fu_228_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001))) then
                mul_7_reg_1501 <= grp_fu_228_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001))) then
                mul_9_reg_1528 <= grp_fu_228_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)))) then
                reg_391 <= grp_fu_228_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)))) then
                reg_396 <= grp_fu_228_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage44) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage44_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage42) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage42_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage40) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage40_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage38) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage38_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage36) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage36_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage34) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage34_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage32) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage32_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage30_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage28_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)))) then
                reg_401 <= grp_fu_224_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)))) then
                reg_407 <= grp_fu_228_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)))) then
                reg_412 <= grp_fu_228_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    zext_ln70_cast_reg_1255(7 downto 0) <= zext_ln70_cast_fu_417_p1(7 downto 0);
            end if;
        end if;
    end process;
    zext_ln70_cast_reg_1255(61 downto 8) <= "000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_condition_exit_pp0_iter0_stage1, ap_block_pp0_stage55_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone, ap_block_pp0_stage19_subdone, ap_block_pp0_stage20_subdone, ap_block_pp0_stage21_subdone, ap_block_pp0_stage22_subdone, ap_block_pp0_stage23_subdone, ap_block_pp0_stage24_subdone, ap_block_pp0_stage25_subdone, ap_block_pp0_stage26_subdone, ap_block_pp0_stage27_subdone, ap_block_pp0_stage28_subdone, ap_block_pp0_stage29_subdone, ap_block_pp0_stage30_subdone, ap_block_pp0_stage31_subdone, ap_block_pp0_stage32_subdone, ap_block_pp0_stage33_subdone, ap_block_pp0_stage34_subdone, ap_block_pp0_stage35_subdone, ap_block_pp0_stage36_subdone, ap_block_pp0_stage37_subdone, ap_block_pp0_stage38_subdone, ap_block_pp0_stage39_subdone, ap_block_pp0_stage40_subdone, ap_block_pp0_stage41_subdone, ap_block_pp0_stage42_subdone, ap_block_pp0_stage43_subdone, ap_block_pp0_stage44_subdone, ap_block_pp0_stage45_subdone, ap_block_pp0_stage46_subdone, ap_block_pp0_stage47_subdone, ap_block_pp0_stage48_subdone, ap_block_pp0_stage49_subdone, ap_block_pp0_stage50_subdone, ap_block_pp0_stage51_subdone, ap_block_pp0_stage52_subdone, ap_block_pp0_stage53_subdone, ap_block_pp0_stage54_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when ap_ST_fsm_pp0_stage20 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage20_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                end if;
            when ap_ST_fsm_pp0_stage21 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage21_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                end if;
            when ap_ST_fsm_pp0_stage22 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage22_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                end if;
            when ap_ST_fsm_pp0_stage23 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage23_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                end if;
            when ap_ST_fsm_pp0_stage24 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage24_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                end if;
            when ap_ST_fsm_pp0_stage25 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage25_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                end if;
            when ap_ST_fsm_pp0_stage26 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage26_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                end if;
            when ap_ST_fsm_pp0_stage27 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage27_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                end if;
            when ap_ST_fsm_pp0_stage28 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage28_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                end if;
            when ap_ST_fsm_pp0_stage29 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage29_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                end if;
            when ap_ST_fsm_pp0_stage30 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage30_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                end if;
            when ap_ST_fsm_pp0_stage31 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage31_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage32;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                end if;
            when ap_ST_fsm_pp0_stage32 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage32_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage32;
                end if;
            when ap_ST_fsm_pp0_stage33 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage33_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage34;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage33;
                end if;
            when ap_ST_fsm_pp0_stage34 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage34_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage35;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage34;
                end if;
            when ap_ST_fsm_pp0_stage35 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage35_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage36;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage35;
                end if;
            when ap_ST_fsm_pp0_stage36 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage36_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage37;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage36;
                end if;
            when ap_ST_fsm_pp0_stage37 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage37_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage38;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage37;
                end if;
            when ap_ST_fsm_pp0_stage38 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage38_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage39;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage38;
                end if;
            when ap_ST_fsm_pp0_stage39 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage39_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage40;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage39;
                end if;
            when ap_ST_fsm_pp0_stage40 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage40_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage41;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage40;
                end if;
            when ap_ST_fsm_pp0_stage41 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage41_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage42;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage41;
                end if;
            when ap_ST_fsm_pp0_stage42 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage42_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage43;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage42;
                end if;
            when ap_ST_fsm_pp0_stage43 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage43_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage44;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage43;
                end if;
            when ap_ST_fsm_pp0_stage44 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage44_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage45;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage44;
                end if;
            when ap_ST_fsm_pp0_stage45 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage45_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage46;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage45;
                end if;
            when ap_ST_fsm_pp0_stage46 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage46_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage47;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage46;
                end if;
            when ap_ST_fsm_pp0_stage47 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage47_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage48;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage47;
                end if;
            when ap_ST_fsm_pp0_stage48 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage48_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage49;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage48;
                end if;
            when ap_ST_fsm_pp0_stage49 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage49_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage50;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage49;
                end if;
            when ap_ST_fsm_pp0_stage50 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage50_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage51;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage50;
                end if;
            when ap_ST_fsm_pp0_stage51 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage51_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage52;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage51;
                end if;
            when ap_ST_fsm_pp0_stage52 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage52_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage53;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage52;
                end if;
            when ap_ST_fsm_pp0_stage53 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage53_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage54;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage53;
                end if;
            when ap_ST_fsm_pp0_stage54 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage54_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage55;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage54;
                end if;
            when ap_ST_fsm_pp0_stage55 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage55_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage55;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln70_fu_1207_p2 <= std_logic_vector(unsigned(j_1_reg_1260) + unsigned(ap_const_lv64_1));
    add_ln75_10_fu_714_p2 <= std_logic_vector(unsigned(shl_ln75_5_fu_706_p3) + unsigned(data));
    add_ln75_11_fu_739_p2 <= std_logic_vector(unsigned(empty_20_reg_1270) + unsigned(ap_const_lv62_60));
    add_ln75_12_fu_752_p2 <= std_logic_vector(unsigned(shl_ln75_6_fu_744_p3) + unsigned(data));
    add_ln75_13_fu_777_p2 <= std_logic_vector(unsigned(empty_20_reg_1270) + unsigned(ap_const_lv62_70));
    add_ln75_14_fu_790_p2 <= std_logic_vector(unsigned(shl_ln75_7_fu_782_p3) + unsigned(data));
    add_ln75_15_fu_815_p2 <= std_logic_vector(unsigned(empty_20_reg_1270) + unsigned(ap_const_lv62_80));
    add_ln75_16_fu_828_p2 <= std_logic_vector(unsigned(shl_ln75_8_fu_820_p3) + unsigned(data));
    add_ln75_17_fu_858_p2 <= std_logic_vector(unsigned(empty_20_reg_1270) + unsigned(ap_const_lv62_90));
    add_ln75_18_fu_871_p2 <= std_logic_vector(unsigned(shl_ln75_9_fu_863_p3) + unsigned(data));
    add_ln75_19_fu_901_p2 <= std_logic_vector(unsigned(empty_20_reg_1270) + unsigned(ap_const_lv62_A0));
    add_ln75_1_fu_549_p2 <= std_logic_vector(unsigned(empty_20_reg_1270) + unsigned(ap_const_lv62_10));
    add_ln75_20_fu_914_p2 <= std_logic_vector(unsigned(shl_ln75_s_fu_906_p3) + unsigned(data));
    add_ln75_21_fu_948_p2 <= std_logic_vector(unsigned(empty_20_reg_1270) + unsigned(ap_const_lv62_B0));
    add_ln75_22_fu_961_p2 <= std_logic_vector(unsigned(shl_ln75_10_fu_953_p3) + unsigned(data));
    add_ln75_23_fu_991_p2 <= std_logic_vector(unsigned(empty_20_reg_1270) + unsigned(ap_const_lv62_C0));
    add_ln75_24_fu_1004_p2 <= std_logic_vector(unsigned(shl_ln75_11_fu_996_p3) + unsigned(data));
    add_ln75_25_fu_1029_p2 <= std_logic_vector(unsigned(empty_20_reg_1270) + unsigned(ap_const_lv62_D0));
    add_ln75_26_fu_1042_p2 <= std_logic_vector(unsigned(shl_ln75_12_fu_1034_p3) + unsigned(data));
    add_ln75_27_fu_1067_p2 <= std_logic_vector(unsigned(empty_20_reg_1270) + unsigned(ap_const_lv62_E0));
    add_ln75_28_fu_1080_p2 <= std_logic_vector(unsigned(shl_ln75_13_fu_1072_p3) + unsigned(data));
    add_ln75_29_fu_1105_p2 <= std_logic_vector(unsigned(empty_20_reg_1270) + unsigned(ap_const_lv62_F0));
    add_ln75_2_fu_562_p2 <= std_logic_vector(unsigned(shl_ln75_1_fu_554_p3) + unsigned(data));
    add_ln75_30_fu_1118_p2 <= std_logic_vector(unsigned(shl_ln75_14_fu_1110_p3) + unsigned(data));
    add_ln75_3_fu_587_p2 <= std_logic_vector(unsigned(empty_20_reg_1270) + unsigned(ap_const_lv62_20));
    add_ln75_4_fu_600_p2 <= std_logic_vector(unsigned(shl_ln75_2_fu_592_p3) + unsigned(data));
    add_ln75_5_fu_625_p2 <= std_logic_vector(unsigned(empty_20_reg_1270) + unsigned(ap_const_lv62_30));
    add_ln75_6_fu_638_p2 <= std_logic_vector(unsigned(shl_ln75_3_fu_630_p3) + unsigned(data));
    add_ln75_7_fu_663_p2 <= std_logic_vector(unsigned(empty_20_reg_1270) + unsigned(ap_const_lv62_40));
    add_ln75_8_fu_676_p2 <= std_logic_vector(unsigned(shl_ln75_4_fu_668_p3) + unsigned(data));
    add_ln75_9_fu_701_p2 <= std_logic_vector(unsigned(empty_20_reg_1270) + unsigned(ap_const_lv62_50));
    add_ln75_fu_524_p2 <= std_logic_vector(unsigned(shl_ln75_fu_519_p2) + unsigned(data));
    add_ln78_fu_494_p2 <= std_logic_vector(unsigned(shl_ln3_fu_485_p4) + unsigned(cov));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(20);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(21);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(22);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(23);
    ap_CS_fsm_pp0_stage24 <= ap_CS_fsm(24);
    ap_CS_fsm_pp0_stage25 <= ap_CS_fsm(25);
    ap_CS_fsm_pp0_stage26 <= ap_CS_fsm(26);
    ap_CS_fsm_pp0_stage27 <= ap_CS_fsm(27);
    ap_CS_fsm_pp0_stage28 <= ap_CS_fsm(28);
    ap_CS_fsm_pp0_stage29 <= ap_CS_fsm(29);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage30 <= ap_CS_fsm(30);
    ap_CS_fsm_pp0_stage31 <= ap_CS_fsm(31);
    ap_CS_fsm_pp0_stage32 <= ap_CS_fsm(32);
    ap_CS_fsm_pp0_stage33 <= ap_CS_fsm(33);
    ap_CS_fsm_pp0_stage34 <= ap_CS_fsm(34);
    ap_CS_fsm_pp0_stage35 <= ap_CS_fsm(35);
    ap_CS_fsm_pp0_stage36 <= ap_CS_fsm(36);
    ap_CS_fsm_pp0_stage37 <= ap_CS_fsm(37);
    ap_CS_fsm_pp0_stage38 <= ap_CS_fsm(38);
    ap_CS_fsm_pp0_stage39 <= ap_CS_fsm(39);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage40 <= ap_CS_fsm(40);
    ap_CS_fsm_pp0_stage41 <= ap_CS_fsm(41);
    ap_CS_fsm_pp0_stage42 <= ap_CS_fsm(42);
    ap_CS_fsm_pp0_stage43 <= ap_CS_fsm(43);
    ap_CS_fsm_pp0_stage44 <= ap_CS_fsm(44);
    ap_CS_fsm_pp0_stage45 <= ap_CS_fsm(45);
    ap_CS_fsm_pp0_stage46 <= ap_CS_fsm(46);
    ap_CS_fsm_pp0_stage47 <= ap_CS_fsm(47);
    ap_CS_fsm_pp0_stage48 <= ap_CS_fsm(48);
    ap_CS_fsm_pp0_stage49 <= ap_CS_fsm(49);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage50 <= ap_CS_fsm(50);
    ap_CS_fsm_pp0_stage51 <= ap_CS_fsm(51);
    ap_CS_fsm_pp0_stage52 <= ap_CS_fsm(52);
    ap_CS_fsm_pp0_stage55 <= ap_CS_fsm(55);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_BVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_BVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state11_io)
    begin
                ap_block_pp0_stage10_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state11_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state11_io)
    begin
                ap_block_pp0_stage10_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state11_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state12_io)
    begin
                ap_block_pp0_stage11_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state12_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state12_io)
    begin
                ap_block_pp0_stage11_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state12_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage12_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state13_io)
    begin
                ap_block_pp0_stage12_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage12_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state13_io)
    begin
                ap_block_pp0_stage12_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_00001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage13_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage13_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state14_io)
    begin
                ap_block_pp0_stage13_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state14_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage13_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state14_io)
    begin
                ap_block_pp0_stage13_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state14_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state15_io)
    begin
                ap_block_pp0_stage14_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state15_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage14_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state15_io)
    begin
                ap_block_pp0_stage14_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state15_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_00001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage15_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage15_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state16_io)
    begin
                ap_block_pp0_stage15_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state16_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage15_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state16_io)
    begin
                ap_block_pp0_stage15_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state16_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage16_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state17_io)
    begin
                ap_block_pp0_stage16_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state17_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage16_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state17_io)
    begin
                ap_block_pp0_stage16_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state17_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage17_00001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage17_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage17_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state18_io)
    begin
                ap_block_pp0_stage17_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state18_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage17_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state18_io)
    begin
                ap_block_pp0_stage17_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state18_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage18_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state19_io)
    begin
                ap_block_pp0_stage18_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state19_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage18_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state19_io)
    begin
                ap_block_pp0_stage18_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state19_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage19_00001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage19_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage19_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage19_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage19_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage19_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_BVALID)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_gmem_BVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_BVALID)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_gmem_BVALID = ap_const_logic_0));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage20_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage20_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage20_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage20_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;

        ap_block_pp0_stage21 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage21_00001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage21_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage21_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage21_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage21_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage21_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;

        ap_block_pp0_stage22 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage22_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage22_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage22_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage22_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;

        ap_block_pp0_stage23 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage23_00001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage23_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage23_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage23_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage23_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage23_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;

        ap_block_pp0_stage24 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage24_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage24_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage24_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage24_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;

        ap_block_pp0_stage25 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage25_00001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage25_00001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage25_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage25_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_pp0_stage25_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_pp0_stage25_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;

        ap_block_pp0_stage26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage26_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage27_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage28_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage28_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage29_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state3_io)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state3_io)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage31_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage32_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage32_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage33_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage33_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage33_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage34_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage34_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage35_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage36_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage36_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage37_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage38_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage38_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage39_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state4_io)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state4_io)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage40_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage40_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage41_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage41_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage41_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage42_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage42_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage43_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage43_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage43_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage44_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage44_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage45_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage45_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage46_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage46_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage47_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage47_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage48_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage48_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage49_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage49_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state5_io)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state5_io)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage50 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage50_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state51_io)
    begin
                ap_block_pp0_stage50_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state51_io));
    end process;


    ap_block_pp0_stage50_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state51_io)
    begin
                ap_block_pp0_stage50_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state51_io));
    end process;

        ap_block_pp0_stage51 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage51_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage51_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state52_io)
    begin
                ap_block_pp0_stage51_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state52_io));
    end process;


    ap_block_pp0_stage51_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state52_io)
    begin
                ap_block_pp0_stage51_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state52_io));
    end process;

        ap_block_pp0_stage52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage52_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage52_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state53_io)
    begin
                ap_block_pp0_stage52_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state53_io));
    end process;


    ap_block_pp0_stage52_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state53_io)
    begin
                ap_block_pp0_stage52_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state53_io));
    end process;

        ap_block_pp0_stage53_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage54_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage55_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state6_io)
    begin
                ap_block_pp0_stage5_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state6_io)
    begin
                ap_block_pp0_stage5_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state7_io)
    begin
                ap_block_pp0_stage6_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_io));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state7_io)
    begin
                ap_block_pp0_stage6_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_io));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state8_io)
    begin
                ap_block_pp0_stage7_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_io));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state8_io)
    begin
                ap_block_pp0_stage7_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_io));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state9_io)
    begin
                ap_block_pp0_stage8_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_io));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state9_io)
    begin
                ap_block_pp0_stage8_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_io));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state10_io)
    begin
                ap_block_pp0_stage9_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_block_state10_io)
    begin
                ap_block_pp0_stage9_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0))));
    end process;


    ap_block_state10_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state10_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state10_pp0_stage9_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state10_pp0_stage9_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state11_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state11_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state11_pp0_stage10_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state11_pp0_stage10_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state12_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state12_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state12_pp0_stage11_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state12_pp0_stage11_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state13_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state13_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state13_pp0_stage12_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state13_pp0_stage12_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state14_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state14_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state14_pp0_stage13_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state14_pp0_stage13_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state15_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state15_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state15_pp0_stage14_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state15_pp0_stage14_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state16_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state16_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state16_pp0_stage15_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state16_pp0_stage15_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state17_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state17_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state17_pp0_stage16_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state17_pp0_stage16_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state18_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state18_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state18_pp0_stage17_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state18_pp0_stage17_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state19_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state19_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state19_pp0_stage18_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state19_pp0_stage18_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state20_pp0_stage19_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state20_pp0_stage19_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state21_pp0_stage20_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state21_pp0_stage20_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state22_pp0_stage21_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state22_pp0_stage21_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state23_pp0_stage22_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state23_pp0_stage22_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state24_pp0_stage23_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state24_pp0_stage23_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state25_pp0_stage24_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state25_pp0_stage24_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;


    ap_block_state26_pp0_stage25_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state26_pp0_stage25_iter0 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_RVALID = ap_const_logic_0));
    end process;

        ap_block_state27_pp0_stage26_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage27_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage28_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage29_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage30_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage31_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage32_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage33_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage34_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage35_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage36_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage37_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage38_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state3_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage39_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage40_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage41_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage42_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage43_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage44_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage45_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage46_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage47_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage48_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state4_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage49_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state51_io_assign_proc : process(m_axi_gmem_AWREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state51_io <= ((m_axi_gmem_AWREADY = ap_const_logic_0) and (icmp_ln70_reg_1266 = ap_const_lv1_0));
    end process;

        ap_block_state51_pp0_stage50_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state52_io_assign_proc : process(m_axi_gmem_AWREADY, m_axi_gmem_WREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state52_io <= (((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_WREADY = ap_const_logic_0)) or ((m_axi_gmem_AWREADY = ap_const_logic_0) and (icmp_ln70_reg_1266 = ap_const_lv1_0)));
    end process;

        ap_block_state52_pp0_stage51_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state53_io_assign_proc : process(m_axi_gmem_WREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state53_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_WREADY = ap_const_logic_0));
    end process;

        ap_block_state53_pp0_stage52_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage53_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage54_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage55_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state57_pp0_stage0_iter1_assign_proc : process(m_axi_gmem_BVALID, icmp_ln70_reg_1266)
    begin
                ap_block_state57_pp0_stage0_iter1 <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_BVALID = ap_const_logic_0));
    end process;


    ap_block_state58_pp0_stage1_iter1_assign_proc : process(m_axi_gmem_BVALID)
    begin
                ap_block_state58_pp0_stage1_iter1 <= (m_axi_gmem_BVALID = ap_const_logic_0);
    end process;


    ap_block_state5_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state5_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state6_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;

        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state7_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;

        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state8_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;

        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln70_reg_1266)
    begin
                ap_block_state9_io <= ((icmp_ln70_reg_1266 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;

        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, icmp_ln70_fu_433_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln70_fu_433_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage55, ap_block_pp0_stage55_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage55) and (ap_const_boolean_0 = ap_block_pp0_stage55_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln75_10_fu_1168_p1 <= gmem_addr_11_read_reg_1512;
    bitcast_ln75_11_fu_1173_p1 <= gmem_addr_12_read_reg_1523;
    bitcast_ln75_12_fu_1178_p1 <= gmem_addr_13_read_reg_1539;
    bitcast_ln75_13_fu_1183_p1 <= gmem_addr_14_read_reg_1550;
    bitcast_ln75_14_fu_1188_p1 <= gmem_addr_15_read_reg_1566;
    bitcast_ln75_15_fu_1193_p1 <= gmem_addr_16_read_reg_1577;
    bitcast_ln75_16_fu_1198_p1 <= gmem_addr_17_read_reg_1593;
    bitcast_ln75_1_fu_853_p1 <= gmem_addr_1_read_reg_1355;
    bitcast_ln75_2_fu_896_p1 <= gmem_addr_2_read_reg_1372;
    bitcast_ln75_3_fu_943_p1 <= gmem_addr_3_read_reg_1389;
    bitcast_ln75_4_fu_986_p1 <= gmem_addr_4_read_reg_1411;
    bitcast_ln75_5_fu_1143_p1 <= gmem_addr_6_read_reg_1428;
    bitcast_ln75_6_fu_1148_p1 <= gmem_addr_7_read_reg_1463;
    bitcast_ln75_7_fu_1153_p1 <= gmem_addr_8_read_reg_1474;
    bitcast_ln75_8_fu_1158_p1 <= gmem_addr_9_read_reg_1485;
    bitcast_ln75_9_fu_1163_p1 <= gmem_addr_10_read_reg_1496;
    bitcast_ln75_fu_939_p1 <= gmem_addr_read_reg_1344;
    bitcast_ln77_fu_1203_p1 <= div1_reg_1609;
    empty_20_fu_439_p1 <= j_fu_114(62 - 1 downto 0);
    empty_21_fu_443_p2 <= std_logic_vector(unsigned(empty_20_fu_439_p1) + unsigned(zext_ln70_cast_reg_1255));
    empty_22_fu_456_p2 <= std_logic_vector(unsigned(tmp_s_fu_448_p3) + unsigned(cov));

    gmem_blk_n_AR_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_ARREADY, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, icmp_ln70_reg_1266, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage16)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_AWREADY, icmp_ln70_reg_1266, ap_CS_fsm_pp0_stage50, ap_block_pp0_stage50, ap_CS_fsm_pp0_stage51, ap_block_pp0_stage51)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage51)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage50)))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, m_axi_gmem_BVALID, icmp_ln70_reg_1266, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln70_reg_1266, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage25)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage24)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage23)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage22)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage21)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage20)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage19)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage16)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9)))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_WREADY, icmp_ln70_reg_1266, ap_CS_fsm_pp0_stage51, ap_block_pp0_stage51, ap_CS_fsm_pp0_stage52, ap_block_pp0_stage52)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage52) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage52)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage51)))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_224_p_ce <= grp_fu_378_ce;
    grp_fu_224_p_din0 <= grp_fu_378_p0;
    grp_fu_224_p_din1 <= grp_fu_378_p1;
    grp_fu_224_p_opcode <= ap_const_lv2_0(1 - 1 downto 0);
    grp_fu_228_p_ce <= grp_fu_382_ce;
    grp_fu_228_p_din0 <= grp_fu_382_p0;
    grp_fu_228_p_din1 <= grp_fu_382_p1;

    grp_fu_378_ce_assign_proc : process(ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage14_11001, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage24_11001, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28_11001, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30_11001, ap_CS_fsm_pp0_stage32, ap_block_pp0_stage32_11001, ap_CS_fsm_pp0_stage34, ap_block_pp0_stage34_11001, ap_CS_fsm_pp0_stage36, ap_block_pp0_stage36_11001, ap_CS_fsm_pp0_stage38, ap_block_pp0_stage38_11001, ap_CS_fsm_pp0_stage40, ap_block_pp0_stage40_11001, ap_CS_fsm_pp0_stage42, ap_block_pp0_stage42_11001, ap_CS_fsm_pp0_stage44, ap_block_pp0_stage44_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage25_11001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27_11001, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage33, ap_CS_fsm_pp0_stage35, ap_CS_fsm_pp0_stage37, ap_CS_fsm_pp0_stage39, ap_CS_fsm_pp0_stage41, ap_CS_fsm_pp0_stage43, ap_block_pp0_stage29_11001, ap_block_pp0_stage31_11001, ap_block_pp0_stage33_11001, ap_block_pp0_stage35_11001, ap_block_pp0_stage37_11001, ap_block_pp0_stage39_11001, ap_block_pp0_stage41_11001, ap_block_pp0_stage43_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage44) and (ap_const_boolean_0 = ap_block_pp0_stage44_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage42) and (ap_const_boolean_0 = ap_block_pp0_stage42_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage40) and (ap_const_boolean_0 = ap_block_pp0_stage40_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage38) and (ap_const_boolean_0 = ap_block_pp0_stage38_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage36) and (ap_const_boolean_0 = ap_block_pp0_stage36_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage34) and (ap_const_boolean_0 = ap_block_pp0_stage34_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage32) and (ap_const_boolean_0 = ap_block_pp0_stage32_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_const_boolean_0 = ap_block_pp0_stage30_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_const_boolean_0 = ap_block_pp0_stage28_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage43) and (ap_const_boolean_0 = ap_block_pp0_stage43_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage41) and (ap_const_boolean_0 = ap_block_pp0_stage41_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_const_boolean_0 = ap_block_pp0_stage39_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage37) and (ap_const_boolean_0 = ap_block_pp0_stage37_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage35) and (ap_const_boolean_0 = ap_block_pp0_stage35_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (ap_const_boolean_0 = ap_block_pp0_stage33_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_const_boolean_0 = ap_block_pp0_stage31_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_const_boolean_0 = ap_block_pp0_stage29_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001)))) then 
            grp_fu_378_ce <= ap_const_logic_1;
        else 
            grp_fu_378_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_378_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, reg_401, bitcast_ln75_fu_939_p1, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage31, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage33, ap_CS_fsm_pp0_stage35, ap_block_pp0_stage35, ap_CS_fsm_pp0_stage37, ap_block_pp0_stage37, ap_CS_fsm_pp0_stage39, ap_block_pp0_stage39, ap_CS_fsm_pp0_stage41, ap_block_pp0_stage41, ap_CS_fsm_pp0_stage43, ap_block_pp0_stage43)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage43) and (ap_const_boolean_0 = ap_block_pp0_stage43)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41) and (ap_const_boolean_0 = ap_block_pp0_stage41)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_const_boolean_0 = ap_block_pp0_stage39)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37) and (ap_const_boolean_0 = ap_block_pp0_stage37)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35) and (ap_const_boolean_0 = ap_block_pp0_stage35)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (ap_const_boolean_0 = ap_block_pp0_stage33)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_const_boolean_0 = ap_block_pp0_stage31)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_const_boolean_0 = ap_block_pp0_stage29)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27)))) then 
            grp_fu_378_p0 <= reg_401;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
            grp_fu_378_p0 <= bitcast_ln75_fu_939_p1;
        else 
            grp_fu_378_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_378_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, reg_391, reg_396, reg_407, reg_412, mul_7_reg_1501, mul_9_reg_1528, mul_10_reg_1555, mul_12_reg_1582, mul_14_reg_1604, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage31, ap_CS_fsm_pp0_stage33, ap_block_pp0_stage33, ap_CS_fsm_pp0_stage35, ap_block_pp0_stage35, ap_CS_fsm_pp0_stage37, ap_block_pp0_stage37, ap_CS_fsm_pp0_stage39, ap_block_pp0_stage39, ap_CS_fsm_pp0_stage41, ap_block_pp0_stage41, ap_CS_fsm_pp0_stage43, ap_block_pp0_stage43)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage43) and (ap_const_boolean_0 = ap_block_pp0_stage43))) then 
            grp_fu_378_p1 <= mul_14_reg_1604;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage39) and (ap_const_boolean_0 = ap_block_pp0_stage39))) then 
            grp_fu_378_p1 <= mul_12_reg_1582;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage35) and (ap_const_boolean_0 = ap_block_pp0_stage35))) then 
            grp_fu_378_p1 <= mul_10_reg_1555;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_const_boolean_0 = ap_block_pp0_stage31))) then 
            grp_fu_378_p1 <= mul_9_reg_1528;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27))) then 
            grp_fu_378_p1 <= mul_7_reg_1501;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage37) and (ap_const_boolean_0 = ap_block_pp0_stage37)))) then 
            grp_fu_378_p1 <= reg_412;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_const_boolean_0 = ap_block_pp0_stage29)))) then 
            grp_fu_378_p1 <= reg_407;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage33) and (ap_const_boolean_0 = ap_block_pp0_stage33)))) then 
            grp_fu_378_p1 <= reg_396;
        elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage41) and (ap_const_boolean_0 = ap_block_pp0_stage41)))) then 
            grp_fu_378_p1 <= reg_391;
        else 
            grp_fu_378_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_382_ce_assign_proc : process(ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage12_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage18_11001, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage25_11001, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001)))) then 
            grp_fu_382_ce <= ap_const_logic_1;
        else 
            grp_fu_382_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_382_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, ap_CS_fsm_pp0_stage26, bitcast_ln75_1_fu_853_p1, bitcast_ln75_2_fu_896_p1, bitcast_ln75_3_fu_943_p1, bitcast_ln75_4_fu_986_p1, bitcast_ln75_5_fu_1143_p1, bitcast_ln75_6_fu_1148_p1, bitcast_ln75_7_fu_1153_p1, bitcast_ln75_8_fu_1158_p1, bitcast_ln75_9_fu_1163_p1, bitcast_ln75_10_fu_1168_p1, bitcast_ln75_11_fu_1173_p1, bitcast_ln75_12_fu_1178_p1, bitcast_ln75_13_fu_1183_p1, bitcast_ln75_14_fu_1188_p1, bitcast_ln75_15_fu_1193_p1, bitcast_ln75_16_fu_1198_p1, ap_block_pp0_stage26)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26))) then 
                grp_fu_382_p0 <= bitcast_ln75_16_fu_1198_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25))) then 
                grp_fu_382_p0 <= bitcast_ln75_15_fu_1193_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24))) then 
                grp_fu_382_p0 <= bitcast_ln75_14_fu_1188_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23))) then 
                grp_fu_382_p0 <= bitcast_ln75_13_fu_1183_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22))) then 
                grp_fu_382_p0 <= bitcast_ln75_12_fu_1178_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21))) then 
                grp_fu_382_p0 <= bitcast_ln75_11_fu_1173_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20))) then 
                grp_fu_382_p0 <= bitcast_ln75_10_fu_1168_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
                grp_fu_382_p0 <= bitcast_ln75_9_fu_1163_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18))) then 
                grp_fu_382_p0 <= bitcast_ln75_8_fu_1158_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17))) then 
                grp_fu_382_p0 <= bitcast_ln75_7_fu_1153_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16))) then 
                grp_fu_382_p0 <= bitcast_ln75_6_fu_1148_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15))) then 
                grp_fu_382_p0 <= bitcast_ln75_5_fu_1143_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14))) then 
                grp_fu_382_p0 <= bitcast_ln75_4_fu_986_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
                grp_fu_382_p0 <= bitcast_ln75_3_fu_943_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
                grp_fu_382_p0 <= bitcast_ln75_2_fu_896_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
                grp_fu_382_p0 <= bitcast_ln75_1_fu_853_p1;
            else 
                grp_fu_382_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_382_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_382_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, ap_CS_fsm_pp0_stage26, bitcast_ln75_1_fu_853_p1, bitcast_ln75_2_fu_896_p1, bitcast_ln75_3_fu_943_p1, bitcast_ln75_4_fu_986_p1, bitcast_ln75_5_fu_1143_p1, bitcast_ln75_6_fu_1148_p1, bitcast_ln75_7_fu_1153_p1, bitcast_ln75_8_fu_1158_p1, bitcast_ln75_9_fu_1163_p1, bitcast_ln75_10_fu_1168_p1, bitcast_ln75_11_fu_1173_p1, bitcast_ln75_12_fu_1178_p1, bitcast_ln75_13_fu_1183_p1, bitcast_ln75_14_fu_1188_p1, bitcast_ln75_15_fu_1193_p1, bitcast_ln75_16_fu_1198_p1, ap_block_pp0_stage26)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26))) then 
                grp_fu_382_p1 <= bitcast_ln75_16_fu_1198_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25))) then 
                grp_fu_382_p1 <= bitcast_ln75_15_fu_1193_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24))) then 
                grp_fu_382_p1 <= bitcast_ln75_14_fu_1188_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23))) then 
                grp_fu_382_p1 <= bitcast_ln75_13_fu_1183_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22))) then 
                grp_fu_382_p1 <= bitcast_ln75_12_fu_1178_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21))) then 
                grp_fu_382_p1 <= bitcast_ln75_11_fu_1173_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20))) then 
                grp_fu_382_p1 <= bitcast_ln75_10_fu_1168_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19))) then 
                grp_fu_382_p1 <= bitcast_ln75_9_fu_1163_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18))) then 
                grp_fu_382_p1 <= bitcast_ln75_8_fu_1158_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17))) then 
                grp_fu_382_p1 <= bitcast_ln75_7_fu_1153_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16))) then 
                grp_fu_382_p1 <= bitcast_ln75_6_fu_1148_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15))) then 
                grp_fu_382_p1 <= bitcast_ln75_5_fu_1143_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14))) then 
                grp_fu_382_p1 <= bitcast_ln75_4_fu_986_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13))) then 
                grp_fu_382_p1 <= bitcast_ln75_3_fu_943_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
                grp_fu_382_p1 <= bitcast_ln75_2_fu_896_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11))) then 
                grp_fu_382_p1 <= bitcast_ln75_1_fu_853_p1;
            else 
                grp_fu_382_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_382_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_386_ce_assign_proc : process(ap_CS_fsm_pp0_stage50, ap_block_pp0_stage50_11001, ap_CS_fsm_pp0_stage45, ap_block_pp0_stage45_11001, ap_block_pp0_stage46_11001, ap_CS_fsm_pp0_stage46, ap_block_pp0_stage47_11001, ap_CS_fsm_pp0_stage47, ap_block_pp0_stage48_11001, ap_CS_fsm_pp0_stage48, ap_block_pp0_stage49_11001, ap_CS_fsm_pp0_stage49)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (ap_const_boolean_0 = ap_block_pp0_stage50_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage49) and (ap_const_boolean_0 = ap_block_pp0_stage49_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage48) and (ap_const_boolean_0 = ap_block_pp0_stage48_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage47) and (ap_const_boolean_0 = ap_block_pp0_stage47_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage46) and (ap_const_boolean_0 = ap_block_pp0_stage46_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage45) and (ap_const_boolean_0 = ap_block_pp0_stage45_11001)))) then 
            grp_fu_386_ce <= ap_const_logic_1;
        else 
            grp_fu_386_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln70_fu_433_p2 <= "1" when (j_fu_114 = ap_const_lv64_10) else "0";

    m_axi_gmem_ARADDR_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln70_reg_1266, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage12_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage17_11001, gmem_addr_reg_1289, gmem_addr_1_reg_1302, ap_block_pp0_stage2_11001, gmem_addr_2_reg_1308, ap_block_pp0_stage3_11001, gmem_addr_3_reg_1314, ap_block_pp0_stage4_11001, gmem_addr_4_reg_1320, ap_block_pp0_stage5_11001, gmem_addr_6_reg_1326, ap_block_pp0_stage6_11001, gmem_addr_7_reg_1332, ap_block_pp0_stage7_11001, gmem_addr_8_reg_1338, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, gmem_addr_9_reg_1349, ap_block_pp0_stage10_11001, gmem_addr_10_reg_1360, ap_block_pp0_stage11_11001, gmem_addr_11_reg_1377, gmem_addr_12_reg_1394, gmem_addr_13_reg_1416, gmem_addr_14_reg_1433, gmem_addr_15_reg_1439, gmem_addr_16_reg_1445, gmem_addr_17_reg_1451)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_17_reg_1451;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_16_reg_1445;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_15_reg_1439;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_14_reg_1433;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_13_reg_1416;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_12_reg_1394;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_11_reg_1377;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_10_reg_1360;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_9_reg_1349;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_8_reg_1338;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_7_reg_1332;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_6_reg_1326;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_4_reg_1320;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_3_reg_1314;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_2_reg_1308;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_1_reg_1302;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
                m_axi_gmem_ARADDR <= gmem_addr_reg_1289;
            else 
                m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_1;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_ARVALID_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, icmp_ln70_reg_1266, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage12_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_AWADDR_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln70_reg_1266, ap_CS_fsm_pp0_stage50, ap_CS_fsm_pp0_stage51, gmem_addr_reg_1289, gmem_addr_5_reg_1296, ap_block_pp0_stage50_11001, ap_block_pp0_stage51_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (ap_const_boolean_0 = ap_block_pp0_stage51_11001))) then 
                m_axi_gmem_AWADDR <= gmem_addr_5_reg_1296;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (ap_const_boolean_0 = ap_block_pp0_stage50_11001))) then 
                m_axi_gmem_AWADDR <= gmem_addr_reg_1289;
            else 
                m_axi_gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_1;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;

    m_axi_gmem_AWVALID_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln70_reg_1266, ap_CS_fsm_pp0_stage50, ap_CS_fsm_pp0_stage51, ap_block_pp0_stage50_11001, ap_block_pp0_stage51_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage51_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage50) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage50_11001)))) then 
            m_axi_gmem_AWVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_BREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, icmp_ln70_reg_1266, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            m_axi_gmem_BREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_RREADY_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln70_reg_1266, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage12_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage25_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_WDATA_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln70_reg_1266, ap_CS_fsm_pp0_stage51, ap_CS_fsm_pp0_stage52, bitcast_ln77_fu_1203_p1, bitcast_ln77_reg_1614, ap_block_pp0_stage51_01001, ap_block_pp0_stage52_01001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln70_reg_1266 = ap_const_lv1_0))) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage52) and (ap_const_boolean_0 = ap_block_pp0_stage52_01001))) then 
                m_axi_gmem_WDATA <= bitcast_ln77_reg_1614;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (ap_const_boolean_0 = ap_block_pp0_stage51_01001))) then 
                m_axi_gmem_WDATA <= bitcast_ln77_fu_1203_p1;
            else 
                m_axi_gmem_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_gmem_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv4_F;
    m_axi_gmem_WUSER <= ap_const_lv1_0;

    m_axi_gmem_WVALID_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln70_reg_1266, ap_CS_fsm_pp0_stage51, ap_CS_fsm_pp0_stage52, ap_block_pp0_stage51_11001, ap_block_pp0_stage52_11001)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage52) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage52_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage51) and (icmp_ln70_reg_1266 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage51_11001)))) then 
            m_axi_gmem_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln75_10_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_s_fu_876_p4),64));

        sext_ln75_11_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_10_fu_919_p4),64));

        sext_ln75_12_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_11_fu_966_p4),64));

        sext_ln75_13_fu_1019_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_12_fu_1009_p4),64));

        sext_ln75_14_fu_1057_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_13_fu_1047_p4),64));

        sext_ln75_15_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_14_fu_1085_p4),64));

        sext_ln75_16_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_15_fu_1123_p4),64));

        sext_ln75_1_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_1_fu_529_p4),64));

        sext_ln75_2_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_2_fu_567_p4),64));

        sext_ln75_3_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_3_fu_605_p4),64));

        sext_ln75_4_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_4_fu_643_p4),64));

        sext_ln75_5_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_5_fu_681_p4),64));

        sext_ln75_6_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_6_fu_719_p4),64));

        sext_ln75_7_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_7_fu_757_p4),64));

        sext_ln75_8_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_8_fu_795_p4),64));

        sext_ln75_9_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln75_9_fu_833_p4),64));

        sext_ln75_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln3_fu_461_p4),64));

        sext_ln78_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_fu_499_p4),64));

    shl_ln3_fu_485_p4 <= ((trunc_ln78_fu_481_p1 & i_2_cast) & ap_const_lv2_0);
    shl_ln75_10_fu_953_p3 <= (add_ln75_21_fu_948_p2 & ap_const_lv2_0);
    shl_ln75_11_fu_996_p3 <= (add_ln75_23_fu_991_p2 & ap_const_lv2_0);
    shl_ln75_12_fu_1034_p3 <= (add_ln75_25_fu_1029_p2 & ap_const_lv2_0);
    shl_ln75_13_fu_1072_p3 <= (add_ln75_27_fu_1067_p2 & ap_const_lv2_0);
    shl_ln75_14_fu_1110_p3 <= (add_ln75_29_fu_1105_p2 & ap_const_lv2_0);
    shl_ln75_1_fu_554_p3 <= (add_ln75_1_fu_549_p2 & ap_const_lv2_0);
    shl_ln75_2_fu_592_p3 <= (add_ln75_3_fu_587_p2 & ap_const_lv2_0);
    shl_ln75_3_fu_630_p3 <= (add_ln75_5_fu_625_p2 & ap_const_lv2_0);
    shl_ln75_4_fu_668_p3 <= (add_ln75_7_fu_663_p2 & ap_const_lv2_0);
    shl_ln75_5_fu_706_p3 <= (add_ln75_9_fu_701_p2 & ap_const_lv2_0);
    shl_ln75_6_fu_744_p3 <= (add_ln75_11_fu_739_p2 & ap_const_lv2_0);
    shl_ln75_7_fu_782_p3 <= (add_ln75_13_fu_777_p2 & ap_const_lv2_0);
    shl_ln75_8_fu_820_p3 <= (add_ln75_15_fu_815_p2 & ap_const_lv2_0);
    shl_ln75_9_fu_863_p3 <= (add_ln75_17_fu_858_p2 & ap_const_lv2_0);
    shl_ln75_fu_519_p2 <= std_logic_vector(shift_left(unsigned(j_1_reg_1260),to_integer(unsigned('0' & ap_const_lv64_2(31-1 downto 0)))));
    shl_ln75_s_fu_906_p3 <= (add_ln75_19_fu_901_p2 & ap_const_lv2_0);
    tmp_s_fu_448_p3 <= (empty_21_fu_443_p2 & ap_const_lv2_0);
    trunc_ln3_fu_461_p4 <= empty_22_fu_456_p2(63 downto 2);
    trunc_ln4_fu_499_p4 <= add_ln78_fu_494_p2(63 downto 2);
    trunc_ln75_10_fu_919_p4 <= add_ln75_20_fu_914_p2(63 downto 2);
    trunc_ln75_11_fu_966_p4 <= add_ln75_22_fu_961_p2(63 downto 2);
    trunc_ln75_12_fu_1009_p4 <= add_ln75_24_fu_1004_p2(63 downto 2);
    trunc_ln75_13_fu_1047_p4 <= add_ln75_26_fu_1042_p2(63 downto 2);
    trunc_ln75_14_fu_1085_p4 <= add_ln75_28_fu_1080_p2(63 downto 2);
    trunc_ln75_15_fu_1123_p4 <= add_ln75_30_fu_1118_p2(63 downto 2);
    trunc_ln75_1_fu_529_p4 <= add_ln75_fu_524_p2(63 downto 2);
    trunc_ln75_2_fu_567_p4 <= add_ln75_2_fu_562_p2(63 downto 2);
    trunc_ln75_3_fu_605_p4 <= add_ln75_4_fu_600_p2(63 downto 2);
    trunc_ln75_4_fu_643_p4 <= add_ln75_6_fu_638_p2(63 downto 2);
    trunc_ln75_5_fu_681_p4 <= add_ln75_8_fu_676_p2(63 downto 2);
    trunc_ln75_6_fu_719_p4 <= add_ln75_10_fu_714_p2(63 downto 2);
    trunc_ln75_7_fu_757_p4 <= add_ln75_12_fu_752_p2(63 downto 2);
    trunc_ln75_8_fu_795_p4 <= add_ln75_14_fu_790_p2(63 downto 2);
    trunc_ln75_9_fu_833_p4 <= add_ln75_16_fu_828_p2(63 downto 2);
    trunc_ln75_s_fu_876_p4 <= add_ln75_18_fu_871_p2(63 downto 2);
    trunc_ln78_fu_481_p1 <= j_fu_114(58 - 1 downto 0);
    zext_ln68_cast_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln68),64));
    zext_ln70_cast_fu_417_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln70),62));
end behav;

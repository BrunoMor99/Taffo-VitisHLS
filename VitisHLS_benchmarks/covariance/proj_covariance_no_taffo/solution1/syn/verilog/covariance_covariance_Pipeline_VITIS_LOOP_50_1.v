// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module covariance_covariance_Pipeline_VITIS_LOOP_50_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        mean,
        data,
        grp_fu_224_p_din0,
        grp_fu_224_p_din1,
        grp_fu_224_p_opcode,
        grp_fu_224_p_dout0,
        grp_fu_224_p_ce,
        grp_fu_228_p_din0,
        grp_fu_228_p_din1,
        grp_fu_228_p_dout0,
        grp_fu_228_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 17'd1;
parameter    ap_ST_fsm_pp0_stage1 = 17'd2;
parameter    ap_ST_fsm_pp0_stage2 = 17'd4;
parameter    ap_ST_fsm_pp0_stage3 = 17'd8;
parameter    ap_ST_fsm_pp0_stage4 = 17'd16;
parameter    ap_ST_fsm_pp0_stage5 = 17'd32;
parameter    ap_ST_fsm_pp0_stage6 = 17'd64;
parameter    ap_ST_fsm_pp0_stage7 = 17'd128;
parameter    ap_ST_fsm_pp0_stage8 = 17'd256;
parameter    ap_ST_fsm_pp0_stage9 = 17'd512;
parameter    ap_ST_fsm_pp0_stage10 = 17'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 17'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 17'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 17'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 17'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 17'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] mean;
input  [63:0] data;
output  [31:0] grp_fu_224_p_din0;
output  [31:0] grp_fu_224_p_din1;
output  [0:0] grp_fu_224_p_opcode;
input  [31:0] grp_fu_224_p_dout0;
output   grp_fu_224_p_ce;
output  [31:0] grp_fu_228_p_din0;
output  [31:0] grp_fu_228_p_din1;
input  [31:0] grp_fu_228_p_dout0;
output   grp_fu_228_p_ce;

reg ap_idle;
reg m_axi_gmem_AWVALID;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage16;
reg   [0:0] icmp_ln50_reg_1065;
reg    ap_block_state17_pp0_stage16_iter0;
reg    ap_block_state17_io;
wire    ap_block_state34_pp0_stage16_iter1;
reg    ap_block_pp0_stage16_subdone;
reg    ap_condition_exit_pp0_iter0_stage16;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage16;
wire    ap_block_pp0_stage0;
reg   [31:0] reg_335;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_state12_io;
wire    ap_block_state29_pp0_stage11_iter1;
wire    ap_block_state46_pp0_stage11_iter2;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_block_state14_io;
wire    ap_block_state31_pp0_stage13_iter1;
wire    ap_block_state48_pp0_stage13_iter2;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_state16_io;
wire    ap_block_state33_pp0_stage15_iter1;
reg    ap_block_state50_pp0_stage15_iter2;
reg    ap_block_pp0_stage15_11001;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state18_pp0_stage0_iter1;
wire    ap_block_state35_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state3_io;
reg    ap_block_state20_pp0_stage2_iter1;
wire    ap_block_state37_pp0_stage2_iter2;
reg    ap_block_pp0_stage2_11001;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_state5_io;
reg    ap_block_state22_pp0_stage4_iter1;
wire    ap_block_state39_pp0_stage4_iter2;
reg    ap_block_pp0_stage4_11001;
wire    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_state7_io;
reg    ap_block_state24_pp0_stage6_iter1;
wire    ap_block_state41_pp0_stage6_iter2;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_state9_io;
wire    ap_block_state26_pp0_stage8_iter1;
wire    ap_block_state43_pp0_stage8_iter2;
reg    ap_block_pp0_stage8_11001;
reg   [31:0] reg_340;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_state11_io;
wire    ap_block_state28_pp0_stage10_iter1;
wire    ap_block_state45_pp0_stage10_iter2;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_state13_pp0_stage12_iter0;
reg    ap_block_state13_io;
wire    ap_block_state30_pp0_stage12_iter1;
wire    ap_block_state47_pp0_stage12_iter2;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_state15_io;
wire    ap_block_state32_pp0_stage14_iter1;
wire    ap_block_state49_pp0_stage14_iter2;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_pp0_stage16_11001;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state2_io;
reg    ap_block_state19_pp0_stage1_iter1;
wire    ap_block_state36_pp0_stage1_iter2;
reg    ap_block_pp0_stage1_11001;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state4_io;
reg    ap_block_state21_pp0_stage3_iter1;
wire    ap_block_state38_pp0_stage3_iter2;
reg    ap_block_pp0_stage3_11001;
wire    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_state6_io;
reg    ap_block_state23_pp0_stage5_iter1;
wire    ap_block_state40_pp0_stage5_iter2;
reg    ap_block_pp0_stage5_11001;
wire    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_state8_io;
reg    ap_block_state25_pp0_stage7_iter1;
wire    ap_block_state42_pp0_stage7_iter2;
reg    ap_block_pp0_stage7_11001;
wire   [0:0] icmp_ln50_fu_354_p2;
reg   [0:0] icmp_ln50_reg_1065_pp0_iter1_reg;
wire   [3:0] empty_23_fu_366_p1;
reg   [3:0] empty_23_reg_1069;
reg   [63:0] gmem_addr_reg_1081;
reg   [63:0] gmem_addr_reg_1081_pp0_iter1_reg;
reg   [63:0] gmem_addr_reg_1081_pp0_iter2_reg;
reg   [63:0] gmem_addr_1_reg_1088;
wire  signed [6:0] zext_ln55_1_cast_fu_439_p4;
reg  signed [6:0] zext_ln55_1_cast_reg_1094;
reg   [63:0] gmem_addr_6_reg_1101;
wire  signed [7:0] zext_ln55_2_cast_fu_477_p4;
reg  signed [7:0] zext_ln55_2_cast_reg_1107;
reg   [63:0] gmem_addr_7_reg_1113;
reg   [63:0] gmem_addr_8_reg_1119;
wire  signed [8:0] zext_ln55_4_cast_fu_547_p4;
reg  signed [8:0] zext_ln55_4_cast_reg_1125;
reg   [63:0] gmem_addr_9_reg_1130;
wire  signed [8:0] zext_ln55_5_cast_fu_585_p4;
reg  signed [8:0] zext_ln55_5_cast_reg_1136;
reg   [63:0] gmem_addr_10_reg_1141;
reg   [63:0] gmem_addr_11_reg_1147;
reg   [31:0] gmem_addr_read_reg_1153;
reg   [63:0] gmem_addr_12_reg_1158;
reg   [31:0] gmem_addr_1_read_reg_1164;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_state10_io;
wire    ap_block_state27_pp0_stage9_iter1;
wire    ap_block_state44_pp0_stage9_iter2;
reg    ap_block_pp0_stage9_11001;
reg   [63:0] gmem_addr_13_reg_1169;
wire   [31:0] bitcast_ln55_fu_725_p1;
wire   [31:0] bitcast_ln55_1_fu_729_p1;
reg   [31:0] gmem_addr_6_read_reg_1185;
reg   [63:0] gmem_addr_14_reg_1190;
reg   [31:0] gmem_addr_7_read_reg_1196;
reg   [63:0] gmem_addr_15_reg_1201;
wire   [31:0] bitcast_ln55_2_fu_809_p1;
reg   [31:0] gmem_addr_8_read_reg_1212;
reg   [63:0] gmem_addr_16_reg_1217;
reg   [31:0] gmem_addr_9_read_reg_1223;
reg   [63:0] gmem_addr_17_reg_1228;
wire   [31:0] bitcast_ln55_3_fu_883_p1;
reg   [31:0] gmem_addr_10_read_reg_1239;
reg   [63:0] gmem_addr_18_reg_1244;
reg   [31:0] gmem_addr_11_read_reg_1250;
reg   [63:0] gmem_addr_19_reg_1255;
wire   [31:0] bitcast_ln55_4_fu_951_p1;
reg   [31:0] gmem_addr_12_read_reg_1266;
reg   [63:0] gmem_addr_20_reg_1271;
reg   [31:0] gmem_addr_13_read_reg_1277;
wire   [31:0] bitcast_ln55_5_fu_987_p1;
reg   [31:0] gmem_addr_14_read_reg_1287;
reg   [31:0] gmem_addr_15_read_reg_1292;
wire   [31:0] bitcast_ln55_6_fu_991_p1;
reg   [31:0] gmem_addr_16_read_reg_1302;
reg   [31:0] gmem_addr_17_read_reg_1307;
wire   [31:0] bitcast_ln55_7_fu_995_p1;
reg   [31:0] gmem_addr_18_read_reg_1317;
reg   [31:0] gmem_addr_19_read_reg_1322;
wire   [31:0] bitcast_ln55_8_fu_999_p1;
reg   [31:0] gmem_addr_20_read_reg_1332;
wire   [31:0] bitcast_ln55_9_fu_1003_p1;
wire   [31:0] bitcast_ln55_10_fu_1007_p1;
wire   [31:0] bitcast_ln55_11_fu_1011_p1;
wire   [31:0] bitcast_ln55_12_fu_1015_p1;
wire   [31:0] bitcast_ln55_13_fu_1019_p1;
wire   [31:0] bitcast_ln55_14_fu_1023_p1;
wire   [31:0] bitcast_ln55_15_fu_1027_p1;
wire   [31:0] bitcast_ln55_16_fu_1031_p1;
reg   [31:0] div_reg_1377;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage15_subdone;
wire  signed [63:0] sext_ln55_fu_398_p1;
wire  signed [63:0] sext_ln55_1_fu_424_p1;
wire  signed [63:0] sext_ln55_2_fu_467_p1;
wire  signed [63:0] sext_ln55_3_fu_505_p1;
wire  signed [63:0] sext_ln55_4_fu_537_p1;
wire  signed [63:0] sext_ln55_5_fu_575_p1;
wire  signed [63:0] sext_ln55_6_fu_613_p1;
wire  signed [63:0] sext_ln55_7_fu_645_p1;
wire  signed [63:0] sext_ln55_8_fu_677_p1;
wire  signed [63:0] sext_ln55_9_fu_715_p1;
wire  signed [63:0] sext_ln55_10_fu_761_p1;
wire  signed [63:0] sext_ln55_11_fu_799_p1;
wire  signed [63:0] sext_ln55_12_fu_841_p1;
wire  signed [63:0] sext_ln55_13_fu_873_p1;
wire  signed [63:0] sext_ln55_14_fu_909_p1;
wire  signed [63:0] sext_ln55_15_fu_941_p1;
wire  signed [63:0] sext_ln55_16_fu_977_p1;
reg    ap_block_pp0_stage10_01001;
reg   [4:0] j_fu_96;
wire   [4:0] add_ln50_fu_360_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_j_2;
reg   [31:0] grp_fu_326_p0;
reg   [31:0] grp_fu_326_p1;
wire   [5:0] tmp_2_fu_370_p3;
wire   [63:0] p_cast_fu_378_p1;
wire   [63:0] empty_24_fu_382_p2;
wire   [61:0] trunc_ln1_fu_388_p4;
wire   [63:0] add_ln55_fu_408_p2;
wire   [61:0] trunc_ln55_2_fu_414_p4;
wire   [63:0] zext_ln55_fu_448_p1;
wire   [63:0] add_ln55_1_fu_452_p2;
wire   [61:0] trunc_ln55_3_fu_457_p4;
wire   [63:0] zext_ln55_1_fu_486_p1;
wire   [63:0] add_ln55_2_fu_490_p2;
wire   [61:0] trunc_ln55_4_fu_495_p4;
wire  signed [7:0] sext_ln55_17_fu_515_p1;
wire   [63:0] zext_ln55_2_fu_518_p1;
wire   [63:0] add_ln55_3_fu_522_p2;
wire   [61:0] trunc_ln55_5_fu_527_p4;
wire   [63:0] zext_ln55_3_fu_556_p1;
wire   [63:0] add_ln55_4_fu_560_p2;
wire   [61:0] trunc_ln55_6_fu_565_p4;
wire   [63:0] zext_ln55_4_fu_594_p1;
wire   [63:0] add_ln55_5_fu_598_p2;
wire   [61:0] trunc_ln55_7_fu_603_p4;
wire  signed [8:0] sext_ln55_18_fu_623_p1;
wire   [63:0] zext_ln55_5_fu_626_p1;
wire   [63:0] add_ln55_6_fu_630_p2;
wire   [61:0] trunc_ln55_8_fu_635_p4;
wire  signed [8:0] sext_ln55_19_fu_655_p1;
wire   [63:0] zext_ln55_6_fu_658_p1;
wire   [63:0] add_ln55_7_fu_662_p2;
wire   [61:0] trunc_ln55_9_fu_667_p4;
wire   [9:0] zext_ln55_8_cast_fu_687_p4;
wire   [63:0] zext_ln55_7_fu_696_p1;
wire   [63:0] add_ln55_8_fu_700_p2;
wire   [61:0] trunc_ln55_s_fu_705_p4;
wire   [9:0] zext_ln55_9_cast_fu_733_p4;
wire   [63:0] zext_ln55_8_fu_742_p1;
wire   [63:0] add_ln55_9_fu_746_p2;
wire   [61:0] trunc_ln55_1_fu_751_p4;
wire   [9:0] zext_ln55_10_cast_fu_771_p4;
wire   [63:0] zext_ln55_9_fu_780_p1;
wire   [63:0] add_ln55_10_fu_784_p2;
wire   [61:0] trunc_ln55_10_fu_789_p4;
wire   [9:0] zext_ln55_11_cast_fu_813_p4;
wire   [63:0] zext_ln55_10_fu_822_p1;
wire   [63:0] add_ln55_11_fu_826_p2;
wire   [61:0] trunc_ln55_11_fu_831_p4;
wire  signed [9:0] sext_ln55_20_fu_851_p1;
wire   [63:0] zext_ln55_11_fu_854_p1;
wire   [63:0] add_ln55_12_fu_858_p2;
wire   [61:0] trunc_ln55_12_fu_863_p4;
wire  signed [9:0] sext_ln55_21_fu_887_p1;
wire   [63:0] zext_ln55_12_fu_890_p1;
wire   [63:0] add_ln55_13_fu_894_p2;
wire   [61:0] trunc_ln55_13_fu_899_p4;
wire  signed [9:0] sext_ln55_22_fu_919_p1;
wire   [63:0] zext_ln55_13_fu_922_p1;
wire   [63:0] add_ln55_14_fu_926_p2;
wire   [61:0] trunc_ln55_14_fu_931_p4;
wire  signed [9:0] sext_ln55_23_fu_955_p1;
wire   [63:0] zext_ln55_14_fu_958_p1;
wire   [63:0] add_ln55_15_fu_962_p2;
wire   [61:0] trunc_ln55_15_fu_967_p4;
reg    ap_block_pp0_stage10_00001;
reg    ap_block_pp0_stage12_00001;
reg    ap_block_pp0_stage14_00001;
reg    ap_block_pp0_stage16_00001;
reg    ap_block_pp0_stage1_00001;
reg    ap_block_pp0_stage3_00001;
reg    ap_block_pp0_stage5_00001;
reg    ap_block_pp0_stage7_00001;
reg    ap_block_pp0_stage9_00001;
reg    ap_block_pp0_stage11_00001;
reg    ap_block_pp0_stage13_00001;
reg    ap_block_pp0_stage15_00001;
reg    ap_block_pp0_stage0_00001;
reg    ap_block_pp0_stage2_00001;
reg    ap_block_pp0_stage4_00001;
reg    ap_block_pp0_stage6_00001;
reg    grp_fu_326_ce;
reg    grp_fu_330_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage15;
reg    ap_idle_pp0_0to0;
reg   [16:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

covariance_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage16),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage16)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter1_stage15) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln50_fu_354_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_96 <= add_ln50_fu_360_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_96 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        div_reg_1377 <= grp_fu_228_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln50_fu_354_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_23_reg_1069 <= empty_23_fu_366_p1;
        gmem_addr_1_reg_1088 <= sext_ln55_1_fu_424_p1;
        gmem_addr_reg_1081 <= sext_ln55_fu_398_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        gmem_addr_10_read_reg_1239 <= m_axi_gmem_RDATA;
        gmem_addr_18_reg_1244 <= sext_ln55_14_fu_909_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        gmem_addr_10_reg_1141 <= sext_ln55_6_fu_613_p1;
        zext_ln55_5_cast_reg_1136[5 : 2] <= zext_ln55_5_cast_fu_585_p4[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        gmem_addr_11_read_reg_1250 <= m_axi_gmem_RDATA;
        gmem_addr_19_reg_1255 <= sext_ln55_15_fu_941_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        gmem_addr_11_reg_1147 <= sext_ln55_7_fu_645_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        gmem_addr_12_read_reg_1266 <= m_axi_gmem_RDATA;
        gmem_addr_20_reg_1271 <= sext_ln55_16_fu_977_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        gmem_addr_12_reg_1158 <= sext_ln55_8_fu_677_p1;
        gmem_addr_read_reg_1153 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_addr_13_read_reg_1277 <= m_axi_gmem_RDATA;
        gmem_addr_reg_1081_pp0_iter1_reg <= gmem_addr_reg_1081;
        gmem_addr_reg_1081_pp0_iter2_reg <= gmem_addr_reg_1081_pp0_iter1_reg;
        icmp_ln50_reg_1065 <= icmp_ln50_fu_354_p2;
        icmp_ln50_reg_1065_pp0_iter1_reg <= icmp_ln50_reg_1065;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        gmem_addr_13_reg_1169 <= sext_ln55_9_fu_715_p1;
        gmem_addr_1_read_reg_1164 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gmem_addr_14_read_reg_1287 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        gmem_addr_14_reg_1190 <= sext_ln55_10_fu_761_p1;
        gmem_addr_6_read_reg_1185 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        gmem_addr_15_read_reg_1292 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        gmem_addr_15_reg_1201 <= sext_ln55_11_fu_799_p1;
        gmem_addr_7_read_reg_1196 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        gmem_addr_16_read_reg_1302 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        gmem_addr_16_reg_1217 <= sext_ln55_12_fu_841_p1;
        gmem_addr_8_read_reg_1212 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        gmem_addr_17_read_reg_1307 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        gmem_addr_17_reg_1228 <= sext_ln55_13_fu_873_p1;
        gmem_addr_9_read_reg_1223 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        gmem_addr_18_read_reg_1317 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        gmem_addr_19_read_reg_1322 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        gmem_addr_20_read_reg_1332 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        gmem_addr_6_reg_1101 <= sext_ln55_2_fu_467_p1;
        zext_ln55_1_cast_reg_1094[5 : 2] <= zext_ln55_1_cast_fu_439_p4[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        gmem_addr_7_reg_1113 <= sext_ln55_3_fu_505_p1;
        zext_ln55_2_cast_reg_1107[5 : 2] <= zext_ln55_2_cast_fu_477_p4[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        gmem_addr_8_reg_1119 <= sext_ln55_4_fu_537_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        gmem_addr_9_reg_1130 <= sext_ln55_5_fu_575_p1;
        zext_ln55_4_cast_reg_1125[5 : 2] <= zext_ln55_4_cast_fu_547_p4[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln50_reg_1065 == 1'd0)))) begin
        reg_335 <= grp_fu_224_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_340 <= grp_fu_224_p_dout0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_subdone) & (icmp_ln50_reg_1065 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage16 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage16 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln50_reg_1065_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
        ap_condition_exit_pp0_iter1_stage15 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_2 = 5'd0;
    end else begin
        ap_sig_allocacmp_j_2 = j_fu_96;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln50_reg_1065 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (icmp_ln50_reg_1065 == 1'd0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        grp_fu_326_ce = 1'b1;
    end else begin
        grp_fu_326_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)))) begin
        grp_fu_326_p0 = reg_340;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12)))) begin
        grp_fu_326_p0 = reg_335;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_326_p0 = bitcast_ln55_fu_725_p1;
    end else begin
        grp_fu_326_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_326_p1 = bitcast_ln55_16_fu_1031_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_326_p1 = bitcast_ln55_15_fu_1027_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_326_p1 = bitcast_ln55_14_fu_1023_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_326_p1 = bitcast_ln55_13_fu_1019_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        grp_fu_326_p1 = bitcast_ln55_12_fu_1015_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_326_p1 = bitcast_ln55_11_fu_1011_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_326_p1 = bitcast_ln55_10_fu_1007_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_326_p1 = bitcast_ln55_9_fu_1003_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_326_p1 = bitcast_ln55_8_fu_999_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_326_p1 = bitcast_ln55_7_fu_995_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_326_p1 = bitcast_ln55_6_fu_991_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_326_p1 = bitcast_ln55_5_fu_987_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_326_p1 = bitcast_ln55_4_fu_951_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_326_p1 = bitcast_ln55_3_fu_883_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        grp_fu_326_p1 = bitcast_ln55_2_fu_809_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_326_p1 = bitcast_ln55_1_fu_729_p1;
    end else begin
        grp_fu_326_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)))) begin
        grp_fu_330_ce = 1'b1;
    end else begin
        grp_fu_330_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_ARADDR = gmem_addr_20_reg_1271;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_19_reg_1255;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_18_reg_1244;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_17_reg_1228;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_16_reg_1217;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_15_reg_1201;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_14_reg_1190;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_13_reg_1169;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_12_reg_1158;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_11_reg_1147;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_10_reg_1141;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_9_reg_1130;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_8_reg_1119;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_7_reg_1113;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_6_reg_1101;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_1_reg_1088;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln50_reg_1065 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_reg_1081;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln50_reg_1065 == 1'd0)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln50_reg_1065 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln50_reg_1065 == 1'd0)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter1_stage15) & (ap_idle_pp0_0to0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln50_fu_360_p2 = (ap_sig_allocacmp_j_2 + 5'd1);

assign add_ln55_10_fu_784_p2 = (zext_ln55_9_fu_780_p1 + data);

assign add_ln55_11_fu_826_p2 = (zext_ln55_10_fu_822_p1 + data);

assign add_ln55_12_fu_858_p2 = (zext_ln55_11_fu_854_p1 + data);

assign add_ln55_13_fu_894_p2 = (zext_ln55_12_fu_890_p1 + data);

assign add_ln55_14_fu_926_p2 = (zext_ln55_13_fu_922_p1 + data);

assign add_ln55_15_fu_962_p2 = (zext_ln55_14_fu_958_p1 + data);

assign add_ln55_1_fu_452_p2 = (zext_ln55_fu_448_p1 + data);

assign add_ln55_2_fu_490_p2 = (zext_ln55_1_fu_486_p1 + data);

assign add_ln55_3_fu_522_p2 = (zext_ln55_2_fu_518_p1 + data);

assign add_ln55_4_fu_560_p2 = (zext_ln55_3_fu_556_p1 + data);

assign add_ln55_5_fu_598_p2 = (zext_ln55_4_fu_594_p1 + data);

assign add_ln55_6_fu_630_p2 = (zext_ln55_5_fu_626_p1 + data);

assign add_ln55_7_fu_662_p2 = (zext_ln55_6_fu_658_p1 + data);

assign add_ln55_8_fu_700_p2 = (zext_ln55_7_fu_696_p1 + data);

assign add_ln55_9_fu_746_p2 = (zext_ln55_8_fu_742_p1 + data);

assign add_ln55_fu_408_p2 = (p_cast_fu_378_p1 + data);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_gmem_RVALID == 1'b0) | (m_axi_gmem_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_gmem_RVALID == 1'b0) | (m_axi_gmem_ARREADY == 1'b0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_00001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage10_01001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage10_11001 = (((m_axi_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = (((m_axi_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0)))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_00001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_00001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0))));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_00001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0))));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_00001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0))));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_00001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln50_reg_1065 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & (m_axi_gmem_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0)))));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_00001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage1_00001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_00001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_00001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_00001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_00001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_00001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_00001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0))));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_00001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = (((m_axi_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = (((m_axi_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0)))));
end

always @ (*) begin
    ap_block_state10_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state11_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state12_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state13_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state14_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state15_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state16_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state17_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state17_pp0_stage16_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state18_pp0_stage0_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state19_pp0_stage1_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage2_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state21_pp0_stage3_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state22_pp0_stage4_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp0_stage5_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state24_pp0_stage6_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state25_pp0_stage7_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

assign ap_block_state26_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage16_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage13_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage14_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state50_pp0_stage15_iter2 = (m_axi_gmem_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state5_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln50_reg_1065 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage16;

assign bitcast_ln55_10_fu_1007_p1 = gmem_addr_14_read_reg_1287;

assign bitcast_ln55_11_fu_1011_p1 = gmem_addr_15_read_reg_1292;

assign bitcast_ln55_12_fu_1015_p1 = gmem_addr_16_read_reg_1302;

assign bitcast_ln55_13_fu_1019_p1 = gmem_addr_17_read_reg_1307;

assign bitcast_ln55_14_fu_1023_p1 = gmem_addr_18_read_reg_1317;

assign bitcast_ln55_15_fu_1027_p1 = gmem_addr_19_read_reg_1322;

assign bitcast_ln55_16_fu_1031_p1 = gmem_addr_20_read_reg_1332;

assign bitcast_ln55_1_fu_729_p1 = gmem_addr_1_read_reg_1164;

assign bitcast_ln55_2_fu_809_p1 = gmem_addr_6_read_reg_1185;

assign bitcast_ln55_3_fu_883_p1 = gmem_addr_7_read_reg_1196;

assign bitcast_ln55_4_fu_951_p1 = gmem_addr_8_read_reg_1212;

assign bitcast_ln55_5_fu_987_p1 = gmem_addr_9_read_reg_1223;

assign bitcast_ln55_6_fu_991_p1 = gmem_addr_10_read_reg_1239;

assign bitcast_ln55_7_fu_995_p1 = gmem_addr_11_read_reg_1250;

assign bitcast_ln55_8_fu_999_p1 = gmem_addr_12_read_reg_1266;

assign bitcast_ln55_9_fu_1003_p1 = gmem_addr_13_read_reg_1277;

assign bitcast_ln55_fu_725_p1 = gmem_addr_read_reg_1153;

assign empty_23_fu_366_p1 = ap_sig_allocacmp_j_2[3:0];

assign empty_24_fu_382_p2 = (p_cast_fu_378_p1 + mean);

assign grp_fu_224_p_ce = grp_fu_326_ce;

assign grp_fu_224_p_din0 = grp_fu_326_p0;

assign grp_fu_224_p_din1 = grp_fu_326_p1;

assign grp_fu_224_p_opcode = 2'd0;

assign grp_fu_228_p_ce = grp_fu_330_ce;

assign grp_fu_228_p_din0 = reg_340;

assign grp_fu_228_p_din1 = 32'd1031798784;

assign icmp_ln50_fu_354_p2 = ((ap_sig_allocacmp_j_2 == 5'd16) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = gmem_addr_reg_1081_pp0_iter2_reg;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_WDATA = div_reg_1377;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd15;

assign m_axi_gmem_WUSER = 1'd0;

assign p_cast_fu_378_p1 = tmp_2_fu_370_p3;

assign sext_ln55_10_fu_761_p1 = $signed(trunc_ln55_1_fu_751_p4);

assign sext_ln55_11_fu_799_p1 = $signed(trunc_ln55_10_fu_789_p4);

assign sext_ln55_12_fu_841_p1 = $signed(trunc_ln55_11_fu_831_p4);

assign sext_ln55_13_fu_873_p1 = $signed(trunc_ln55_12_fu_863_p4);

assign sext_ln55_14_fu_909_p1 = $signed(trunc_ln55_13_fu_899_p4);

assign sext_ln55_15_fu_941_p1 = $signed(trunc_ln55_14_fu_931_p4);

assign sext_ln55_16_fu_977_p1 = $signed(trunc_ln55_15_fu_967_p4);

assign sext_ln55_17_fu_515_p1 = zext_ln55_1_cast_reg_1094;

assign sext_ln55_18_fu_623_p1 = zext_ln55_2_cast_reg_1107;

assign sext_ln55_19_fu_655_p1 = zext_ln55_1_cast_reg_1094;

assign sext_ln55_1_fu_424_p1 = $signed(trunc_ln55_2_fu_414_p4);

assign sext_ln55_20_fu_851_p1 = zext_ln55_4_cast_reg_1125;

assign sext_ln55_21_fu_887_p1 = zext_ln55_5_cast_reg_1136;

assign sext_ln55_22_fu_919_p1 = zext_ln55_2_cast_reg_1107;

assign sext_ln55_23_fu_955_p1 = zext_ln55_1_cast_reg_1094;

assign sext_ln55_2_fu_467_p1 = $signed(trunc_ln55_3_fu_457_p4);

assign sext_ln55_3_fu_505_p1 = $signed(trunc_ln55_4_fu_495_p4);

assign sext_ln55_4_fu_537_p1 = $signed(trunc_ln55_5_fu_527_p4);

assign sext_ln55_5_fu_575_p1 = $signed(trunc_ln55_6_fu_565_p4);

assign sext_ln55_6_fu_613_p1 = $signed(trunc_ln55_7_fu_603_p4);

assign sext_ln55_7_fu_645_p1 = $signed(trunc_ln55_8_fu_635_p4);

assign sext_ln55_8_fu_677_p1 = $signed(trunc_ln55_9_fu_667_p4);

assign sext_ln55_9_fu_715_p1 = $signed(trunc_ln55_s_fu_705_p4);

assign sext_ln55_fu_398_p1 = $signed(trunc_ln1_fu_388_p4);

assign tmp_2_fu_370_p3 = {{empty_23_fu_366_p1}, {2'd0}};

assign trunc_ln1_fu_388_p4 = {{empty_24_fu_382_p2[63:2]}};

assign trunc_ln55_10_fu_789_p4 = {{add_ln55_10_fu_784_p2[63:2]}};

assign trunc_ln55_11_fu_831_p4 = {{add_ln55_11_fu_826_p2[63:2]}};

assign trunc_ln55_12_fu_863_p4 = {{add_ln55_12_fu_858_p2[63:2]}};

assign trunc_ln55_13_fu_899_p4 = {{add_ln55_13_fu_894_p2[63:2]}};

assign trunc_ln55_14_fu_931_p4 = {{add_ln55_14_fu_926_p2[63:2]}};

assign trunc_ln55_15_fu_967_p4 = {{add_ln55_15_fu_962_p2[63:2]}};

assign trunc_ln55_1_fu_751_p4 = {{add_ln55_9_fu_746_p2[63:2]}};

assign trunc_ln55_2_fu_414_p4 = {{add_ln55_fu_408_p2[63:2]}};

assign trunc_ln55_3_fu_457_p4 = {{add_ln55_1_fu_452_p2[63:2]}};

assign trunc_ln55_4_fu_495_p4 = {{add_ln55_2_fu_490_p2[63:2]}};

assign trunc_ln55_5_fu_527_p4 = {{add_ln55_3_fu_522_p2[63:2]}};

assign trunc_ln55_6_fu_565_p4 = {{add_ln55_4_fu_560_p2[63:2]}};

assign trunc_ln55_7_fu_603_p4 = {{add_ln55_5_fu_598_p2[63:2]}};

assign trunc_ln55_8_fu_635_p4 = {{add_ln55_6_fu_630_p2[63:2]}};

assign trunc_ln55_9_fu_667_p4 = {{add_ln55_7_fu_662_p2[63:2]}};

assign trunc_ln55_s_fu_705_p4 = {{add_ln55_8_fu_700_p2[63:2]}};

assign zext_ln55_10_cast_fu_771_p4 = {{{{4'd10}, {empty_23_reg_1069}}}, {2'd0}};

assign zext_ln55_10_fu_822_p1 = zext_ln55_11_cast_fu_813_p4;

assign zext_ln55_11_cast_fu_813_p4 = {{{{4'd11}, {empty_23_reg_1069}}}, {2'd0}};

assign zext_ln55_11_fu_854_p1 = $unsigned(sext_ln55_20_fu_851_p1);

assign zext_ln55_12_fu_890_p1 = $unsigned(sext_ln55_21_fu_887_p1);

assign zext_ln55_13_fu_922_p1 = $unsigned(sext_ln55_22_fu_919_p1);

assign zext_ln55_14_fu_958_p1 = $unsigned(sext_ln55_23_fu_955_p1);

assign zext_ln55_1_cast_fu_439_p4 = {{{{1'd1}, {empty_23_reg_1069}}}, {2'd0}};

assign zext_ln55_1_fu_486_p1 = $unsigned(zext_ln55_2_cast_fu_477_p4);

assign zext_ln55_2_cast_fu_477_p4 = {{{{2'd2}, {empty_23_reg_1069}}}, {2'd0}};

assign zext_ln55_2_fu_518_p1 = $unsigned(sext_ln55_17_fu_515_p1);

assign zext_ln55_3_fu_556_p1 = $unsigned(zext_ln55_4_cast_fu_547_p4);

assign zext_ln55_4_cast_fu_547_p4 = {{{{3'd4}, {empty_23_reg_1069}}}, {2'd0}};

assign zext_ln55_4_fu_594_p1 = $unsigned(zext_ln55_5_cast_fu_585_p4);

assign zext_ln55_5_cast_fu_585_p4 = {{{{3'd5}, {empty_23_reg_1069}}}, {2'd0}};

assign zext_ln55_5_fu_626_p1 = $unsigned(sext_ln55_18_fu_623_p1);

assign zext_ln55_6_fu_658_p1 = $unsigned(sext_ln55_19_fu_655_p1);

assign zext_ln55_7_fu_696_p1 = zext_ln55_8_cast_fu_687_p4;

assign zext_ln55_8_cast_fu_687_p4 = {{{{4'd8}, {empty_23_reg_1069}}}, {2'd0}};

assign zext_ln55_8_fu_742_p1 = zext_ln55_9_cast_fu_733_p4;

assign zext_ln55_9_cast_fu_733_p4 = {{{{4'd9}, {empty_23_reg_1069}}}, {2'd0}};

assign zext_ln55_9_fu_780_p1 = zext_ln55_10_cast_fu_771_p4;

assign zext_ln55_fu_448_p1 = $unsigned(zext_ln55_1_cast_fu_439_p4);

always @ (posedge ap_clk) begin
    zext_ln55_1_cast_reg_1094[1:0] <= 2'b00;
    zext_ln55_1_cast_reg_1094[6] <= 1'b1;
    zext_ln55_2_cast_reg_1107[1:0] <= 2'b00;
    zext_ln55_2_cast_reg_1107[7:6] <= 2'b10;
    zext_ln55_4_cast_reg_1125[1:0] <= 2'b00;
    zext_ln55_4_cast_reg_1125[8:6] <= 3'b100;
    zext_ln55_5_cast_reg_1136[1:0] <= 2'b00;
    zext_ln55_5_cast_reg_1136[8:6] <= 3'b101;
end

endmodule //covariance_covariance_Pipeline_VITIS_LOOP_50_1

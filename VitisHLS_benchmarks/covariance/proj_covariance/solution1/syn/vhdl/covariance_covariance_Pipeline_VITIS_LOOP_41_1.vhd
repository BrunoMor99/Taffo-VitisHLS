-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity covariance_covariance_Pipeline_VITIS_LOOP_41_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    mean : IN STD_LOGIC_VECTOR (63 downto 0);
    data : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of covariance_covariance_Pipeline_VITIS_LOOP_41_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal exitcond428_reg_1184 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_state15_io : BOOLEAN;
    signal ap_block_state32_pp0_stage14_iter1 : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage14 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_state17_io : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal gmem_blk_n_AW : STD_LOGIC;
    signal gmem_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond428_fu_346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_82_fu_358_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_82_reg_1188 : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_addr_reg_1200 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_reg_1200_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_1_reg_1207 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast95_cast_fu_431_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_cast95_cast_reg_1213 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state20_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal gmem_addr_6_reg_1220 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast96_cast_fu_469_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast96_cast_reg_1226 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state21_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal gmem_addr_7_reg_1232 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_8_reg_1238 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_state22_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal p_cast98_cast_fu_539_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast98_cast_reg_1244 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_state23_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal gmem_addr_9_reg_1249 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast99_cast_fu_577_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast99_cast_reg_1255 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state7_io : BOOLEAN;
    signal ap_block_state24_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal gmem_addr_10_reg_1260 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_11_reg_1266 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state8_io : BOOLEAN;
    signal ap_block_state25_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal gmem_addr_read_reg_1272 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state9_io : BOOLEAN;
    signal ap_block_state26_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal gmem_addr_12_reg_1277 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_85_fu_679_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_85_reg_1283 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_state27_pp0_stage9_iter1 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal gmem_addr_13_reg_1288 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_6_read_reg_1294 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_state11_io : BOOLEAN;
    signal ap_block_state28_pp0_stage10_iter1 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal gmem_addr_14_reg_1299 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_7_read_reg_1305 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_state12_io : BOOLEAN;
    signal ap_block_state29_pp0_stage11_iter1 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal gmem_addr_15_reg_1310 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_8_read_reg_1316 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_state13_io : BOOLEAN;
    signal ap_block_state30_pp0_stage12_iter1 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal gmem_addr_16_reg_1321 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp1_fu_863_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_1327 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_94_fu_869_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_94_reg_1332 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_state14_io : BOOLEAN;
    signal ap_block_state31_pp0_stage13_iter1 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal gmem_addr_17_reg_1337 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_10_read_reg_1343 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal gmem_addr_18_reg_1348 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_11_read_reg_1354 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_state16_io : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal gmem_addr_19_reg_1359 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_20_reg_1365 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_12_read_reg_1371 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal tmp4_fu_1029_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_reg_1376 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_13_read_reg_1381 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_14_read_reg_1386 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp9_fu_1045_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_reg_1391 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_15_read_reg_1396 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_108_fu_1061_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_108_reg_1401 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_fu_1067_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_reg_1406 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_110_fu_1073_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_110_reg_1411 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_112_fu_1079_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_112_reg_1416 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_114_fu_1085_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_114_reg_1421 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_116_fu_1091_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_116_reg_1426 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1431 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal p_cast15_cast_fu_390_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast17_cast_fu_416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast20_cast_fu_459_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast23_cast_fu_497_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast25_cast_fu_529_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast28_cast_fu_567_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast30_cast_fu_605_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast32_cast_fu_637_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast34_cast_fu_669_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast37_cast_fu_713_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast39_cast_fu_751_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast41_cast_fu_789_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast43_cast_fu_842_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast45_cast_fu_897_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast47_cast_fu_929_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast49_cast_fu_961_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast51_cast_fu_993_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage9_01001 : BOOLEAN;
    signal indvars_iv40_fu_108 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvars_iv_next41_fu_352_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_indvars_iv40_load : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_362_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cast93_fu_370_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_83_fu_374_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast1_fu_380_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal empty_84_fu_400_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast2_fu_406_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast95_cast_cast_fu_440_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_87_fu_444_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast3_fu_449_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast96_cast_cast_fu_478_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_89_fu_482_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast4_fu_487_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast97_cast_fu_507_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast97_cast_cast_fu_510_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_91_fu_514_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast5_fu_519_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast98_cast_cast_fu_548_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_93_fu_552_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast6_fu_557_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast99_cast_cast_fu_586_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_95_fu_590_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast7_fu_595_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast100_cast_fu_615_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast100_cast_cast_fu_618_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_97_fu_622_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast8_fu_627_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast101_cast_fu_647_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_cast101_cast_cast_fu_650_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_99_fu_654_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast9_fu_659_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast102_cast_fu_685_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast102_cast_cast_fu_694_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_101_fu_698_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast10_fu_703_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast103_cast_fu_723_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast103_cast_cast_fu_732_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_103_fu_736_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast11_fu_741_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast104_cast_fu_761_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast104_cast_cast_fu_770_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_105_fu_774_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast12_fu_779_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast105_cast_fu_814_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast105_cast_cast_fu_823_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_107_fu_827_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast13_fu_832_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal empty_86_fu_799_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_88_fu_804_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_90_fu_809_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_857_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_852_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_cast106_cast_fu_875_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast106_cast_cast_fu_878_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_109_fu_882_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast14_fu_887_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast107_cast_fu_907_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast107_cast_cast_fu_910_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_111_fu_914_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast15_fu_919_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast108_cast_fu_939_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast108_cast_cast_fu_942_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_113_fu_946_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast16_fu_951_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast109_cast_fu_971_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast109_cast_cast_fu_974_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_115_fu_978_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast17_fu_983_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal empty_92_fu_1003_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_96_fu_1008_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_98_fu_1013_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_1023_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_1018_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_100_fu_1035_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_102_fu_1040_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_104_fu_1051_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_106_fu_1056_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp14_fu_1109_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp13_fu_1113_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp12_fu_1105_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_fu_1118_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_fu_1101_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_fu_1124_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1097_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add16_u0_32fixp_15_fu_1130_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_1146_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component covariance_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component covariance_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage14,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage14_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage14)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    indvars_iv40_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((exitcond428_fu_346_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvars_iv40_fu_108 <= indvars_iv_next41_fu_352_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvars_iv40_fu_108 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                    empty_108_reg_1401(31 downto 5) <= empty_108_fu_1061_p2(31 downto 5);
                    tmp10_reg_1406(31 downto 5) <= tmp10_fu_1067_p2(31 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                    empty_110_reg_1411(31 downto 5) <= empty_110_fu_1073_p2(31 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                    empty_112_reg_1416(31 downto 5) <= empty_112_fu_1079_p2(31 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                    empty_114_reg_1421(31 downto 5) <= empty_114_fu_1085_p2(31 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                    empty_116_reg_1426(31 downto 5) <= empty_116_fu_1091_p2(31 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond428_fu_346_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                empty_82_reg_1188 <= empty_82_fu_358_p1;
                gmem_addr_1_reg_1207 <= p_cast17_cast_fu_416_p1;
                gmem_addr_reg_1200 <= p_cast15_cast_fu_390_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then
                    empty_85_reg_1283(31 downto 5) <= empty_85_fu_679_p2(31 downto 5);
                gmem_addr_13_reg_1288 <= p_cast37_cast_fu_713_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then
                    empty_94_reg_1332(31 downto 5) <= empty_94_fu_869_p2(31 downto 5);
                gmem_addr_17_reg_1337 <= p_cast45_cast_fu_897_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond428_reg_1184 <= exitcond428_fu_346_p2;
                gmem_addr_13_read_reg_1381 <= m_axi_gmem_RDATA;
                gmem_addr_reg_1200_pp0_iter1_reg <= gmem_addr_reg_1200;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then
                gmem_addr_10_read_reg_1343 <= m_axi_gmem_RDATA;
                gmem_addr_18_reg_1348 <= p_cast47_cast_fu_929_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then
                gmem_addr_10_reg_1260 <= p_cast30_cast_fu_605_p1;
                    p_cast99_cast_reg_1255(5 downto 2) <= p_cast99_cast_fu_577_p4(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then
                gmem_addr_11_read_reg_1354 <= m_axi_gmem_RDATA;
                gmem_addr_19_reg_1359 <= p_cast49_cast_fu_961_p1;
                gmem_addr_20_reg_1365 <= p_cast51_cast_fu_993_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then
                gmem_addr_11_reg_1266 <= p_cast32_cast_fu_637_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then
                gmem_addr_12_read_reg_1371 <= m_axi_gmem_RDATA;
                    tmp4_reg_1376(31 downto 5) <= tmp4_fu_1029_p2(31 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then
                gmem_addr_12_reg_1277 <= p_cast34_cast_fu_669_p1;
                gmem_addr_read_reg_1272 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                gmem_addr_14_read_reg_1386 <= m_axi_gmem_RDATA;
                    tmp9_reg_1391(31 downto 5) <= tmp9_fu_1045_p2(31 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then
                gmem_addr_14_reg_1299 <= p_cast39_cast_fu_751_p1;
                gmem_addr_6_read_reg_1294 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                gmem_addr_15_read_reg_1396 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then
                gmem_addr_15_reg_1310 <= p_cast41_cast_fu_789_p1;
                gmem_addr_7_read_reg_1305 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then
                gmem_addr_16_reg_1321 <= p_cast43_cast_fu_842_p1;
                gmem_addr_8_read_reg_1316 <= m_axi_gmem_RDATA;
                    tmp1_reg_1327(31 downto 4) <= tmp1_fu_863_p2(31 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then
                gmem_addr_6_reg_1220 <= p_cast20_cast_fu_459_p1;
                    p_cast95_cast_reg_1213(5 downto 2) <= p_cast95_cast_fu_431_p4(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then
                gmem_addr_7_reg_1232 <= p_cast23_cast_fu_497_p1;
                    p_cast96_cast_reg_1226(5 downto 2) <= p_cast96_cast_fu_469_p4(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then
                gmem_addr_8_reg_1238 <= p_cast25_cast_fu_529_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then
                gmem_addr_9_reg_1249 <= p_cast28_cast_fu_567_p1;
                    p_cast98_cast_reg_1244(5 downto 2) <= p_cast98_cast_fu_539_p4(5 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                tmp_s_reg_1431 <= add16_u0_32fixp_15_fu_1130_p2(31 downto 9);
            end if;
        end if;
    end process;
    p_cast95_cast_reg_1213(1 downto 0) <= "00";
    p_cast95_cast_reg_1213(6) <= '1';
    p_cast96_cast_reg_1226(1 downto 0) <= "00";
    p_cast96_cast_reg_1226(7 downto 6) <= "10";
    p_cast98_cast_reg_1244(1 downto 0) <= "00";
    p_cast98_cast_reg_1244(8 downto 6) <= "100";
    p_cast99_cast_reg_1255(1 downto 0) <= "00";
    p_cast99_cast_reg_1255(8 downto 6) <= "101";
    empty_85_reg_1283(4 downto 0) <= "00000";
    tmp1_reg_1327(3 downto 0) <= "0000";
    empty_94_reg_1332(4 downto 0) <= "00000";
    tmp4_reg_1376(4 downto 0) <= "00000";
    tmp9_reg_1391(4 downto 0) <= "00000";
    empty_108_reg_1401(4 downto 0) <= "00000";
    tmp10_reg_1406(4 downto 0) <= "00000";
    empty_110_reg_1411(4 downto 0) <= "00000";
    empty_112_reg_1416(4 downto 0) <= "00000";
    empty_114_reg_1421(4 downto 0) <= "00000";
    empty_116_reg_1426(4 downto 0) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage14_subdone, ap_condition_exit_pp0_iter0_stage14, ap_block_pp0_stage16_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage15_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage14)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add16_u0_32fixp_15_fu_1130_p2 <= std_logic_vector(unsigned(tmp7_fu_1124_p2) + unsigned(tmp_fu_1097_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_ARREADY, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((m_axi_gmem_RVALID = ap_const_logic_0) or (m_axi_gmem_ARREADY = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_ARREADY, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((m_axi_gmem_RVALID = ap_const_logic_0) or (m_axi_gmem_ARREADY = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_block_state11_io)
    begin
                ap_block_pp0_stage10_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state11_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_block_state11_io)
    begin
                ap_block_pp0_stage10_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state11_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_block_state12_io)
    begin
                ap_block_pp0_stage11_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state12_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_block_state12_io)
    begin
                ap_block_pp0_stage11_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state12_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage12_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_block_state13_io)
    begin
                ap_block_pp0_stage12_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage12_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_block_state13_io)
    begin
                ap_block_pp0_stage12_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_block_state14_io)
    begin
                ap_block_pp0_stage13_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state14_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage13_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_block_state14_io)
    begin
                ap_block_pp0_stage13_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state14_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, m_axi_gmem_BVALID, exitcond428_reg_1184, ap_block_state15_io)
    begin
                ap_block_pp0_stage14_11001 <= (((m_axi_gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state15_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage14_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, m_axi_gmem_BVALID, exitcond428_reg_1184, ap_block_state15_io)
    begin
                ap_block_pp0_stage14_subdone <= (((m_axi_gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state15_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0)))));
    end process;

        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_block_state16_io)
    begin
                ap_block_pp0_stage15_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state16_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage15_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_block_state16_io)
    begin
                ap_block_pp0_stage15_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state16_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage16_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_block_state17_io)
    begin
                ap_block_pp0_stage16_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state17_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage16_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_block_state17_io)
    begin
                ap_block_pp0_stage16_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state17_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state2_io)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state2_io)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state3_io)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state3_io)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state4_io)
    begin
                ap_block_pp0_stage3_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state4_io)
    begin
                ap_block_pp0_stage3_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state5_io)
    begin
                ap_block_pp0_stage4_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state5_io)
    begin
                ap_block_pp0_stage4_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state6_io)
    begin
                ap_block_pp0_stage5_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state6_io)
    begin
                ap_block_pp0_stage5_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state7_io)
    begin
                ap_block_pp0_stage6_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state7_io)
    begin
                ap_block_pp0_stage6_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state8_io)
    begin
                ap_block_pp0_stage7_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state8_io)
    begin
                ap_block_pp0_stage7_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_AWREADY, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_block_state9_io)
    begin
                ap_block_pp0_stage8_11001 <= (((m_axi_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state9_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_AWREADY, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_block_state9_io)
    begin
                ap_block_pp0_stage8_subdone <= (((m_axi_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state9_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0)))));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_01001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, exitcond428_reg_1184)
    begin
                ap_block_pp0_stage9_01001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_WREADY, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_block_state10_io)
    begin
                ap_block_pp0_stage9_11001 <= (((m_axi_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_WREADY, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_block_state10_io)
    begin
                ap_block_pp0_stage9_subdone <= (((m_axi_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0)))));
    end process;


    ap_block_state10_io_assign_proc : process(m_axi_gmem_ARREADY, exitcond428_reg_1184)
    begin
                ap_block_state10_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state10_pp0_stage9_iter0_assign_proc : process(m_axi_gmem_RVALID, exitcond428_reg_1184)
    begin
                ap_block_state10_pp0_stage9_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state11_io_assign_proc : process(m_axi_gmem_ARREADY, exitcond428_reg_1184)
    begin
                ap_block_state11_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state11_pp0_stage10_iter0_assign_proc : process(m_axi_gmem_RVALID, exitcond428_reg_1184)
    begin
                ap_block_state11_pp0_stage10_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state12_io_assign_proc : process(m_axi_gmem_ARREADY, exitcond428_reg_1184)
    begin
                ap_block_state12_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state12_pp0_stage11_iter0_assign_proc : process(m_axi_gmem_RVALID, exitcond428_reg_1184)
    begin
                ap_block_state12_pp0_stage11_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state13_io_assign_proc : process(m_axi_gmem_ARREADY, exitcond428_reg_1184)
    begin
                ap_block_state13_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state13_pp0_stage12_iter0_assign_proc : process(m_axi_gmem_RVALID, exitcond428_reg_1184)
    begin
                ap_block_state13_pp0_stage12_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state14_io_assign_proc : process(m_axi_gmem_ARREADY, exitcond428_reg_1184)
    begin
                ap_block_state14_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state14_pp0_stage13_iter0_assign_proc : process(m_axi_gmem_RVALID, exitcond428_reg_1184)
    begin
                ap_block_state14_pp0_stage13_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state15_io_assign_proc : process(m_axi_gmem_ARREADY, exitcond428_reg_1184)
    begin
                ap_block_state15_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state15_pp0_stage14_iter0_assign_proc : process(m_axi_gmem_RVALID, exitcond428_reg_1184)
    begin
                ap_block_state15_pp0_stage14_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state16_io_assign_proc : process(m_axi_gmem_ARREADY, exitcond428_reg_1184)
    begin
                ap_block_state16_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state16_pp0_stage15_iter0_assign_proc : process(m_axi_gmem_RVALID, exitcond428_reg_1184)
    begin
                ap_block_state16_pp0_stage15_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state17_io_assign_proc : process(m_axi_gmem_ARREADY, exitcond428_reg_1184)
    begin
                ap_block_state17_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state17_pp0_stage16_iter0_assign_proc : process(m_axi_gmem_RVALID, exitcond428_reg_1184)
    begin
                ap_block_state17_pp0_stage16_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state18_pp0_stage0_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state18_pp0_stage0_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state19_pp0_stage1_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state19_pp0_stage1_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state20_pp0_stage2_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state20_pp0_stage2_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state21_pp0_stage3_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state21_pp0_stage3_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state22_pp0_stage4_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state22_pp0_stage4_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state23_pp0_stage5_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state23_pp0_stage5_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state24_pp0_stage6_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state24_pp0_stage6_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state25_pp0_stage7_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state25_pp0_stage7_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;

        ap_block_state26_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage9_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage10_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage11_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_io_assign_proc : process(m_axi_gmem_ARREADY, exitcond428_reg_1184)
    begin
                ap_block_state2_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage12_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage13_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state32_pp0_stage14_iter1_assign_proc : process(m_axi_gmem_BVALID)
    begin
                ap_block_state32_pp0_stage14_iter1 <= (m_axi_gmem_BVALID = ap_const_logic_0);
    end process;


    ap_block_state3_io_assign_proc : process(m_axi_gmem_ARREADY, exitcond428_reg_1184)
    begin
                ap_block_state3_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;

        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(m_axi_gmem_ARREADY, exitcond428_reg_1184)
    begin
                ap_block_state4_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(m_axi_gmem_ARREADY, exitcond428_reg_1184)
    begin
                ap_block_state5_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;

        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_io_assign_proc : process(m_axi_gmem_ARREADY, exitcond428_reg_1184)
    begin
                ap_block_state6_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;

        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_io_assign_proc : process(m_axi_gmem_ARREADY, exitcond428_reg_1184)
    begin
                ap_block_state7_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;

        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_io_assign_proc : process(m_axi_gmem_ARREADY, exitcond428_reg_1184)
    begin
                ap_block_state8_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;

        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_io_assign_proc : process(m_axi_gmem_ARREADY, exitcond428_reg_1184)
    begin
                ap_block_state9_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_block_state9_pp0_stage8_iter0_assign_proc : process(m_axi_gmem_RVALID, exitcond428_reg_1184)
    begin
                ap_block_state9_pp0_stage8_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (exitcond428_reg_1184 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage14_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage14, exitcond428_reg_1184, ap_block_pp0_stage14_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_subdone) and (exitcond428_reg_1184 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage14 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage14_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage14;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvars_iv40_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, indvars_iv40_fu_108, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvars_iv40_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_indvars_iv40_load <= indvars_iv40_fu_108;
        end if; 
    end process;

    empty_100_fu_1035_p2 <= std_logic_vector(shift_left(unsigned(gmem_addr_12_read_reg_1371),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    empty_101_fu_698_p2 <= std_logic_vector(unsigned(p_cast102_cast_cast_fu_694_p1) + unsigned(data));
    empty_102_fu_1040_p2 <= std_logic_vector(shift_left(unsigned(gmem_addr_13_read_reg_1381),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    empty_103_fu_736_p2 <= std_logic_vector(unsigned(p_cast103_cast_cast_fu_732_p1) + unsigned(data));
    empty_104_fu_1051_p2 <= std_logic_vector(shift_left(unsigned(gmem_addr_14_read_reg_1386),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    empty_105_fu_774_p2 <= std_logic_vector(unsigned(p_cast104_cast_cast_fu_770_p1) + unsigned(data));
    empty_106_fu_1056_p2 <= std_logic_vector(shift_left(unsigned(gmem_addr_15_read_reg_1396),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    empty_107_fu_827_p2 <= std_logic_vector(unsigned(p_cast105_cast_cast_fu_823_p1) + unsigned(data));
    empty_108_fu_1061_p2 <= std_logic_vector(shift_left(unsigned(m_axi_gmem_RDATA),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    empty_109_fu_882_p2 <= std_logic_vector(unsigned(p_cast106_cast_cast_fu_878_p1) + unsigned(data));
    empty_110_fu_1073_p2 <= std_logic_vector(shift_left(unsigned(m_axi_gmem_RDATA),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    empty_111_fu_914_p2 <= std_logic_vector(unsigned(p_cast107_cast_cast_fu_910_p1) + unsigned(data));
    empty_112_fu_1079_p2 <= std_logic_vector(shift_left(unsigned(m_axi_gmem_RDATA),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    empty_113_fu_946_p2 <= std_logic_vector(unsigned(p_cast108_cast_cast_fu_942_p1) + unsigned(data));
    empty_114_fu_1085_p2 <= std_logic_vector(shift_left(unsigned(m_axi_gmem_RDATA),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    empty_115_fu_978_p2 <= std_logic_vector(unsigned(p_cast109_cast_cast_fu_974_p1) + unsigned(data));
    empty_116_fu_1091_p2 <= std_logic_vector(shift_left(unsigned(m_axi_gmem_RDATA),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    empty_82_fu_358_p1 <= ap_sig_allocacmp_indvars_iv40_load(4 - 1 downto 0);
    empty_83_fu_374_p2 <= std_logic_vector(unsigned(p_cast93_fu_370_p1) + unsigned(mean));
    empty_84_fu_400_p2 <= std_logic_vector(unsigned(p_cast93_fu_370_p1) + unsigned(data));
    empty_85_fu_679_p2 <= std_logic_vector(shift_left(unsigned(m_axi_gmem_RDATA),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    empty_86_fu_799_p2 <= std_logic_vector(shift_left(unsigned(gmem_addr_read_reg_1272),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    empty_87_fu_444_p2 <= std_logic_vector(unsigned(p_cast95_cast_cast_fu_440_p1) + unsigned(data));
    empty_88_fu_804_p2 <= std_logic_vector(shift_left(unsigned(gmem_addr_6_read_reg_1294),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    empty_89_fu_482_p2 <= std_logic_vector(unsigned(p_cast96_cast_cast_fu_478_p1) + unsigned(data));
    empty_90_fu_809_p2 <= std_logic_vector(shift_left(unsigned(gmem_addr_7_read_reg_1305),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    empty_91_fu_514_p2 <= std_logic_vector(unsigned(p_cast97_cast_cast_fu_510_p1) + unsigned(data));
    empty_92_fu_1003_p2 <= std_logic_vector(shift_left(unsigned(gmem_addr_8_read_reg_1316),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    empty_93_fu_552_p2 <= std_logic_vector(unsigned(p_cast98_cast_cast_fu_548_p1) + unsigned(data));
    empty_94_fu_869_p2 <= std_logic_vector(shift_left(unsigned(m_axi_gmem_RDATA),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    empty_95_fu_590_p2 <= std_logic_vector(unsigned(p_cast99_cast_cast_fu_586_p1) + unsigned(data));
    empty_96_fu_1008_p2 <= std_logic_vector(shift_left(unsigned(gmem_addr_10_read_reg_1343),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    empty_97_fu_622_p2 <= std_logic_vector(unsigned(p_cast100_cast_cast_fu_618_p1) + unsigned(data));
    empty_98_fu_1013_p2 <= std_logic_vector(shift_left(unsigned(gmem_addr_11_read_reg_1354),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    empty_99_fu_654_p2 <= std_logic_vector(unsigned(p_cast101_cast_cast_fu_650_p1) + unsigned(data));
    exitcond428_fu_346_p2 <= "1" when (ap_sig_allocacmp_indvars_iv40_load = ap_const_lv5_10) else "0";

    gmem_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage14, m_axi_gmem_ARREADY, exitcond428_reg_1184, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_block_pp0_stage16, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (exitcond428_reg_1184 = ap_const_lv1_0)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_AWREADY, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage14, m_axi_gmem_BVALID, ap_block_pp0_stage14)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage14, m_axi_gmem_RVALID, exitcond428_reg_1184, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_block_pp0_stage16, ap_block_pp0_stage0)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (exitcond428_reg_1184 = ap_const_lv1_0)))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_WREADY, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    indvars_iv_next41_fu_352_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvars_iv40_load) + unsigned(ap_const_lv5_1));

    m_axi_gmem_ARADDR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage14, exitcond428_reg_1184, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage0_11001, gmem_addr_reg_1200, gmem_addr_1_reg_1207, ap_block_pp0_stage2_11001, gmem_addr_6_reg_1220, ap_block_pp0_stage3_11001, gmem_addr_7_reg_1232, gmem_addr_8_reg_1238, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, gmem_addr_9_reg_1249, ap_block_pp0_stage6_11001, gmem_addr_10_reg_1260, gmem_addr_11_reg_1266, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, gmem_addr_12_reg_1277, ap_block_pp0_stage9_11001, gmem_addr_13_reg_1288, ap_block_pp0_stage10_11001, gmem_addr_14_reg_1299, ap_block_pp0_stage11_11001, gmem_addr_15_reg_1310, ap_block_pp0_stage12_11001, gmem_addr_16_reg_1321, ap_block_pp0_stage13_11001, gmem_addr_17_reg_1337, ap_block_pp0_stage14_11001, gmem_addr_18_reg_1348, ap_block_pp0_stage15_11001, gmem_addr_19_reg_1359, gmem_addr_20_reg_1365, ap_block_pp0_stage16_11001, ap_block_pp0_stage1_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem_ARADDR <= gmem_addr_20_reg_1365;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_19_reg_1359;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_18_reg_1348;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_17_reg_1337;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_16_reg_1321;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_15_reg_1310;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_14_reg_1299;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_13_reg_1288;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_12_reg_1277;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_11_reg_1266;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_10_reg_1260;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_9_reg_1249;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_8_reg_1238;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_7_reg_1232;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_6_reg_1220;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_1_reg_1207;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond428_reg_1184 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_reg_1200;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_1;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage14, exitcond428_reg_1184, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage0_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= gmem_addr_reg_1200_pp0_iter1_reg;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_1;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;

    m_axi_gmem_AWVALID_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then 
            m_axi_gmem_AWVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_BREADY_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001))) then 
            m_axi_gmem_BREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage14, exitcond428_reg_1184, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage0_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (exitcond428_reg_1184 = ap_const_lv1_0)))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_fu_1146_p3),32));
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv4_F;
    m_axi_gmem_WUSER <= ap_const_lv1_0;

    m_axi_gmem_WVALID_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then 
            m_axi_gmem_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_cast100_cast_cast_fu_618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast100_cast_fu_615_p1),64));
        p_cast100_cast_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast96_cast_reg_1226),9));

    p_cast101_cast_cast_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast101_cast_fu_647_p1),64));
        p_cast101_cast_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast95_cast_reg_1213),9));

    p_cast102_cast_cast_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast102_cast_fu_685_p4),64));
    p_cast102_cast_fu_685_p4 <= ((ap_const_lv4_8 & empty_82_reg_1188) & ap_const_lv2_0);
    p_cast103_cast_cast_fu_732_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast103_cast_fu_723_p4),64));
    p_cast103_cast_fu_723_p4 <= ((ap_const_lv4_9 & empty_82_reg_1188) & ap_const_lv2_0);
    p_cast104_cast_cast_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast104_cast_fu_761_p4),64));
    p_cast104_cast_fu_761_p4 <= ((ap_const_lv4_A & empty_82_reg_1188) & ap_const_lv2_0);
    p_cast105_cast_cast_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast105_cast_fu_814_p4),64));
    p_cast105_cast_fu_814_p4 <= ((ap_const_lv4_B & empty_82_reg_1188) & ap_const_lv2_0);
    p_cast106_cast_cast_fu_878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast106_cast_fu_875_p1),64));
        p_cast106_cast_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast98_cast_reg_1244),10));

    p_cast107_cast_cast_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast107_cast_fu_907_p1),64));
        p_cast107_cast_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast99_cast_reg_1255),10));

    p_cast108_cast_cast_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast108_cast_fu_939_p1),64));
        p_cast108_cast_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast96_cast_reg_1226),10));

    p_cast109_cast_cast_fu_974_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast109_cast_fu_971_p1),64));
        p_cast109_cast_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast95_cast_reg_1213),10));

    p_cast10_fu_703_p4 <= empty_101_fu_698_p2(63 downto 2);
    p_cast11_fu_741_p4 <= empty_103_fu_736_p2(63 downto 2);
    p_cast12_fu_779_p4 <= empty_105_fu_774_p2(63 downto 2);
    p_cast13_fu_832_p4 <= empty_107_fu_827_p2(63 downto 2);
    p_cast14_fu_887_p4 <= empty_109_fu_882_p2(63 downto 2);
        p_cast15_cast_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast1_fu_380_p4),64));

    p_cast15_fu_919_p4 <= empty_111_fu_914_p2(63 downto 2);
    p_cast16_fu_951_p4 <= empty_113_fu_946_p2(63 downto 2);
        p_cast17_cast_fu_416_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast2_fu_406_p4),64));

    p_cast17_fu_983_p4 <= empty_115_fu_978_p2(63 downto 2);
    p_cast1_fu_380_p4 <= empty_83_fu_374_p2(63 downto 2);
        p_cast20_cast_fu_459_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast3_fu_449_p4),64));

        p_cast23_cast_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast4_fu_487_p4),64));

        p_cast25_cast_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast5_fu_519_p4),64));

        p_cast28_cast_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast6_fu_557_p4),64));

    p_cast2_fu_406_p4 <= empty_84_fu_400_p2(63 downto 2);
        p_cast30_cast_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast7_fu_595_p4),64));

        p_cast32_cast_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast8_fu_627_p4),64));

        p_cast34_cast_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast9_fu_659_p4),64));

        p_cast37_cast_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast10_fu_703_p4),64));

        p_cast39_cast_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast11_fu_741_p4),64));

    p_cast3_fu_449_p4 <= empty_87_fu_444_p2(63 downto 2);
        p_cast41_cast_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast12_fu_779_p4),64));

        p_cast43_cast_fu_842_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast13_fu_832_p4),64));

        p_cast45_cast_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast14_fu_887_p4),64));

        p_cast47_cast_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast15_fu_919_p4),64));

        p_cast49_cast_fu_961_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast16_fu_951_p4),64));

    p_cast4_fu_487_p4 <= empty_89_fu_482_p2(63 downto 2);
        p_cast51_cast_fu_993_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast17_fu_983_p4),64));

    p_cast5_fu_519_p4 <= empty_91_fu_514_p2(63 downto 2);
    p_cast6_fu_557_p4 <= empty_93_fu_552_p2(63 downto 2);
    p_cast7_fu_595_p4 <= empty_95_fu_590_p2(63 downto 2);
    p_cast8_fu_627_p4 <= empty_97_fu_622_p2(63 downto 2);
    p_cast93_fu_370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_362_p3),64));
    p_cast95_cast_cast_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast95_cast_fu_431_p4),64));
    p_cast95_cast_fu_431_p4 <= ((ap_const_lv1_1 & empty_82_reg_1188) & ap_const_lv2_0);
    p_cast96_cast_cast_fu_478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast96_cast_fu_469_p4),64));
    p_cast96_cast_fu_469_p4 <= ((ap_const_lv2_2 & empty_82_reg_1188) & ap_const_lv2_0);
    p_cast97_cast_cast_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast97_cast_fu_507_p1),64));
        p_cast97_cast_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast95_cast_reg_1213),8));

    p_cast98_cast_cast_fu_548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast98_cast_fu_539_p4),64));
    p_cast98_cast_fu_539_p4 <= ((ap_const_lv3_4 & empty_82_reg_1188) & ap_const_lv2_0);
    p_cast99_cast_cast_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_cast99_cast_fu_577_p4),64));
    p_cast99_cast_fu_577_p4 <= ((ap_const_lv3_5 & empty_82_reg_1188) & ap_const_lv2_0);
    p_cast9_fu_659_p4 <= empty_99_fu_654_p2(63 downto 2);
    tmp10_fu_1067_p2 <= std_logic_vector(unsigned(empty_104_fu_1051_p2) + unsigned(empty_106_fu_1056_p2));
    tmp11_fu_1118_p2 <= std_logic_vector(unsigned(tmp13_fu_1113_p2) + unsigned(tmp12_fu_1105_p2));
    tmp12_fu_1105_p2 <= std_logic_vector(unsigned(empty_108_reg_1401) + unsigned(empty_110_reg_1411));
    tmp13_fu_1113_p2 <= std_logic_vector(unsigned(tmp14_fu_1109_p2) + unsigned(empty_112_reg_1416));
    tmp14_fu_1109_p2 <= std_logic_vector(unsigned(empty_114_reg_1421) + unsigned(empty_116_reg_1426));
    tmp1_fu_863_p2 <= std_logic_vector(unsigned(tmp3_fu_857_p2) + unsigned(tmp2_fu_852_p2));
    tmp2_fu_852_p2 <= std_logic_vector(unsigned(empty_85_reg_1283) + unsigned(empty_86_fu_799_p2));
    tmp3_fu_857_p2 <= std_logic_vector(unsigned(empty_88_fu_804_p2) + unsigned(empty_90_fu_809_p2));
    tmp4_fu_1029_p2 <= std_logic_vector(unsigned(tmp6_fu_1023_p2) + unsigned(tmp5_fu_1018_p2));
    tmp5_fu_1018_p2 <= std_logic_vector(unsigned(empty_92_fu_1003_p2) + unsigned(empty_94_reg_1332));
    tmp6_fu_1023_p2 <= std_logic_vector(unsigned(empty_96_fu_1008_p2) + unsigned(empty_98_fu_1013_p2));
    tmp7_fu_1124_p2 <= std_logic_vector(unsigned(tmp11_fu_1118_p2) + unsigned(tmp8_fu_1101_p2));
    tmp8_fu_1101_p2 <= std_logic_vector(unsigned(tmp10_reg_1406) + unsigned(tmp9_reg_1391));
    tmp9_fu_1045_p2 <= std_logic_vector(unsigned(empty_100_fu_1035_p2) + unsigned(empty_102_fu_1040_p2));
    tmp_3_fu_362_p3 <= (empty_82_fu_358_p1 & ap_const_lv2_0);
    tmp_52_fu_1146_p3 <= (tmp_s_reg_1431 & ap_const_lv1_0);
    tmp_fu_1097_p2 <= std_logic_vector(unsigned(tmp4_reg_1376) + unsigned(tmp1_reg_1327));
end behav;

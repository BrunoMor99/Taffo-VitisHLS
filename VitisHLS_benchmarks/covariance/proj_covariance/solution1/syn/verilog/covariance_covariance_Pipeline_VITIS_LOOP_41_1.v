// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module covariance_covariance_Pipeline_VITIS_LOOP_41_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        mean,
        data
);

parameter    ap_ST_fsm_pp0_stage0 = 17'd1;
parameter    ap_ST_fsm_pp0_stage1 = 17'd2;
parameter    ap_ST_fsm_pp0_stage2 = 17'd4;
parameter    ap_ST_fsm_pp0_stage3 = 17'd8;
parameter    ap_ST_fsm_pp0_stage4 = 17'd16;
parameter    ap_ST_fsm_pp0_stage5 = 17'd32;
parameter    ap_ST_fsm_pp0_stage6 = 17'd64;
parameter    ap_ST_fsm_pp0_stage7 = 17'd128;
parameter    ap_ST_fsm_pp0_stage8 = 17'd256;
parameter    ap_ST_fsm_pp0_stage9 = 17'd512;
parameter    ap_ST_fsm_pp0_stage10 = 17'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 17'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 17'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 17'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 17'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 17'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] mean;
input  [63:0] data;

reg ap_idle;
reg m_axi_gmem_AWVALID;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage14;
reg   [0:0] exitcond428_reg_1184;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_state15_io;
reg    ap_block_state32_pp0_stage14_iter1;
reg    ap_block_pp0_stage14_subdone;
reg    ap_condition_exit_pp0_iter0_stage14;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage16;
reg    ap_block_state17_pp0_stage16_iter0;
reg    ap_block_state17_io;
reg    ap_block_pp0_stage16_subdone;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
reg    gmem_blk_n_AW;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
reg    gmem_blk_n_B;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage16;
wire    ap_block_pp0_stage0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state18_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] exitcond428_fu_346_p2;
wire   [3:0] empty_82_fu_358_p1;
reg   [3:0] empty_82_reg_1188;
reg   [63:0] gmem_addr_reg_1200;
reg   [63:0] gmem_addr_reg_1200_pp0_iter1_reg;
reg   [63:0] gmem_addr_1_reg_1207;
wire  signed [6:0] p_cast95_cast_fu_431_p4;
reg  signed [6:0] p_cast95_cast_reg_1213;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state3_io;
reg    ap_block_state20_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
reg   [63:0] gmem_addr_6_reg_1220;
wire  signed [7:0] p_cast96_cast_fu_469_p4;
reg  signed [7:0] p_cast96_cast_reg_1226;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state4_io;
reg    ap_block_state21_pp0_stage3_iter1;
reg    ap_block_pp0_stage3_11001;
reg   [63:0] gmem_addr_7_reg_1232;
reg   [63:0] gmem_addr_8_reg_1238;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_state5_io;
reg    ap_block_state22_pp0_stage4_iter1;
reg    ap_block_pp0_stage4_11001;
wire  signed [8:0] p_cast98_cast_fu_539_p4;
reg  signed [8:0] p_cast98_cast_reg_1244;
wire    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_state6_io;
reg    ap_block_state23_pp0_stage5_iter1;
reg    ap_block_pp0_stage5_11001;
reg   [63:0] gmem_addr_9_reg_1249;
wire  signed [8:0] p_cast99_cast_fu_577_p4;
reg  signed [8:0] p_cast99_cast_reg_1255;
wire    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_state7_io;
reg    ap_block_state24_pp0_stage6_iter1;
reg    ap_block_pp0_stage6_11001;
reg   [63:0] gmem_addr_10_reg_1260;
reg   [63:0] gmem_addr_11_reg_1266;
wire    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_state8_io;
reg    ap_block_state25_pp0_stage7_iter1;
reg    ap_block_pp0_stage7_11001;
reg   [31:0] gmem_addr_read_reg_1272;
reg    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_state9_io;
wire    ap_block_state26_pp0_stage8_iter1;
reg    ap_block_pp0_stage8_11001;
reg   [63:0] gmem_addr_12_reg_1277;
wire   [31:0] empty_85_fu_679_p2;
reg   [31:0] empty_85_reg_1283;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_state10_io;
wire    ap_block_state27_pp0_stage9_iter1;
reg    ap_block_pp0_stage9_11001;
reg   [63:0] gmem_addr_13_reg_1288;
reg   [31:0] gmem_addr_6_read_reg_1294;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_state11_io;
wire    ap_block_state28_pp0_stage10_iter1;
reg    ap_block_pp0_stage10_11001;
reg   [63:0] gmem_addr_14_reg_1299;
reg   [31:0] gmem_addr_7_read_reg_1305;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_state12_io;
wire    ap_block_state29_pp0_stage11_iter1;
reg    ap_block_pp0_stage11_11001;
reg   [63:0] gmem_addr_15_reg_1310;
reg   [31:0] gmem_addr_8_read_reg_1316;
reg    ap_block_state13_pp0_stage12_iter0;
reg    ap_block_state13_io;
wire    ap_block_state30_pp0_stage12_iter1;
reg    ap_block_pp0_stage12_11001;
reg   [63:0] gmem_addr_16_reg_1321;
wire   [31:0] tmp1_fu_863_p2;
reg   [31:0] tmp1_reg_1327;
wire   [31:0] empty_94_fu_869_p2;
reg   [31:0] empty_94_reg_1332;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_block_state14_io;
wire    ap_block_state31_pp0_stage13_iter1;
reg    ap_block_pp0_stage13_11001;
reg   [63:0] gmem_addr_17_reg_1337;
reg   [31:0] gmem_addr_10_read_reg_1343;
reg    ap_block_pp0_stage14_11001;
reg   [63:0] gmem_addr_18_reg_1348;
reg   [31:0] gmem_addr_11_read_reg_1354;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_state16_io;
reg    ap_block_pp0_stage15_11001;
reg   [63:0] gmem_addr_19_reg_1359;
reg   [63:0] gmem_addr_20_reg_1365;
reg   [31:0] gmem_addr_12_read_reg_1371;
reg    ap_block_pp0_stage16_11001;
wire   [31:0] tmp4_fu_1029_p2;
reg   [31:0] tmp4_reg_1376;
reg   [31:0] gmem_addr_13_read_reg_1381;
reg   [31:0] gmem_addr_14_read_reg_1386;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state2_io;
reg    ap_block_state19_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
wire   [31:0] tmp9_fu_1045_p2;
reg   [31:0] tmp9_reg_1391;
reg   [31:0] gmem_addr_15_read_reg_1396;
wire   [31:0] empty_108_fu_1061_p2;
reg   [31:0] empty_108_reg_1401;
wire   [31:0] tmp10_fu_1067_p2;
reg   [31:0] tmp10_reg_1406;
wire   [31:0] empty_110_fu_1073_p2;
reg   [31:0] empty_110_reg_1411;
wire   [31:0] empty_112_fu_1079_p2;
reg   [31:0] empty_112_reg_1416;
wire   [31:0] empty_114_fu_1085_p2;
reg   [31:0] empty_114_reg_1421;
wire   [31:0] empty_116_fu_1091_p2;
reg   [31:0] empty_116_reg_1426;
reg   [22:0] tmp_s_reg_1431;
reg    ap_enable_reg_pp0_iter0_reg;
wire  signed [63:0] p_cast15_cast_fu_390_p1;
wire  signed [63:0] p_cast17_cast_fu_416_p1;
wire  signed [63:0] p_cast20_cast_fu_459_p1;
wire  signed [63:0] p_cast23_cast_fu_497_p1;
wire  signed [63:0] p_cast25_cast_fu_529_p1;
wire  signed [63:0] p_cast28_cast_fu_567_p1;
wire  signed [63:0] p_cast30_cast_fu_605_p1;
wire  signed [63:0] p_cast32_cast_fu_637_p1;
wire  signed [63:0] p_cast34_cast_fu_669_p1;
wire  signed [63:0] p_cast37_cast_fu_713_p1;
wire  signed [63:0] p_cast39_cast_fu_751_p1;
wire  signed [63:0] p_cast41_cast_fu_789_p1;
wire  signed [63:0] p_cast43_cast_fu_842_p1;
wire  signed [63:0] p_cast45_cast_fu_897_p1;
wire  signed [63:0] p_cast47_cast_fu_929_p1;
wire  signed [63:0] p_cast49_cast_fu_961_p1;
wire  signed [63:0] p_cast51_cast_fu_993_p1;
reg    ap_block_pp0_stage9_01001;
reg   [4:0] indvars_iv40_fu_108;
wire   [4:0] indvars_iv_next41_fu_352_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_indvars_iv40_load;
wire   [5:0] tmp_3_fu_362_p3;
wire   [63:0] p_cast93_fu_370_p1;
wire   [63:0] empty_83_fu_374_p2;
wire   [61:0] p_cast1_fu_380_p4;
wire   [63:0] empty_84_fu_400_p2;
wire   [61:0] p_cast2_fu_406_p4;
wire   [63:0] p_cast95_cast_cast_fu_440_p1;
wire   [63:0] empty_87_fu_444_p2;
wire   [61:0] p_cast3_fu_449_p4;
wire   [63:0] p_cast96_cast_cast_fu_478_p1;
wire   [63:0] empty_89_fu_482_p2;
wire   [61:0] p_cast4_fu_487_p4;
wire  signed [7:0] p_cast97_cast_fu_507_p1;
wire   [63:0] p_cast97_cast_cast_fu_510_p1;
wire   [63:0] empty_91_fu_514_p2;
wire   [61:0] p_cast5_fu_519_p4;
wire   [63:0] p_cast98_cast_cast_fu_548_p1;
wire   [63:0] empty_93_fu_552_p2;
wire   [61:0] p_cast6_fu_557_p4;
wire   [63:0] p_cast99_cast_cast_fu_586_p1;
wire   [63:0] empty_95_fu_590_p2;
wire   [61:0] p_cast7_fu_595_p4;
wire  signed [8:0] p_cast100_cast_fu_615_p1;
wire   [63:0] p_cast100_cast_cast_fu_618_p1;
wire   [63:0] empty_97_fu_622_p2;
wire   [61:0] p_cast8_fu_627_p4;
wire  signed [8:0] p_cast101_cast_fu_647_p1;
wire   [63:0] p_cast101_cast_cast_fu_650_p1;
wire   [63:0] empty_99_fu_654_p2;
wire   [61:0] p_cast9_fu_659_p4;
wire   [9:0] p_cast102_cast_fu_685_p4;
wire   [63:0] p_cast102_cast_cast_fu_694_p1;
wire   [63:0] empty_101_fu_698_p2;
wire   [61:0] p_cast10_fu_703_p4;
wire   [9:0] p_cast103_cast_fu_723_p4;
wire   [63:0] p_cast103_cast_cast_fu_732_p1;
wire   [63:0] empty_103_fu_736_p2;
wire   [61:0] p_cast11_fu_741_p4;
wire   [9:0] p_cast104_cast_fu_761_p4;
wire   [63:0] p_cast104_cast_cast_fu_770_p1;
wire   [63:0] empty_105_fu_774_p2;
wire   [61:0] p_cast12_fu_779_p4;
wire   [9:0] p_cast105_cast_fu_814_p4;
wire   [63:0] p_cast105_cast_cast_fu_823_p1;
wire   [63:0] empty_107_fu_827_p2;
wire   [61:0] p_cast13_fu_832_p4;
wire   [31:0] empty_86_fu_799_p2;
wire   [31:0] empty_88_fu_804_p2;
wire   [31:0] empty_90_fu_809_p2;
wire   [31:0] tmp3_fu_857_p2;
wire   [31:0] tmp2_fu_852_p2;
wire  signed [9:0] p_cast106_cast_fu_875_p1;
wire   [63:0] p_cast106_cast_cast_fu_878_p1;
wire   [63:0] empty_109_fu_882_p2;
wire   [61:0] p_cast14_fu_887_p4;
wire  signed [9:0] p_cast107_cast_fu_907_p1;
wire   [63:0] p_cast107_cast_cast_fu_910_p1;
wire   [63:0] empty_111_fu_914_p2;
wire   [61:0] p_cast15_fu_919_p4;
wire  signed [9:0] p_cast108_cast_fu_939_p1;
wire   [63:0] p_cast108_cast_cast_fu_942_p1;
wire   [63:0] empty_113_fu_946_p2;
wire   [61:0] p_cast16_fu_951_p4;
wire  signed [9:0] p_cast109_cast_fu_971_p1;
wire   [63:0] p_cast109_cast_cast_fu_974_p1;
wire   [63:0] empty_115_fu_978_p2;
wire   [61:0] p_cast17_fu_983_p4;
wire   [31:0] empty_92_fu_1003_p2;
wire   [31:0] empty_96_fu_1008_p2;
wire   [31:0] empty_98_fu_1013_p2;
wire   [31:0] tmp6_fu_1023_p2;
wire   [31:0] tmp5_fu_1018_p2;
wire   [31:0] empty_100_fu_1035_p2;
wire   [31:0] empty_102_fu_1040_p2;
wire   [31:0] empty_104_fu_1051_p2;
wire   [31:0] empty_106_fu_1056_p2;
wire   [31:0] tmp14_fu_1109_p2;
wire   [31:0] tmp13_fu_1113_p2;
wire   [31:0] tmp12_fu_1105_p2;
wire   [31:0] tmp11_fu_1118_p2;
wire   [31:0] tmp8_fu_1101_p2;
wire   [31:0] tmp7_fu_1124_p2;
wire   [31:0] tmp_fu_1097_p2;
wire   [31:0] add16_u0_32fixp_15_fu_1130_p2;
wire   [23:0] tmp_52_fu_1146_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [16:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage15_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

covariance_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage14),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage14)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((exitcond428_fu_346_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvars_iv40_fu_108 <= indvars_iv_next41_fu_352_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvars_iv40_fu_108 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        empty_108_reg_1401[31 : 5] <= empty_108_fu_1061_p2[31 : 5];
        tmp10_reg_1406[31 : 5] <= tmp10_fu_1067_p2[31 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        empty_110_reg_1411[31 : 5] <= empty_110_fu_1073_p2[31 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        empty_112_reg_1416[31 : 5] <= empty_112_fu_1079_p2[31 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        empty_114_reg_1421[31 : 5] <= empty_114_fu_1085_p2[31 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        empty_116_reg_1426[31 : 5] <= empty_116_fu_1091_p2[31 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond428_fu_346_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_82_reg_1188 <= empty_82_fu_358_p1;
        gmem_addr_1_reg_1207 <= p_cast17_cast_fu_416_p1;
        gmem_addr_reg_1200 <= p_cast15_cast_fu_390_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        empty_85_reg_1283[31 : 5] <= empty_85_fu_679_p2[31 : 5];
        gmem_addr_13_reg_1288 <= p_cast37_cast_fu_713_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        empty_94_reg_1332[31 : 5] <= empty_94_fu_869_p2[31 : 5];
        gmem_addr_17_reg_1337 <= p_cast45_cast_fu_897_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond428_reg_1184 <= exitcond428_fu_346_p2;
        gmem_addr_13_read_reg_1381 <= m_axi_gmem_RDATA;
        gmem_addr_reg_1200_pp0_iter1_reg <= gmem_addr_reg_1200;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        gmem_addr_10_read_reg_1343 <= m_axi_gmem_RDATA;
        gmem_addr_18_reg_1348 <= p_cast47_cast_fu_929_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        gmem_addr_10_reg_1260 <= p_cast30_cast_fu_605_p1;
        p_cast99_cast_reg_1255[5 : 2] <= p_cast99_cast_fu_577_p4[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        gmem_addr_11_read_reg_1354 <= m_axi_gmem_RDATA;
        gmem_addr_19_reg_1359 <= p_cast49_cast_fu_961_p1;
        gmem_addr_20_reg_1365 <= p_cast51_cast_fu_993_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        gmem_addr_11_reg_1266 <= p_cast32_cast_fu_637_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        gmem_addr_12_read_reg_1371 <= m_axi_gmem_RDATA;
        tmp4_reg_1376[31 : 5] <= tmp4_fu_1029_p2[31 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        gmem_addr_12_reg_1277 <= p_cast34_cast_fu_669_p1;
        gmem_addr_read_reg_1272 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gmem_addr_14_read_reg_1386 <= m_axi_gmem_RDATA;
        tmp9_reg_1391[31 : 5] <= tmp9_fu_1045_p2[31 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        gmem_addr_14_reg_1299 <= p_cast39_cast_fu_751_p1;
        gmem_addr_6_read_reg_1294 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        gmem_addr_15_read_reg_1396 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        gmem_addr_15_reg_1310 <= p_cast41_cast_fu_789_p1;
        gmem_addr_7_read_reg_1305 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        gmem_addr_16_reg_1321 <= p_cast43_cast_fu_842_p1;
        gmem_addr_8_read_reg_1316 <= m_axi_gmem_RDATA;
        tmp1_reg_1327[31 : 4] <= tmp1_fu_863_p2[31 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        gmem_addr_6_reg_1220 <= p_cast20_cast_fu_459_p1;
        p_cast95_cast_reg_1213[5 : 2] <= p_cast95_cast_fu_431_p4[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        gmem_addr_7_reg_1232 <= p_cast23_cast_fu_497_p1;
        p_cast96_cast_reg_1226[5 : 2] <= p_cast96_cast_fu_469_p4[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        gmem_addr_8_reg_1238 <= p_cast25_cast_fu_529_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        gmem_addr_9_reg_1249 <= p_cast28_cast_fu_567_p1;
        p_cast98_cast_reg_1244[5 : 2] <= p_cast98_cast_fu_539_p4[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        tmp_s_reg_1431 <= {{add16_u0_32fixp_15_fu_1130_p2[31:9]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_subdone) & (exitcond428_reg_1184 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage14 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage14 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage14_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvars_iv40_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvars_iv40_load = indvars_iv40_fu_108;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (exitcond428_reg_1184 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (exitcond428_reg_1184 == 1'd0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_ARADDR = gmem_addr_20_reg_1365;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_19_reg_1359;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_18_reg_1348;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_17_reg_1337;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_16_reg_1321;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_15_reg_1310;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_14_reg_1299;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_13_reg_1288;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_12_reg_1277;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_11_reg_1266;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_10_reg_1260;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_9_reg_1249;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_8_reg_1238;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_7_reg_1232;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_6_reg_1220;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_1_reg_1207;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond428_reg_1184 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_reg_1200;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (exitcond428_reg_1184 == 1'd0)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (exitcond428_reg_1184 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (exitcond428_reg_1184 == 1'd0)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage14)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add16_u0_32fixp_15_fu_1130_p2 = (tmp7_fu_1124_p2 + tmp_fu_1097_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_gmem_RVALID == 1'b0) | (m_axi_gmem_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_gmem_RVALID == 1'b0) | (m_axi_gmem_ARREADY == 1'b0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0))));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0))));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = (((m_axi_gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = (((m_axi_gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0)))));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0))));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = (((m_axi_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = (((m_axi_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0)))));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = (((m_axi_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = (((m_axi_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0)))));
end

always @ (*) begin
    ap_block_state10_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state11_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state12_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state13_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state14_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state15_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state16_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state17_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state17_pp0_stage16_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state18_pp0_stage0_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state19_pp0_stage1_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage2_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state21_pp0_stage3_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state22_pp0_stage4_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp0_stage5_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state24_pp0_stage6_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state25_pp0_stage7_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

assign ap_block_state26_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state32_pp0_stage14_iter1 = (m_axi_gmem_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state3_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond428_reg_1184 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage14;

assign empty_100_fu_1035_p2 = gmem_addr_12_read_reg_1371 << 32'd5;

assign empty_101_fu_698_p2 = (p_cast102_cast_cast_fu_694_p1 + data);

assign empty_102_fu_1040_p2 = gmem_addr_13_read_reg_1381 << 32'd5;

assign empty_103_fu_736_p2 = (p_cast103_cast_cast_fu_732_p1 + data);

assign empty_104_fu_1051_p2 = gmem_addr_14_read_reg_1386 << 32'd5;

assign empty_105_fu_774_p2 = (p_cast104_cast_cast_fu_770_p1 + data);

assign empty_106_fu_1056_p2 = gmem_addr_15_read_reg_1396 << 32'd5;

assign empty_107_fu_827_p2 = (p_cast105_cast_cast_fu_823_p1 + data);

assign empty_108_fu_1061_p2 = m_axi_gmem_RDATA << 32'd5;

assign empty_109_fu_882_p2 = (p_cast106_cast_cast_fu_878_p1 + data);

assign empty_110_fu_1073_p2 = m_axi_gmem_RDATA << 32'd5;

assign empty_111_fu_914_p2 = (p_cast107_cast_cast_fu_910_p1 + data);

assign empty_112_fu_1079_p2 = m_axi_gmem_RDATA << 32'd5;

assign empty_113_fu_946_p2 = (p_cast108_cast_cast_fu_942_p1 + data);

assign empty_114_fu_1085_p2 = m_axi_gmem_RDATA << 32'd5;

assign empty_115_fu_978_p2 = (p_cast109_cast_cast_fu_974_p1 + data);

assign empty_116_fu_1091_p2 = m_axi_gmem_RDATA << 32'd5;

assign empty_82_fu_358_p1 = ap_sig_allocacmp_indvars_iv40_load[3:0];

assign empty_83_fu_374_p2 = (p_cast93_fu_370_p1 + mean);

assign empty_84_fu_400_p2 = (p_cast93_fu_370_p1 + data);

assign empty_85_fu_679_p2 = m_axi_gmem_RDATA << 32'd5;

assign empty_86_fu_799_p2 = gmem_addr_read_reg_1272 << 32'd4;

assign empty_87_fu_444_p2 = (p_cast95_cast_cast_fu_440_p1 + data);

assign empty_88_fu_804_p2 = gmem_addr_6_read_reg_1294 << 32'd5;

assign empty_89_fu_482_p2 = (p_cast96_cast_cast_fu_478_p1 + data);

assign empty_90_fu_809_p2 = gmem_addr_7_read_reg_1305 << 32'd5;

assign empty_91_fu_514_p2 = (p_cast97_cast_cast_fu_510_p1 + data);

assign empty_92_fu_1003_p2 = gmem_addr_8_read_reg_1316 << 32'd5;

assign empty_93_fu_552_p2 = (p_cast98_cast_cast_fu_548_p1 + data);

assign empty_94_fu_869_p2 = m_axi_gmem_RDATA << 32'd5;

assign empty_95_fu_590_p2 = (p_cast99_cast_cast_fu_586_p1 + data);

assign empty_96_fu_1008_p2 = gmem_addr_10_read_reg_1343 << 32'd5;

assign empty_97_fu_622_p2 = (p_cast100_cast_cast_fu_618_p1 + data);

assign empty_98_fu_1013_p2 = gmem_addr_11_read_reg_1354 << 32'd5;

assign empty_99_fu_654_p2 = (p_cast101_cast_cast_fu_650_p1 + data);

assign exitcond428_fu_346_p2 = ((ap_sig_allocacmp_indvars_iv40_load == 5'd16) ? 1'b1 : 1'b0);

assign indvars_iv_next41_fu_352_p2 = (ap_sig_allocacmp_indvars_iv40_load + 5'd1);

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = gmem_addr_reg_1200_pp0_iter1_reg;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_WDATA = tmp_52_fu_1146_p3;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd15;

assign m_axi_gmem_WUSER = 1'd0;

assign p_cast100_cast_cast_fu_618_p1 = $unsigned(p_cast100_cast_fu_615_p1);

assign p_cast100_cast_fu_615_p1 = p_cast96_cast_reg_1226;

assign p_cast101_cast_cast_fu_650_p1 = $unsigned(p_cast101_cast_fu_647_p1);

assign p_cast101_cast_fu_647_p1 = p_cast95_cast_reg_1213;

assign p_cast102_cast_cast_fu_694_p1 = p_cast102_cast_fu_685_p4;

assign p_cast102_cast_fu_685_p4 = {{{{4'd8}, {empty_82_reg_1188}}}, {2'd0}};

assign p_cast103_cast_cast_fu_732_p1 = p_cast103_cast_fu_723_p4;

assign p_cast103_cast_fu_723_p4 = {{{{4'd9}, {empty_82_reg_1188}}}, {2'd0}};

assign p_cast104_cast_cast_fu_770_p1 = p_cast104_cast_fu_761_p4;

assign p_cast104_cast_fu_761_p4 = {{{{4'd10}, {empty_82_reg_1188}}}, {2'd0}};

assign p_cast105_cast_cast_fu_823_p1 = p_cast105_cast_fu_814_p4;

assign p_cast105_cast_fu_814_p4 = {{{{4'd11}, {empty_82_reg_1188}}}, {2'd0}};

assign p_cast106_cast_cast_fu_878_p1 = $unsigned(p_cast106_cast_fu_875_p1);

assign p_cast106_cast_fu_875_p1 = p_cast98_cast_reg_1244;

assign p_cast107_cast_cast_fu_910_p1 = $unsigned(p_cast107_cast_fu_907_p1);

assign p_cast107_cast_fu_907_p1 = p_cast99_cast_reg_1255;

assign p_cast108_cast_cast_fu_942_p1 = $unsigned(p_cast108_cast_fu_939_p1);

assign p_cast108_cast_fu_939_p1 = p_cast96_cast_reg_1226;

assign p_cast109_cast_cast_fu_974_p1 = $unsigned(p_cast109_cast_fu_971_p1);

assign p_cast109_cast_fu_971_p1 = p_cast95_cast_reg_1213;

assign p_cast10_fu_703_p4 = {{empty_101_fu_698_p2[63:2]}};

assign p_cast11_fu_741_p4 = {{empty_103_fu_736_p2[63:2]}};

assign p_cast12_fu_779_p4 = {{empty_105_fu_774_p2[63:2]}};

assign p_cast13_fu_832_p4 = {{empty_107_fu_827_p2[63:2]}};

assign p_cast14_fu_887_p4 = {{empty_109_fu_882_p2[63:2]}};

assign p_cast15_cast_fu_390_p1 = $signed(p_cast1_fu_380_p4);

assign p_cast15_fu_919_p4 = {{empty_111_fu_914_p2[63:2]}};

assign p_cast16_fu_951_p4 = {{empty_113_fu_946_p2[63:2]}};

assign p_cast17_cast_fu_416_p1 = $signed(p_cast2_fu_406_p4);

assign p_cast17_fu_983_p4 = {{empty_115_fu_978_p2[63:2]}};

assign p_cast1_fu_380_p4 = {{empty_83_fu_374_p2[63:2]}};

assign p_cast20_cast_fu_459_p1 = $signed(p_cast3_fu_449_p4);

assign p_cast23_cast_fu_497_p1 = $signed(p_cast4_fu_487_p4);

assign p_cast25_cast_fu_529_p1 = $signed(p_cast5_fu_519_p4);

assign p_cast28_cast_fu_567_p1 = $signed(p_cast6_fu_557_p4);

assign p_cast2_fu_406_p4 = {{empty_84_fu_400_p2[63:2]}};

assign p_cast30_cast_fu_605_p1 = $signed(p_cast7_fu_595_p4);

assign p_cast32_cast_fu_637_p1 = $signed(p_cast8_fu_627_p4);

assign p_cast34_cast_fu_669_p1 = $signed(p_cast9_fu_659_p4);

assign p_cast37_cast_fu_713_p1 = $signed(p_cast10_fu_703_p4);

assign p_cast39_cast_fu_751_p1 = $signed(p_cast11_fu_741_p4);

assign p_cast3_fu_449_p4 = {{empty_87_fu_444_p2[63:2]}};

assign p_cast41_cast_fu_789_p1 = $signed(p_cast12_fu_779_p4);

assign p_cast43_cast_fu_842_p1 = $signed(p_cast13_fu_832_p4);

assign p_cast45_cast_fu_897_p1 = $signed(p_cast14_fu_887_p4);

assign p_cast47_cast_fu_929_p1 = $signed(p_cast15_fu_919_p4);

assign p_cast49_cast_fu_961_p1 = $signed(p_cast16_fu_951_p4);

assign p_cast4_fu_487_p4 = {{empty_89_fu_482_p2[63:2]}};

assign p_cast51_cast_fu_993_p1 = $signed(p_cast17_fu_983_p4);

assign p_cast5_fu_519_p4 = {{empty_91_fu_514_p2[63:2]}};

assign p_cast6_fu_557_p4 = {{empty_93_fu_552_p2[63:2]}};

assign p_cast7_fu_595_p4 = {{empty_95_fu_590_p2[63:2]}};

assign p_cast8_fu_627_p4 = {{empty_97_fu_622_p2[63:2]}};

assign p_cast93_fu_370_p1 = tmp_3_fu_362_p3;

assign p_cast95_cast_cast_fu_440_p1 = $unsigned(p_cast95_cast_fu_431_p4);

assign p_cast95_cast_fu_431_p4 = {{{{1'd1}, {empty_82_reg_1188}}}, {2'd0}};

assign p_cast96_cast_cast_fu_478_p1 = $unsigned(p_cast96_cast_fu_469_p4);

assign p_cast96_cast_fu_469_p4 = {{{{2'd2}, {empty_82_reg_1188}}}, {2'd0}};

assign p_cast97_cast_cast_fu_510_p1 = $unsigned(p_cast97_cast_fu_507_p1);

assign p_cast97_cast_fu_507_p1 = p_cast95_cast_reg_1213;

assign p_cast98_cast_cast_fu_548_p1 = $unsigned(p_cast98_cast_fu_539_p4);

assign p_cast98_cast_fu_539_p4 = {{{{3'd4}, {empty_82_reg_1188}}}, {2'd0}};

assign p_cast99_cast_cast_fu_586_p1 = $unsigned(p_cast99_cast_fu_577_p4);

assign p_cast99_cast_fu_577_p4 = {{{{3'd5}, {empty_82_reg_1188}}}, {2'd0}};

assign p_cast9_fu_659_p4 = {{empty_99_fu_654_p2[63:2]}};

assign tmp10_fu_1067_p2 = (empty_104_fu_1051_p2 + empty_106_fu_1056_p2);

assign tmp11_fu_1118_p2 = (tmp13_fu_1113_p2 + tmp12_fu_1105_p2);

assign tmp12_fu_1105_p2 = (empty_108_reg_1401 + empty_110_reg_1411);

assign tmp13_fu_1113_p2 = (tmp14_fu_1109_p2 + empty_112_reg_1416);

assign tmp14_fu_1109_p2 = (empty_114_reg_1421 + empty_116_reg_1426);

assign tmp1_fu_863_p2 = (tmp3_fu_857_p2 + tmp2_fu_852_p2);

assign tmp2_fu_852_p2 = (empty_85_reg_1283 + empty_86_fu_799_p2);

assign tmp3_fu_857_p2 = (empty_88_fu_804_p2 + empty_90_fu_809_p2);

assign tmp4_fu_1029_p2 = (tmp6_fu_1023_p2 + tmp5_fu_1018_p2);

assign tmp5_fu_1018_p2 = (empty_92_fu_1003_p2 + empty_94_reg_1332);

assign tmp6_fu_1023_p2 = (empty_96_fu_1008_p2 + empty_98_fu_1013_p2);

assign tmp7_fu_1124_p2 = (tmp11_fu_1118_p2 + tmp8_fu_1101_p2);

assign tmp8_fu_1101_p2 = (tmp10_reg_1406 + tmp9_reg_1391);

assign tmp9_fu_1045_p2 = (empty_100_fu_1035_p2 + empty_102_fu_1040_p2);

assign tmp_3_fu_362_p3 = {{empty_82_fu_358_p1}, {2'd0}};

assign tmp_52_fu_1146_p3 = {{tmp_s_reg_1431}, {1'd0}};

assign tmp_fu_1097_p2 = (tmp4_reg_1376 + tmp1_reg_1327);

always @ (posedge ap_clk) begin
    p_cast95_cast_reg_1213[1:0] <= 2'b00;
    p_cast95_cast_reg_1213[6] <= 1'b1;
    p_cast96_cast_reg_1226[1:0] <= 2'b00;
    p_cast96_cast_reg_1226[7:6] <= 2'b10;
    p_cast98_cast_reg_1244[1:0] <= 2'b00;
    p_cast98_cast_reg_1244[8:6] <= 3'b100;
    p_cast99_cast_reg_1255[1:0] <= 2'b00;
    p_cast99_cast_reg_1255[8:6] <= 3'b101;
    empty_85_reg_1283[4:0] <= 5'b00000;
    tmp1_reg_1327[3:0] <= 4'b0000;
    empty_94_reg_1332[4:0] <= 5'b00000;
    tmp4_reg_1376[4:0] <= 5'b00000;
    tmp9_reg_1391[4:0] <= 5'b00000;
    empty_108_reg_1401[4:0] <= 5'b00000;
    tmp10_reg_1406[4:0] <= 5'b00000;
    empty_110_reg_1411[4:0] <= 5'b00000;
    empty_112_reg_1416[4:0] <= 5'b00000;
    empty_114_reg_1421[4:0] <= 5'b00000;
    empty_116_reg_1426[4:0] <= 5'b00000;
end

endmodule //covariance_covariance_Pipeline_VITIS_LOOP_41_1

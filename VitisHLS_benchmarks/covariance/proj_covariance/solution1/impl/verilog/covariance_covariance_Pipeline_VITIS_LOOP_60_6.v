// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module covariance_covariance_Pipeline_VITIS_LOOP_60_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        indvars_iv17_cast111,
        p_cast113,
        cov,
        data,
        indvars_iv17_cast
);

parameter    ap_ST_fsm_pp0_stage0 = 32'd1;
parameter    ap_ST_fsm_pp0_stage1 = 32'd2;
parameter    ap_ST_fsm_pp0_stage2 = 32'd4;
parameter    ap_ST_fsm_pp0_stage3 = 32'd8;
parameter    ap_ST_fsm_pp0_stage4 = 32'd16;
parameter    ap_ST_fsm_pp0_stage5 = 32'd32;
parameter    ap_ST_fsm_pp0_stage6 = 32'd64;
parameter    ap_ST_fsm_pp0_stage7 = 32'd128;
parameter    ap_ST_fsm_pp0_stage8 = 32'd256;
parameter    ap_ST_fsm_pp0_stage9 = 32'd512;
parameter    ap_ST_fsm_pp0_stage10 = 32'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 32'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 32'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 32'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 32'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 32'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 32'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 32'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 32'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 32'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 32'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 32'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 32'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 32'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 32'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 32'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 32'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 32'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 32'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 32'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 32'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 32'd2147483648;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [3:0] indvars_iv17_cast111;
input  [7:0] p_cast113;
input  [63:0] cov;
input  [63:0] data;
input  [3:0] indvars_iv17_cast;

reg ap_idle;
reg m_axi_gmem_AWVALID;
reg[63:0] m_axi_gmem_AWADDR;
reg m_axi_gmem_WVALID;
reg[31:0] m_axi_gmem_WDATA;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;

(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state34_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_subdone;
wire   [0:0] exitcond243_fu_416_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_state32_pp0_stage31_iter0;
wire    ap_block_pp0_stage31_subdone;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] exitcond243_reg_1863;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
reg    gmem_blk_n_B;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28;
wire    ap_block_pp0_stage1;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state33_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [61:0] p_cast113_cast_fu_400_p1;
reg   [61:0] p_cast113_cast_reg_1852;
reg   [63:0] indvars_iv19_load_reg_1857;
reg    ap_block_pp0_stage1_11001;
wire   [61:0] empty_23_fu_422_p1;
reg   [61:0] empty_23_reg_1867;
reg   [63:0] gmem_addr_reg_1886;
reg   [63:0] gmem_addr_5_reg_1893;
reg   [63:0] gmem_addr_1_reg_1899;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage2_11001;
reg   [63:0] gmem_addr_2_reg_1905;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage3_11001;
reg   [63:0] gmem_addr_3_reg_1911;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage4_11001;
reg   [63:0] gmem_addr_4_reg_1917;
wire    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_state6_io;
reg    ap_block_pp0_stage5_11001;
reg   [63:0] gmem_addr_6_reg_1923;
wire    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_state7_io;
reg    ap_block_pp0_stage6_11001;
reg   [63:0] gmem_addr_7_reg_1929;
wire    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_state8_io;
reg    ap_block_pp0_stage7_11001;
reg   [63:0] gmem_addr_8_reg_1935;
wire    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_state9_io;
reg    ap_block_pp0_stage8_11001;
reg   [31:0] gmem_addr_read_reg_1941;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_state10_io;
reg    ap_block_pp0_stage9_11001;
reg   [63:0] gmem_addr_9_reg_1946;
reg  signed [31:0] gmem_addr_1_read_reg_1952;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_state11_io;
reg    ap_block_pp0_stage10_11001;
reg   [63:0] gmem_addr_10_reg_1957;
reg   [15:0] tmp_1_reg_1963;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_state12_io;
reg    ap_block_pp0_stage11_11001;
reg  signed [31:0] gmem_addr_2_read_reg_1968;
reg   [63:0] gmem_addr_11_reg_1973;
reg   [15:0] tmp_4_reg_1979;
reg    ap_block_state13_pp0_stage12_iter0;
reg    ap_block_state13_io;
reg    ap_block_pp0_stage12_11001;
reg  signed [31:0] gmem_addr_3_read_reg_1984;
reg   [63:0] gmem_addr_12_reg_1989;
reg   [15:0] tmp_7_reg_1995;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_block_state14_io;
reg    ap_block_pp0_stage13_11001;
reg  signed [31:0] gmem_addr_4_read_reg_2000;
reg   [63:0] gmem_addr_13_reg_2005;
reg   [15:0] tmp_10_reg_2011;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_state15_io;
reg    ap_block_pp0_stage14_11001;
reg  signed [31:0] gmem_addr_6_read_reg_2016;
reg   [63:0] gmem_addr_14_reg_2021;
reg   [63:0] gmem_addr_15_reg_2027;
reg   [63:0] gmem_addr_16_reg_2033;
reg   [63:0] gmem_addr_17_reg_2039;
reg   [15:0] tmp_13_reg_2045;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_state16_io;
reg    ap_block_pp0_stage15_11001;
reg  signed [31:0] gmem_addr_7_read_reg_2050;
reg   [15:0] tmp_16_reg_2055;
reg    ap_block_state17_pp0_stage16_iter0;
reg    ap_block_state17_io;
reg    ap_block_pp0_stage16_11001;
reg  signed [31:0] gmem_addr_8_read_reg_2060;
reg   [15:0] tmp_19_reg_2065;
reg    ap_block_state18_pp0_stage17_iter0;
reg    ap_block_state18_io;
reg    ap_block_pp0_stage17_11001;
reg  signed [31:0] gmem_addr_9_read_reg_2070;
reg   [15:0] tmp_22_reg_2075;
reg    ap_block_state19_pp0_stage18_iter0;
reg    ap_block_state19_io;
reg    ap_block_pp0_stage18_11001;
reg  signed [31:0] gmem_addr_10_read_reg_2080;
reg   [15:0] tmp_25_reg_2085;
reg    ap_block_state20_pp0_stage19_iter0;
reg    ap_block_pp0_stage19_11001;
reg  signed [31:0] gmem_addr_11_read_reg_2090;
reg   [15:0] tmp_28_reg_2095;
reg    ap_block_state21_pp0_stage20_iter0;
reg    ap_block_pp0_stage20_11001;
reg  signed [31:0] gmem_addr_12_read_reg_2100;
reg   [15:0] tmp_31_reg_2105;
reg    ap_block_state22_pp0_stage21_iter0;
reg    ap_block_pp0_stage21_11001;
reg  signed [31:0] gmem_addr_13_read_reg_2110;
reg   [15:0] tmp_34_reg_2115;
reg    ap_block_state23_pp0_stage22_iter0;
reg    ap_block_pp0_stage22_11001;
reg  signed [31:0] gmem_addr_14_read_reg_2120;
reg   [15:0] tmp_37_reg_2125;
reg    ap_block_state24_pp0_stage23_iter0;
reg    ap_block_pp0_stage23_11001;
reg  signed [31:0] gmem_addr_15_read_reg_2130;
reg   [15:0] tmp_40_reg_2135;
reg    ap_block_state25_pp0_stage24_iter0;
reg    ap_block_pp0_stage24_11001;
reg  signed [31:0] gmem_addr_16_read_reg_2140;
reg   [15:0] tmp_43_reg_2145;
reg    ap_block_state26_pp0_stage25_iter0;
reg    ap_block_pp0_stage25_11001;
reg   [31:0] gmem_addr_17_read_reg_2150;
reg   [8:0] p_cast17_reg_2155;
wire    ap_block_state27_pp0_stage26_iter0;
reg    ap_block_state27_io;
reg    ap_block_pp0_stage26_11001;
wire   [31:0] div71_u0_32fixp_cast_fu_1800_p1;
reg   [31:0] div71_u0_32fixp_cast_reg_2160;
wire    ap_block_state28_pp0_stage27_iter0;
reg    ap_block_state28_io;
reg    ap_block_pp0_stage27_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire  signed [63:0] p_cast57_cast_fu_454_p1;
wire  signed [63:0] p_cast92_cast_fu_492_p1;
wire  signed [63:0] p_cast58_cast_fu_522_p1;
wire  signed [63:0] p_cast60_cast_fu_560_p1;
wire  signed [63:0] p_cast62_cast_fu_598_p1;
wire  signed [63:0] p_cast64_cast_fu_636_p1;
wire  signed [63:0] p_cast66_cast_fu_674_p1;
wire  signed [63:0] p_cast68_cast_fu_712_p1;
wire  signed [63:0] p_cast70_cast_fu_750_p1;
wire  signed [63:0] p_cast72_cast_fu_788_p1;
wire  signed [63:0] p_cast74_cast_fu_826_p1;
wire  signed [63:0] p_cast76_cast_fu_904_p1;
wire  signed [63:0] p_cast78_cast_fu_984_p1;
wire  signed [63:0] p_cast80_cast_fu_1064_p1;
wire  signed [63:0] p_cast82_cast_fu_1144_p1;
wire  signed [63:0] p_cast84_cast_fu_1182_p1;
wire  signed [63:0] p_cast86_cast_fu_1220_p1;
wire  signed [63:0] p_cast88_cast_fu_1258_p1;
wire    ap_block_pp0_stage27_01001;
wire    ap_block_state29_pp0_stage28_iter0;
reg    ap_block_state29_io;
reg    ap_block_pp0_stage28_11001;
wire    ap_block_pp0_stage28_01001;
reg   [63:0] indvars_iv19_fu_136;
wire   [63:0] indvars_iv_next20_fu_1804_p2;
wire   [63:0] indvars_iv17_cast111_cast_fu_404_p1;
wire    ap_loop_init;
wire   [61:0] empty_24_fu_426_p2;
wire   [63:0] tmp_s_fu_431_p3;
wire   [63:0] empty_25_fu_439_p2;
wire   [61:0] p_cast_fu_444_p4;
wire   [57:0] empty_75_fu_464_p1;
wire   [63:0] tmp_48_fu_468_p4;
wire   [63:0] empty_76_fu_477_p2;
wire   [61:0] p_cast18_fu_482_p4;
wire   [63:0] empty_26_fu_502_p2;
wire   [63:0] empty_27_fu_507_p2;
wire   [61:0] p_cast1_fu_512_p4;
wire   [61:0] empty_30_fu_532_p2;
wire   [63:0] tmp_3_fu_537_p3;
wire   [63:0] empty_31_fu_545_p2;
wire   [61:0] p_cast2_fu_550_p4;
wire   [61:0] empty_33_fu_570_p2;
wire   [63:0] tmp_6_fu_575_p3;
wire   [63:0] empty_34_fu_583_p2;
wire   [61:0] p_cast3_fu_588_p4;
wire   [61:0] empty_36_fu_608_p2;
wire   [63:0] tmp_9_fu_613_p3;
wire   [63:0] empty_37_fu_621_p2;
wire   [61:0] p_cast4_fu_626_p4;
wire   [61:0] empty_39_fu_646_p2;
wire   [63:0] tmp_12_fu_651_p3;
wire   [63:0] empty_40_fu_659_p2;
wire   [61:0] p_cast5_fu_664_p4;
wire   [61:0] empty_42_fu_684_p2;
wire   [63:0] tmp_15_fu_689_p3;
wire   [63:0] empty_43_fu_697_p2;
wire   [61:0] p_cast6_fu_702_p4;
wire   [61:0] empty_45_fu_722_p2;
wire   [63:0] tmp_18_fu_727_p3;
wire   [63:0] empty_46_fu_735_p2;
wire   [61:0] p_cast7_fu_740_p4;
wire   [61:0] empty_48_fu_760_p2;
wire   [63:0] tmp_21_fu_765_p3;
wire   [63:0] empty_49_fu_773_p2;
wire   [61:0] p_cast8_fu_778_p4;
wire   [61:0] empty_51_fu_798_p2;
wire   [63:0] tmp_24_fu_803_p3;
wire   [63:0] empty_52_fu_811_p2;
wire   [61:0] p_cast9_fu_816_p4;
wire  signed [31:0] empty_28_fu_839_p0;
wire  signed [60:0] gmem_load_20_cast_fu_836_p1;
wire  signed [31:0] empty_28_fu_839_p1;
wire   [60:0] empty_28_fu_839_p2;
wire   [31:0] mul58_u7_25fixp_fu_845_p4;
wire   [31:0] empty_29_fu_855_p2;
wire   [31:0] add63_u7_25fixp_0_fu_860_p2;
wire   [61:0] empty_54_fu_876_p2;
wire   [63:0] tmp_27_fu_881_p3;
wire   [63:0] empty_55_fu_889_p2;
wire   [61:0] p_cast10_fu_894_p4;
wire  signed [31:0] empty_32_fu_924_p0;
wire  signed [60:0] gmem_load_21_cast_fu_921_p1;
wire  signed [31:0] empty_32_fu_924_p1;
wire   [60:0] empty_32_fu_924_p2;
wire   [31:0] mul58_u7_25fixp_1_fu_930_p4;
wire   [31:0] tmp_2_fu_914_p3;
wire   [31:0] add63_u7_25fixp_1_fu_940_p2;
wire   [61:0] empty_57_fu_956_p2;
wire   [63:0] tmp_30_fu_961_p3;
wire   [63:0] empty_58_fu_969_p2;
wire   [61:0] p_cast11_fu_974_p4;
wire  signed [31:0] empty_35_fu_1004_p0;
wire  signed [60:0] gmem_load_22_cast_fu_1001_p1;
wire  signed [31:0] empty_35_fu_1004_p1;
wire   [60:0] empty_35_fu_1004_p2;
wire   [31:0] mul58_u7_25fixp_2_fu_1010_p4;
wire   [31:0] tmp_5_fu_994_p3;
wire   [31:0] add63_u7_25fixp_2_fu_1020_p2;
wire   [61:0] empty_60_fu_1036_p2;
wire   [63:0] tmp_33_fu_1041_p3;
wire   [63:0] empty_61_fu_1049_p2;
wire   [61:0] p_cast12_fu_1054_p4;
wire  signed [31:0] empty_38_fu_1084_p0;
wire  signed [60:0] gmem_load_23_cast_fu_1081_p1;
wire  signed [31:0] empty_38_fu_1084_p1;
wire   [60:0] empty_38_fu_1084_p2;
wire   [31:0] mul58_u7_25fixp_3_fu_1090_p4;
wire   [31:0] tmp_8_fu_1074_p3;
wire   [31:0] add63_u7_25fixp_3_fu_1100_p2;
wire   [61:0] empty_63_fu_1116_p2;
wire   [63:0] tmp_36_fu_1121_p3;
wire   [63:0] empty_64_fu_1129_p2;
wire   [61:0] p_cast13_fu_1134_p4;
wire   [61:0] empty_66_fu_1154_p2;
wire   [63:0] tmp_39_fu_1159_p3;
wire   [63:0] empty_67_fu_1167_p2;
wire   [61:0] p_cast14_fu_1172_p4;
wire   [61:0] empty_69_fu_1192_p2;
wire   [63:0] tmp_42_fu_1197_p3;
wire   [63:0] empty_70_fu_1205_p2;
wire   [61:0] p_cast15_fu_1210_p4;
wire   [61:0] empty_72_fu_1230_p2;
wire   [63:0] tmp_45_fu_1235_p3;
wire   [63:0] empty_73_fu_1243_p2;
wire   [61:0] p_cast16_fu_1248_p4;
wire  signed [31:0] empty_41_fu_1278_p0;
wire  signed [60:0] gmem_load_24_cast_fu_1275_p1;
wire  signed [31:0] empty_41_fu_1278_p1;
wire   [60:0] empty_41_fu_1278_p2;
wire   [31:0] mul58_u7_25fixp_4_fu_1284_p4;
wire   [31:0] tmp_11_fu_1268_p3;
wire   [31:0] add63_u7_25fixp_4_fu_1294_p2;
wire  signed [31:0] empty_44_fu_1320_p0;
wire  signed [60:0] gmem_load_25_cast_fu_1317_p1;
wire  signed [31:0] empty_44_fu_1320_p1;
wire   [60:0] empty_44_fu_1320_p2;
wire   [31:0] mul58_u7_25fixp_5_fu_1326_p4;
wire   [31:0] tmp_14_fu_1310_p3;
wire   [31:0] add63_u7_25fixp_5_fu_1336_p2;
wire  signed [31:0] empty_47_fu_1362_p0;
wire  signed [60:0] gmem_load_26_cast_fu_1359_p1;
wire  signed [31:0] empty_47_fu_1362_p1;
wire   [60:0] empty_47_fu_1362_p2;
wire   [31:0] mul58_u7_25fixp_6_fu_1368_p4;
wire   [31:0] tmp_17_fu_1352_p3;
wire   [31:0] add63_u7_25fixp_6_fu_1378_p2;
wire  signed [31:0] empty_50_fu_1404_p0;
wire  signed [60:0] gmem_load_27_cast_fu_1401_p1;
wire  signed [31:0] empty_50_fu_1404_p1;
wire   [60:0] empty_50_fu_1404_p2;
wire   [31:0] mul58_u7_25fixp_7_fu_1410_p4;
wire   [31:0] tmp_20_fu_1394_p3;
wire   [31:0] add63_u7_25fixp_7_fu_1420_p2;
wire  signed [31:0] empty_53_fu_1446_p0;
wire  signed [60:0] gmem_load_28_cast_fu_1443_p1;
wire  signed [31:0] empty_53_fu_1446_p1;
wire   [60:0] empty_53_fu_1446_p2;
wire   [31:0] mul58_u7_25fixp_8_fu_1452_p4;
wire   [31:0] tmp_23_fu_1436_p3;
wire   [31:0] add63_u7_25fixp_8_fu_1462_p2;
wire  signed [31:0] empty_56_fu_1488_p0;
wire  signed [60:0] gmem_load_29_cast_fu_1485_p1;
wire  signed [31:0] empty_56_fu_1488_p1;
wire   [60:0] empty_56_fu_1488_p2;
wire   [31:0] mul58_u7_25fixp_9_fu_1494_p4;
wire   [31:0] tmp_26_fu_1478_p3;
wire   [31:0] add63_u7_25fixp_9_fu_1504_p2;
wire  signed [31:0] empty_59_fu_1530_p0;
wire  signed [60:0] gmem_load_30_cast_fu_1527_p1;
wire  signed [31:0] empty_59_fu_1530_p1;
wire   [60:0] empty_59_fu_1530_p2;
wire   [31:0] mul58_u7_25fixp_s_fu_1536_p4;
wire   [31:0] tmp_29_fu_1520_p3;
wire   [31:0] add63_u7_25fixp_10_fu_1546_p2;
wire  signed [31:0] empty_62_fu_1572_p0;
wire  signed [60:0] gmem_load_31_cast_fu_1569_p1;
wire  signed [31:0] empty_62_fu_1572_p1;
wire   [60:0] empty_62_fu_1572_p2;
wire   [31:0] mul58_u7_25fixp_10_fu_1578_p4;
wire   [31:0] tmp_32_fu_1562_p3;
wire   [31:0] add63_u7_25fixp_11_fu_1588_p2;
wire  signed [31:0] empty_65_fu_1614_p0;
wire  signed [60:0] gmem_load_32_cast_fu_1611_p1;
wire  signed [31:0] empty_65_fu_1614_p1;
wire   [60:0] empty_65_fu_1614_p2;
wire   [31:0] mul58_u7_25fixp_11_fu_1620_p4;
wire   [31:0] tmp_35_fu_1604_p3;
wire   [31:0] add63_u7_25fixp_12_fu_1630_p2;
wire  signed [31:0] empty_68_fu_1656_p0;
wire  signed [60:0] gmem_load_33_cast_fu_1653_p1;
wire  signed [31:0] empty_68_fu_1656_p1;
wire   [60:0] empty_68_fu_1656_p2;
wire   [31:0] mul58_u7_25fixp_12_fu_1662_p4;
wire   [31:0] tmp_38_fu_1646_p3;
wire   [31:0] add63_u7_25fixp_13_fu_1672_p2;
wire  signed [31:0] empty_71_fu_1698_p0;
wire  signed [60:0] gmem_load_34_cast_fu_1695_p1;
wire  signed [31:0] empty_71_fu_1698_p1;
wire   [60:0] empty_71_fu_1698_p2;
wire   [31:0] mul58_u7_25fixp_13_fu_1704_p4;
wire   [31:0] tmp_41_fu_1688_p3;
wire   [31:0] add63_u7_25fixp_14_fu_1714_p2;
wire  signed [31:0] empty_74_fu_1740_p0;
wire  signed [60:0] gmem_load_35_cast_fu_1737_p1;
wire  signed [31:0] empty_74_fu_1740_p1;
wire   [60:0] empty_74_fu_1740_p2;
wire   [31:0] mul58_u7_25fixp_14_fu_1746_p4;
wire   [31:0] tmp_44_fu_1730_p3;
wire   [31:0] add63_u7_25fixp_15_fu_1756_p2;
wire   [15:0] tmp_46_fu_1762_p4;
wire   [35:0] tmp_47_fu_1772_p3;
wire   [35:0] mul_fu_1784_p0;
wire   [37:0] mul_fu_1784_p1;
wire   [68:0] mul_fu_1784_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [31:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_block_pp0_stage24_subdone;
reg    ap_block_pp0_stage25_subdone;
reg    ap_block_pp0_stage26_subdone;
reg    ap_block_pp0_stage27_subdone;
reg    ap_block_pp0_stage28_subdone;
wire    ap_block_state30_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_state31_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [68:0] mul_fu_1784_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 32'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

covariance_mul_32s_32s_61_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_32s_32s_61_1_1_U7(
    .din0(empty_28_fu_839_p0),
    .din1(empty_28_fu_839_p1),
    .dout(empty_28_fu_839_p2)
);

covariance_mul_32s_32s_61_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_32s_32s_61_1_1_U8(
    .din0(empty_32_fu_924_p0),
    .din1(empty_32_fu_924_p1),
    .dout(empty_32_fu_924_p2)
);

covariance_mul_32s_32s_61_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_32s_32s_61_1_1_U9(
    .din0(empty_35_fu_1004_p0),
    .din1(empty_35_fu_1004_p1),
    .dout(empty_35_fu_1004_p2)
);

covariance_mul_32s_32s_61_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_32s_32s_61_1_1_U10(
    .din0(empty_38_fu_1084_p0),
    .din1(empty_38_fu_1084_p1),
    .dout(empty_38_fu_1084_p2)
);

covariance_mul_32s_32s_61_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_32s_32s_61_1_1_U11(
    .din0(empty_41_fu_1278_p0),
    .din1(empty_41_fu_1278_p1),
    .dout(empty_41_fu_1278_p2)
);

covariance_mul_32s_32s_61_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_32s_32s_61_1_1_U12(
    .din0(empty_44_fu_1320_p0),
    .din1(empty_44_fu_1320_p1),
    .dout(empty_44_fu_1320_p2)
);

covariance_mul_32s_32s_61_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_32s_32s_61_1_1_U13(
    .din0(empty_47_fu_1362_p0),
    .din1(empty_47_fu_1362_p1),
    .dout(empty_47_fu_1362_p2)
);

covariance_mul_32s_32s_61_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_32s_32s_61_1_1_U14(
    .din0(empty_50_fu_1404_p0),
    .din1(empty_50_fu_1404_p1),
    .dout(empty_50_fu_1404_p2)
);

covariance_mul_32s_32s_61_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_32s_32s_61_1_1_U15(
    .din0(empty_53_fu_1446_p0),
    .din1(empty_53_fu_1446_p1),
    .dout(empty_53_fu_1446_p2)
);

covariance_mul_32s_32s_61_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_32s_32s_61_1_1_U16(
    .din0(empty_56_fu_1488_p0),
    .din1(empty_56_fu_1488_p1),
    .dout(empty_56_fu_1488_p2)
);

covariance_mul_32s_32s_61_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_32s_32s_61_1_1_U17(
    .din0(empty_59_fu_1530_p0),
    .din1(empty_59_fu_1530_p1),
    .dout(empty_59_fu_1530_p2)
);

covariance_mul_32s_32s_61_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_32s_32s_61_1_1_U18(
    .din0(empty_62_fu_1572_p0),
    .din1(empty_62_fu_1572_p1),
    .dout(empty_62_fu_1572_p2)
);

covariance_mul_32s_32s_61_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_32s_32s_61_1_1_U19(
    .din0(empty_65_fu_1614_p0),
    .din1(empty_65_fu_1614_p1),
    .dout(empty_65_fu_1614_p2)
);

covariance_mul_32s_32s_61_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_32s_32s_61_1_1_U20(
    .din0(empty_68_fu_1656_p0),
    .din1(empty_68_fu_1656_p1),
    .dout(empty_68_fu_1656_p2)
);

covariance_mul_32s_32s_61_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_32s_32s_61_1_1_U21(
    .din0(empty_71_fu_1698_p0),
    .din1(empty_71_fu_1698_p1),
    .dout(empty_71_fu_1698_p2)
);

covariance_mul_32s_32s_61_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_32s_32s_61_1_1_U22(
    .din0(empty_74_fu_1740_p0),
    .din1(empty_74_fu_1740_p1),
    .dout(empty_74_fu_1740_p2)
);

covariance_mul_36ns_38ns_69_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 38 ),
    .dout_WIDTH( 69 ))
mul_36ns_38ns_69_1_1_U23(
    .din0(mul_fu_1784_p0),
    .din1(mul_fu_1784_p1),
    .dout(mul_fu_1784_p2)
);

covariance_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvars_iv19_fu_136 <= indvars_iv17_cast111_cast_fu_404_p1;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond243_reg_1863 == 1'd0))) begin
            indvars_iv19_fu_136 <= indvars_iv_next20_fu_1804_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage27) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage27_11001))) begin
        div71_u0_32fixp_cast_reg_2160[8 : 0] <= div71_u0_32fixp_cast_fu_1800_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond243_fu_416_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        empty_23_reg_1867 <= empty_23_fu_422_p1;
        gmem_addr_5_reg_1893 <= p_cast92_cast_fu_492_p1;
        gmem_addr_reg_1886 <= p_cast57_cast_fu_454_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        exitcond243_reg_1863 <= exitcond243_fu_416_p2;
        indvars_iv19_load_reg_1857 <= indvars_iv19_fu_136;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage18) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001))) begin
        gmem_addr_10_read_reg_2080 <= m_axi_gmem_RDATA;
        tmp_22_reg_2075 <= {{add63_u7_25fixp_7_fu_1420_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        gmem_addr_10_reg_1957 <= p_cast74_cast_fu_826_p1;
        gmem_addr_1_read_reg_1952 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage19) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001))) begin
        gmem_addr_11_read_reg_2090 <= m_axi_gmem_RDATA;
        tmp_25_reg_2085 <= {{add63_u7_25fixp_8_fu_1462_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        gmem_addr_11_reg_1973 <= p_cast76_cast_fu_904_p1;
        gmem_addr_2_read_reg_1968 <= m_axi_gmem_RDATA;
        tmp_1_reg_1963 <= {{add63_u7_25fixp_0_fu_860_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage20) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001))) begin
        gmem_addr_12_read_reg_2100 <= m_axi_gmem_RDATA;
        tmp_28_reg_2095 <= {{add63_u7_25fixp_9_fu_1504_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        gmem_addr_12_reg_1989 <= p_cast78_cast_fu_984_p1;
        gmem_addr_3_read_reg_1984 <= m_axi_gmem_RDATA;
        tmp_4_reg_1979 <= {{add63_u7_25fixp_1_fu_940_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage21) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001))) begin
        gmem_addr_13_read_reg_2110 <= m_axi_gmem_RDATA;
        tmp_31_reg_2105 <= {{add63_u7_25fixp_10_fu_1546_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        gmem_addr_13_reg_2005 <= p_cast80_cast_fu_1064_p1;
        gmem_addr_4_read_reg_2000 <= m_axi_gmem_RDATA;
        tmp_7_reg_1995 <= {{add63_u7_25fixp_2_fu_1020_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage22) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001))) begin
        gmem_addr_14_read_reg_2120 <= m_axi_gmem_RDATA;
        tmp_34_reg_2115 <= {{add63_u7_25fixp_11_fu_1588_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        gmem_addr_14_reg_2021 <= p_cast82_cast_fu_1144_p1;
        gmem_addr_15_reg_2027 <= p_cast84_cast_fu_1182_p1;
        gmem_addr_16_reg_2033 <= p_cast86_cast_fu_1220_p1;
        gmem_addr_17_reg_2039 <= p_cast88_cast_fu_1258_p1;
        gmem_addr_6_read_reg_2016 <= m_axi_gmem_RDATA;
        tmp_10_reg_2011 <= {{add63_u7_25fixp_3_fu_1100_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage23) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        gmem_addr_15_read_reg_2130 <= m_axi_gmem_RDATA;
        tmp_37_reg_2125 <= {{add63_u7_25fixp_12_fu_1630_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage24) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001))) begin
        gmem_addr_16_read_reg_2140 <= m_axi_gmem_RDATA;
        tmp_40_reg_2135 <= {{add63_u7_25fixp_13_fu_1672_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage25) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        gmem_addr_17_read_reg_2150 <= m_axi_gmem_RDATA;
        tmp_43_reg_2145 <= {{add63_u7_25fixp_14_fu_1714_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        gmem_addr_1_reg_1899 <= p_cast58_cast_fu_522_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        gmem_addr_2_reg_1905 <= p_cast60_cast_fu_560_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        gmem_addr_3_reg_1911 <= p_cast62_cast_fu_598_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        gmem_addr_4_reg_1917 <= p_cast64_cast_fu_636_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        gmem_addr_6_reg_1923 <= p_cast66_cast_fu_674_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        gmem_addr_7_read_reg_2050 <= m_axi_gmem_RDATA;
        tmp_13_reg_2045 <= {{add63_u7_25fixp_4_fu_1294_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        gmem_addr_7_reg_1929 <= p_cast68_cast_fu_712_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001))) begin
        gmem_addr_8_read_reg_2060 <= m_axi_gmem_RDATA;
        tmp_16_reg_2055 <= {{add63_u7_25fixp_5_fu_1336_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        gmem_addr_8_reg_1935 <= p_cast70_cast_fu_750_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage17) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        gmem_addr_9_read_reg_2070 <= m_axi_gmem_RDATA;
        tmp_19_reg_2065 <= {{add63_u7_25fixp_6_fu_1378_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        gmem_addr_9_reg_1946 <= p_cast72_cast_fu_788_p1;
        gmem_addr_read_reg_1941 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_cast113_cast_reg_1852[7 : 0] <= p_cast113_cast_fu_400_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage26) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage26_11001))) begin
        p_cast17_reg_2155 <= {{mul_fu_1784_p2[68:60]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond243_fu_416_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage18)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage17)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage16)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage15)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage14)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage13)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage12)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage11)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage9)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage2)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage27)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage26)))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage25)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage24)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage23)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage22)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage21)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage20)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage19)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage18)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage17)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage16)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage15)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage14)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage13)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage12)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage11)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage9)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage28)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage27)))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_17_reg_2039;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_16_reg_2033;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_15_reg_2027;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_14_reg_2021;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_13_reg_2005;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_12_reg_1989;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_11_reg_1973;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_10_reg_1957;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_9_reg_1946;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_8_reg_1935;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_7_reg_1929;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_6_reg_1923;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_4_reg_1917;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_3_reg_1911;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_2_reg_1905;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_1_reg_1899;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_reg_1886;
        end else begin
            m_axi_gmem_ARADDR = 'bx;
        end
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001))) begin
            m_axi_gmem_AWADDR = gmem_addr_5_reg_1893;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001))) begin
            m_axi_gmem_AWADDR = gmem_addr_reg_1886;
        end else begin
            m_axi_gmem_AWADDR = 'bx;
        end
    end else begin
        m_axi_gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage27_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage26_11001)))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_01001))) begin
            m_axi_gmem_WDATA = div71_u0_32fixp_cast_reg_2160;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_01001))) begin
            m_axi_gmem_WDATA = div71_u0_32fixp_cast_fu_1800_p1;
        end else begin
            m_axi_gmem_WDATA = 'bx;
        end
    end else begin
        m_axi_gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage28_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (exitcond243_reg_1863 == 1'd0) & (1'b0 == ap_block_pp0_stage27_11001)))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add63_u7_25fixp_0_fu_860_p2 = (mul58_u7_25fixp_fu_845_p4 + empty_29_fu_855_p2);

assign add63_u7_25fixp_10_fu_1546_p2 = (mul58_u7_25fixp_s_fu_1536_p4 + tmp_29_fu_1520_p3);

assign add63_u7_25fixp_11_fu_1588_p2 = (mul58_u7_25fixp_10_fu_1578_p4 + tmp_32_fu_1562_p3);

assign add63_u7_25fixp_12_fu_1630_p2 = (mul58_u7_25fixp_11_fu_1620_p4 + tmp_35_fu_1604_p3);

assign add63_u7_25fixp_13_fu_1672_p2 = (mul58_u7_25fixp_12_fu_1662_p4 + tmp_38_fu_1646_p3);

assign add63_u7_25fixp_14_fu_1714_p2 = (mul58_u7_25fixp_13_fu_1704_p4 + tmp_41_fu_1688_p3);

assign add63_u7_25fixp_15_fu_1756_p2 = (mul58_u7_25fixp_14_fu_1746_p4 + tmp_44_fu_1730_p3);

assign add63_u7_25fixp_1_fu_940_p2 = (mul58_u7_25fixp_1_fu_930_p4 + tmp_2_fu_914_p3);

assign add63_u7_25fixp_2_fu_1020_p2 = (mul58_u7_25fixp_2_fu_1010_p4 + tmp_5_fu_994_p3);

assign add63_u7_25fixp_3_fu_1100_p2 = (mul58_u7_25fixp_3_fu_1090_p4 + tmp_8_fu_1074_p3);

assign add63_u7_25fixp_4_fu_1294_p2 = (mul58_u7_25fixp_4_fu_1284_p4 + tmp_11_fu_1268_p3);

assign add63_u7_25fixp_5_fu_1336_p2 = (mul58_u7_25fixp_5_fu_1326_p4 + tmp_14_fu_1310_p3);

assign add63_u7_25fixp_6_fu_1378_p2 = (mul58_u7_25fixp_6_fu_1368_p4 + tmp_17_fu_1352_p3);

assign add63_u7_25fixp_7_fu_1420_p2 = (mul58_u7_25fixp_7_fu_1410_p4 + tmp_20_fu_1394_p3);

assign add63_u7_25fixp_8_fu_1462_p2 = (mul58_u7_25fixp_8_fu_1452_p4 + tmp_23_fu_1436_p3);

assign add63_u7_25fixp_9_fu_1504_p2 = (mul58_u7_25fixp_9_fu_1494_p4 + tmp_26_fu_1478_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_BVALID == 1'b0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state19_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state19_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_BVALID == 1'b0));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage25_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage25_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage26_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state27_io));
end

always @ (*) begin
    ap_block_pp0_stage26_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state27_io));
end

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage27_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state28_io));
end

always @ (*) begin
    ap_block_pp0_stage27_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state28_io));
end

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage28_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state29_io));
end

always @ (*) begin
    ap_block_pp0_stage28_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state29_io));
end

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state9_io));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state9_io));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))));
end

always @ (*) begin
    ap_block_state10_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state11_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state12_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state13_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state14_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state15_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state16_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state17_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

always @ (*) begin
    ap_block_state17_pp0_stage16_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state18_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

always @ (*) begin
    ap_block_state18_pp0_stage17_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state19_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

always @ (*) begin
    ap_block_state19_pp0_stage18_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage19_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp0_stage20_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage21_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp0_stage22_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp0_stage23_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp0_stage24_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state26_pp0_stage25_iter0 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state27_io = ((m_axi_gmem_AWREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state28_io = (((m_axi_gmem_WREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0)) | ((m_axi_gmem_AWREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0)));
end

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_io = ((m_axi_gmem_WREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33_pp0_stage0_iter1 = ((exitcond243_reg_1863 == 1'd0) & (m_axi_gmem_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state34_pp0_stage1_iter1 = (m_axi_gmem_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state3_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond243_reg_1863 == 1'd0));
end

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign div71_u0_32fixp_cast_fu_1800_p1 = p_cast17_reg_2155;

assign empty_23_fu_422_p1 = indvars_iv19_fu_136[61:0];

assign empty_24_fu_426_p2 = (empty_23_fu_422_p1 + p_cast113_cast_reg_1852);

assign empty_25_fu_439_p2 = (tmp_s_fu_431_p3 + cov);

assign empty_26_fu_502_p2 = indvars_iv19_load_reg_1857 << 64'd2;

assign empty_27_fu_507_p2 = (empty_26_fu_502_p2 + data);

assign empty_28_fu_839_p0 = gmem_load_20_cast_fu_836_p1;

assign empty_28_fu_839_p1 = gmem_load_20_cast_fu_836_p1;

assign empty_29_fu_855_p2 = gmem_addr_read_reg_1941 << 32'd16;

assign empty_30_fu_532_p2 = (empty_23_reg_1867 + 62'd16);

assign empty_31_fu_545_p2 = (tmp_3_fu_537_p3 + data);

assign empty_32_fu_924_p0 = gmem_load_21_cast_fu_921_p1;

assign empty_32_fu_924_p1 = gmem_load_21_cast_fu_921_p1;

assign empty_33_fu_570_p2 = (empty_23_reg_1867 + 62'd32);

assign empty_34_fu_583_p2 = (tmp_6_fu_575_p3 + data);

assign empty_35_fu_1004_p0 = gmem_load_22_cast_fu_1001_p1;

assign empty_35_fu_1004_p1 = gmem_load_22_cast_fu_1001_p1;

assign empty_36_fu_608_p2 = (empty_23_reg_1867 + 62'd48);

assign empty_37_fu_621_p2 = (tmp_9_fu_613_p3 + data);

assign empty_38_fu_1084_p0 = gmem_load_23_cast_fu_1081_p1;

assign empty_38_fu_1084_p1 = gmem_load_23_cast_fu_1081_p1;

assign empty_39_fu_646_p2 = (empty_23_reg_1867 + 62'd64);

assign empty_40_fu_659_p2 = (tmp_12_fu_651_p3 + data);

assign empty_41_fu_1278_p0 = gmem_load_24_cast_fu_1275_p1;

assign empty_41_fu_1278_p1 = gmem_load_24_cast_fu_1275_p1;

assign empty_42_fu_684_p2 = (empty_23_reg_1867 + 62'd80);

assign empty_43_fu_697_p2 = (tmp_15_fu_689_p3 + data);

assign empty_44_fu_1320_p0 = gmem_load_25_cast_fu_1317_p1;

assign empty_44_fu_1320_p1 = gmem_load_25_cast_fu_1317_p1;

assign empty_45_fu_722_p2 = (empty_23_reg_1867 + 62'd96);

assign empty_46_fu_735_p2 = (tmp_18_fu_727_p3 + data);

assign empty_47_fu_1362_p0 = gmem_load_26_cast_fu_1359_p1;

assign empty_47_fu_1362_p1 = gmem_load_26_cast_fu_1359_p1;

assign empty_48_fu_760_p2 = (empty_23_reg_1867 + 62'd112);

assign empty_49_fu_773_p2 = (tmp_21_fu_765_p3 + data);

assign empty_50_fu_1404_p0 = gmem_load_27_cast_fu_1401_p1;

assign empty_50_fu_1404_p1 = gmem_load_27_cast_fu_1401_p1;

assign empty_51_fu_798_p2 = (empty_23_reg_1867 + 62'd128);

assign empty_52_fu_811_p2 = (tmp_24_fu_803_p3 + data);

assign empty_53_fu_1446_p0 = gmem_load_28_cast_fu_1443_p1;

assign empty_53_fu_1446_p1 = gmem_load_28_cast_fu_1443_p1;

assign empty_54_fu_876_p2 = (empty_23_reg_1867 + 62'd144);

assign empty_55_fu_889_p2 = (tmp_27_fu_881_p3 + data);

assign empty_56_fu_1488_p0 = gmem_load_29_cast_fu_1485_p1;

assign empty_56_fu_1488_p1 = gmem_load_29_cast_fu_1485_p1;

assign empty_57_fu_956_p2 = (empty_23_reg_1867 + 62'd160);

assign empty_58_fu_969_p2 = (tmp_30_fu_961_p3 + data);

assign empty_59_fu_1530_p0 = gmem_load_30_cast_fu_1527_p1;

assign empty_59_fu_1530_p1 = gmem_load_30_cast_fu_1527_p1;

assign empty_60_fu_1036_p2 = (empty_23_reg_1867 + 62'd176);

assign empty_61_fu_1049_p2 = (tmp_33_fu_1041_p3 + data);

assign empty_62_fu_1572_p0 = gmem_load_31_cast_fu_1569_p1;

assign empty_62_fu_1572_p1 = gmem_load_31_cast_fu_1569_p1;

assign empty_63_fu_1116_p2 = (empty_23_reg_1867 + 62'd192);

assign empty_64_fu_1129_p2 = (tmp_36_fu_1121_p3 + data);

assign empty_65_fu_1614_p0 = gmem_load_32_cast_fu_1611_p1;

assign empty_65_fu_1614_p1 = gmem_load_32_cast_fu_1611_p1;

assign empty_66_fu_1154_p2 = (empty_23_reg_1867 + 62'd208);

assign empty_67_fu_1167_p2 = (tmp_39_fu_1159_p3 + data);

assign empty_68_fu_1656_p0 = gmem_load_33_cast_fu_1653_p1;

assign empty_68_fu_1656_p1 = gmem_load_33_cast_fu_1653_p1;

assign empty_69_fu_1192_p2 = (empty_23_reg_1867 + 62'd224);

assign empty_70_fu_1205_p2 = (tmp_42_fu_1197_p3 + data);

assign empty_71_fu_1698_p0 = gmem_load_34_cast_fu_1695_p1;

assign empty_71_fu_1698_p1 = gmem_load_34_cast_fu_1695_p1;

assign empty_72_fu_1230_p2 = (empty_23_reg_1867 + 62'd240);

assign empty_73_fu_1243_p2 = (tmp_45_fu_1235_p3 + data);

assign empty_74_fu_1740_p0 = gmem_load_35_cast_fu_1737_p1;

assign empty_74_fu_1740_p1 = gmem_load_35_cast_fu_1737_p1;

assign empty_75_fu_464_p1 = indvars_iv19_fu_136[57:0];

assign empty_76_fu_477_p2 = (tmp_48_fu_468_p4 + cov);

assign exitcond243_fu_416_p2 = ((indvars_iv19_fu_136 == 64'd16) ? 1'b1 : 1'b0);

assign gmem_load_20_cast_fu_836_p1 = gmem_addr_1_read_reg_1952;

assign gmem_load_21_cast_fu_921_p1 = gmem_addr_2_read_reg_1968;

assign gmem_load_22_cast_fu_1001_p1 = gmem_addr_3_read_reg_1984;

assign gmem_load_23_cast_fu_1081_p1 = gmem_addr_4_read_reg_2000;

assign gmem_load_24_cast_fu_1275_p1 = gmem_addr_6_read_reg_2016;

assign gmem_load_25_cast_fu_1317_p1 = gmem_addr_7_read_reg_2050;

assign gmem_load_26_cast_fu_1359_p1 = gmem_addr_8_read_reg_2060;

assign gmem_load_27_cast_fu_1401_p1 = gmem_addr_9_read_reg_2070;

assign gmem_load_28_cast_fu_1443_p1 = gmem_addr_10_read_reg_2080;

assign gmem_load_29_cast_fu_1485_p1 = gmem_addr_11_read_reg_2090;

assign gmem_load_30_cast_fu_1527_p1 = gmem_addr_12_read_reg_2100;

assign gmem_load_31_cast_fu_1569_p1 = gmem_addr_13_read_reg_2110;

assign gmem_load_32_cast_fu_1611_p1 = gmem_addr_14_read_reg_2120;

assign gmem_load_33_cast_fu_1653_p1 = gmem_addr_15_read_reg_2130;

assign gmem_load_34_cast_fu_1695_p1 = gmem_addr_16_read_reg_2140;

assign gmem_load_35_cast_fu_1737_p1 = $signed(gmem_addr_17_read_reg_2150);

assign indvars_iv17_cast111_cast_fu_404_p1 = indvars_iv17_cast111;

assign indvars_iv_next20_fu_1804_p2 = (indvars_iv19_load_reg_1857 + 64'd1);

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd15;

assign m_axi_gmem_WUSER = 1'd0;

assign mul58_u7_25fixp_10_fu_1578_p4 = {{empty_62_fu_1572_p2[60:29]}};

assign mul58_u7_25fixp_11_fu_1620_p4 = {{empty_65_fu_1614_p2[60:29]}};

assign mul58_u7_25fixp_12_fu_1662_p4 = {{empty_68_fu_1656_p2[60:29]}};

assign mul58_u7_25fixp_13_fu_1704_p4 = {{empty_71_fu_1698_p2[60:29]}};

assign mul58_u7_25fixp_14_fu_1746_p4 = {{empty_74_fu_1740_p2[60:29]}};

assign mul58_u7_25fixp_1_fu_930_p4 = {{empty_32_fu_924_p2[60:29]}};

assign mul58_u7_25fixp_2_fu_1010_p4 = {{empty_35_fu_1004_p2[60:29]}};

assign mul58_u7_25fixp_3_fu_1090_p4 = {{empty_38_fu_1084_p2[60:29]}};

assign mul58_u7_25fixp_4_fu_1284_p4 = {{empty_41_fu_1278_p2[60:29]}};

assign mul58_u7_25fixp_5_fu_1326_p4 = {{empty_44_fu_1320_p2[60:29]}};

assign mul58_u7_25fixp_6_fu_1368_p4 = {{empty_47_fu_1362_p2[60:29]}};

assign mul58_u7_25fixp_7_fu_1410_p4 = {{empty_50_fu_1404_p2[60:29]}};

assign mul58_u7_25fixp_8_fu_1452_p4 = {{empty_53_fu_1446_p2[60:29]}};

assign mul58_u7_25fixp_9_fu_1494_p4 = {{empty_56_fu_1488_p2[60:29]}};

assign mul58_u7_25fixp_fu_845_p4 = {{empty_28_fu_839_p2[60:29]}};

assign mul58_u7_25fixp_s_fu_1536_p4 = {{empty_59_fu_1530_p2[60:29]}};

assign mul_fu_1784_p0 = mul_fu_1784_p00;

assign mul_fu_1784_p00 = tmp_47_fu_1772_p3;

assign mul_fu_1784_p1 = 69'd73300775186;

assign p_cast10_fu_894_p4 = {{empty_55_fu_889_p2[63:2]}};

assign p_cast113_cast_fu_400_p1 = p_cast113;

assign p_cast11_fu_974_p4 = {{empty_58_fu_969_p2[63:2]}};

assign p_cast12_fu_1054_p4 = {{empty_61_fu_1049_p2[63:2]}};

assign p_cast13_fu_1134_p4 = {{empty_64_fu_1129_p2[63:2]}};

assign p_cast14_fu_1172_p4 = {{empty_67_fu_1167_p2[63:2]}};

assign p_cast15_fu_1210_p4 = {{empty_70_fu_1205_p2[63:2]}};

assign p_cast16_fu_1248_p4 = {{empty_73_fu_1243_p2[63:2]}};

assign p_cast18_fu_482_p4 = {{empty_76_fu_477_p2[63:2]}};

assign p_cast1_fu_512_p4 = {{empty_27_fu_507_p2[63:2]}};

assign p_cast2_fu_550_p4 = {{empty_31_fu_545_p2[63:2]}};

assign p_cast3_fu_588_p4 = {{empty_34_fu_583_p2[63:2]}};

assign p_cast4_fu_626_p4 = {{empty_37_fu_621_p2[63:2]}};

assign p_cast57_cast_fu_454_p1 = $signed(p_cast_fu_444_p4);

assign p_cast58_cast_fu_522_p1 = $signed(p_cast1_fu_512_p4);

assign p_cast5_fu_664_p4 = {{empty_40_fu_659_p2[63:2]}};

assign p_cast60_cast_fu_560_p1 = $signed(p_cast2_fu_550_p4);

assign p_cast62_cast_fu_598_p1 = $signed(p_cast3_fu_588_p4);

assign p_cast64_cast_fu_636_p1 = $signed(p_cast4_fu_626_p4);

assign p_cast66_cast_fu_674_p1 = $signed(p_cast5_fu_664_p4);

assign p_cast68_cast_fu_712_p1 = $signed(p_cast6_fu_702_p4);

assign p_cast6_fu_702_p4 = {{empty_43_fu_697_p2[63:2]}};

assign p_cast70_cast_fu_750_p1 = $signed(p_cast7_fu_740_p4);

assign p_cast72_cast_fu_788_p1 = $signed(p_cast8_fu_778_p4);

assign p_cast74_cast_fu_826_p1 = $signed(p_cast9_fu_816_p4);

assign p_cast76_cast_fu_904_p1 = $signed(p_cast10_fu_894_p4);

assign p_cast78_cast_fu_984_p1 = $signed(p_cast11_fu_974_p4);

assign p_cast7_fu_740_p4 = {{empty_46_fu_735_p2[63:2]}};

assign p_cast80_cast_fu_1064_p1 = $signed(p_cast12_fu_1054_p4);

assign p_cast82_cast_fu_1144_p1 = $signed(p_cast13_fu_1134_p4);

assign p_cast84_cast_fu_1182_p1 = $signed(p_cast14_fu_1172_p4);

assign p_cast86_cast_fu_1220_p1 = $signed(p_cast15_fu_1210_p4);

assign p_cast88_cast_fu_1258_p1 = $signed(p_cast16_fu_1248_p4);

assign p_cast8_fu_778_p4 = {{empty_49_fu_773_p2[63:2]}};

assign p_cast92_cast_fu_492_p1 = $signed(p_cast18_fu_482_p4);

assign p_cast9_fu_816_p4 = {{empty_52_fu_811_p2[63:2]}};

assign p_cast_fu_444_p4 = {{empty_25_fu_439_p2[63:2]}};

assign tmp_11_fu_1268_p3 = {{tmp_10_reg_2011}, {16'd0}};

assign tmp_12_fu_651_p3 = {{empty_39_fu_646_p2}, {2'd0}};

assign tmp_14_fu_1310_p3 = {{tmp_13_reg_2045}, {16'd0}};

assign tmp_15_fu_689_p3 = {{empty_42_fu_684_p2}, {2'd0}};

assign tmp_17_fu_1352_p3 = {{tmp_16_reg_2055}, {16'd0}};

assign tmp_18_fu_727_p3 = {{empty_45_fu_722_p2}, {2'd0}};

assign tmp_20_fu_1394_p3 = {{tmp_19_reg_2065}, {16'd0}};

assign tmp_21_fu_765_p3 = {{empty_48_fu_760_p2}, {2'd0}};

assign tmp_23_fu_1436_p3 = {{tmp_22_reg_2075}, {16'd0}};

assign tmp_24_fu_803_p3 = {{empty_51_fu_798_p2}, {2'd0}};

assign tmp_26_fu_1478_p3 = {{tmp_25_reg_2085}, {16'd0}};

assign tmp_27_fu_881_p3 = {{empty_54_fu_876_p2}, {2'd0}};

assign tmp_29_fu_1520_p3 = {{tmp_28_reg_2095}, {16'd0}};

assign tmp_2_fu_914_p3 = {{tmp_1_reg_1963}, {16'd0}};

assign tmp_30_fu_961_p3 = {{empty_57_fu_956_p2}, {2'd0}};

assign tmp_32_fu_1562_p3 = {{tmp_31_reg_2105}, {16'd0}};

assign tmp_33_fu_1041_p3 = {{empty_60_fu_1036_p2}, {2'd0}};

assign tmp_35_fu_1604_p3 = {{tmp_34_reg_2115}, {16'd0}};

assign tmp_36_fu_1121_p3 = {{empty_63_fu_1116_p2}, {2'd0}};

assign tmp_38_fu_1646_p3 = {{tmp_37_reg_2125}, {16'd0}};

assign tmp_39_fu_1159_p3 = {{empty_66_fu_1154_p2}, {2'd0}};

assign tmp_3_fu_537_p3 = {{empty_30_fu_532_p2}, {2'd0}};

assign tmp_41_fu_1688_p3 = {{tmp_40_reg_2135}, {16'd0}};

assign tmp_42_fu_1197_p3 = {{empty_69_fu_1192_p2}, {2'd0}};

assign tmp_44_fu_1730_p3 = {{tmp_43_reg_2145}, {16'd0}};

assign tmp_45_fu_1235_p3 = {{empty_72_fu_1230_p2}, {2'd0}};

assign tmp_46_fu_1762_p4 = {{add63_u7_25fixp_15_fu_1756_p2[31:16]}};

assign tmp_47_fu_1772_p3 = {{tmp_46_fu_1762_p4}, {20'd0}};

assign tmp_48_fu_468_p4 = {{{empty_75_fu_464_p1}, {indvars_iv17_cast}}, {2'd0}};

assign tmp_5_fu_994_p3 = {{tmp_4_reg_1979}, {16'd0}};

assign tmp_6_fu_575_p3 = {{empty_33_fu_570_p2}, {2'd0}};

assign tmp_8_fu_1074_p3 = {{tmp_7_reg_1995}, {16'd0}};

assign tmp_9_fu_613_p3 = {{empty_36_fu_608_p2}, {2'd0}};

assign tmp_s_fu_431_p3 = {{empty_24_fu_426_p2}, {2'd0}};

always @ (posedge ap_clk) begin
    p_cast113_cast_reg_1852[61:8] <= 54'b000000000000000000000000000000000000000000000000000000;
    div71_u0_32fixp_cast_reg_2160[31:9] <= 23'b00000000000000000000000;
end

endmodule //covariance_covariance_Pipeline_VITIS_LOOP_60_6

// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mm2_mm2_Pipeline_VITIS_LOOP_65_4_VITIS_LOOP_67_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        tmp_address0,
        tmp_ce0,
        tmp_q0,
        tmp_address1,
        tmp_ce1,
        tmp_q1,
        D,
        p_cast86,
        C
);

parameter    ap_ST_fsm_pp0_stage0 = 31'd1;
parameter    ap_ST_fsm_pp0_stage1 = 31'd2;
parameter    ap_ST_fsm_pp0_stage2 = 31'd4;
parameter    ap_ST_fsm_pp0_stage3 = 31'd8;
parameter    ap_ST_fsm_pp0_stage4 = 31'd16;
parameter    ap_ST_fsm_pp0_stage5 = 31'd32;
parameter    ap_ST_fsm_pp0_stage6 = 31'd64;
parameter    ap_ST_fsm_pp0_stage7 = 31'd128;
parameter    ap_ST_fsm_pp0_stage8 = 31'd256;
parameter    ap_ST_fsm_pp0_stage9 = 31'd512;
parameter    ap_ST_fsm_pp0_stage10 = 31'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 31'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 31'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 31'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 31'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 31'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 31'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 31'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 31'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 31'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 31'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 31'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 31'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 31'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 31'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 31'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 31'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 31'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 31'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 31'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 31'd1073741824;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
output  [7:0] tmp_address0;
output   tmp_ce0;
input  [31:0] tmp_q0;
output  [7:0] tmp_address1;
output   tmp_ce1;
input  [31:0] tmp_q1;
input  [63:0] D;
input  [31:0] p_cast86;
input  [63:0] C;

reg ap_idle;
reg m_axi_gmem_AWVALID;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;
reg[7:0] tmp_address0;
reg tmp_ce0;
reg[7:0] tmp_address1;
reg tmp_ce1;

(* fsm_encoding = "none" *) reg   [30:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state32_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] exitcond_flatten332_fu_580_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_state31_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_subdone;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond_flatten332_reg_2225;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
reg    gmem_blk_n_B;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
reg    ap_block_pp0_stage0_11001;
wire   [44:0] p_cast86_cast_fu_543_p1;
reg   [44:0] p_cast86_cast_reg_2215;
reg   [4:0] indvars_iv15_load_reg_2220;
wire   [0:0] exitcond142434_fu_595_p2;
reg   [0:0] exitcond142434_reg_2229;
wire   [4:0] indvars_iv11_mid2_fu_601_p3;
reg   [4:0] indvars_iv11_mid2_reg_2234;
wire   [4:0] indvars_iv_next16_dup414_fu_609_p2;
reg   [4:0] indvars_iv_next16_dup414_reg_2239;
wire   [7:0] empty_24_fu_635_p3;
reg   [7:0] empty_24_reg_2244;
wire   [3:0] empty_56_fu_659_p1;
reg   [3:0] empty_56_reg_2272;
reg   [63:0] gmem_addr_reg_2285;
reg   [31:0] empty_25_reg_2292;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state2_io;
reg    ap_block_pp0_stage1_11001;
reg   [31:0] empty_27_reg_2297;
reg   [63:0] gmem_addr_1_reg_2312;
reg   [31:0] empty_29_reg_2318;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage2_11001;
reg   [31:0] empty_31_reg_2323;
wire  signed [6:0] p_cast207_cast_fu_784_p4;
reg  signed [6:0] p_cast207_cast_reg_2338;
reg   [63:0] gmem_addr_2_reg_2345;
reg   [31:0] empty_33_reg_2351;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage3_11001;
reg   [31:0] empty_35_reg_2356;
wire  signed [7:0] p_cast208_cast_fu_842_p4;
reg  signed [7:0] p_cast208_cast_reg_2371;
reg   [63:0] gmem_addr_3_reg_2377;
reg   [31:0] empty_37_reg_2383;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage4_11001;
reg   [31:0] empty_39_reg_2388;
reg   [63:0] gmem_addr_4_reg_2403;
reg   [31:0] empty_41_reg_2409;
wire    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_state6_io;
reg    ap_block_pp0_stage5_11001;
reg   [31:0] empty_43_reg_2414;
wire  signed [8:0] p_cast210_cast_fu_952_p4;
reg  signed [8:0] p_cast210_cast_reg_2429;
reg   [63:0] gmem_addr_5_reg_2434;
reg   [31:0] empty_45_reg_2440;
wire    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_state7_io;
reg    ap_block_pp0_stage6_11001;
reg   [31:0] empty_47_reg_2445;
wire  signed [8:0] p_cast211_cast_fu_1010_p4;
reg  signed [8:0] p_cast211_cast_reg_2460;
reg   [63:0] gmem_addr_6_reg_2465;
reg   [31:0] empty_49_reg_2471;
wire    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_state8_io;
reg    ap_block_pp0_stage7_11001;
reg   [31:0] empty_51_reg_2476;
reg   [63:0] gmem_addr_7_reg_2491;
reg   [31:0] empty_53_reg_2497;
reg    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_state9_io;
reg    ap_block_pp0_stage8_11001;
reg   [31:0] empty_55_reg_2502;
reg  signed [31:0] gmem_addr_read_reg_2507;
reg   [63:0] gmem_addr_8_reg_2512;
reg  signed [31:0] gmem_addr_1_read_reg_2518;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_state10_io;
reg    ap_block_pp0_stage9_11001;
reg   [15:0] tmp_3_reg_2523;
reg   [63:0] gmem_addr_9_reg_2528;
reg   [15:0] tmp_5_reg_2534;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_state11_io;
reg    ap_block_pp0_stage10_11001;
reg  signed [31:0] gmem_addr_2_read_reg_2539;
reg   [63:0] gmem_addr_10_reg_2544;
reg   [15:0] tmp_7_reg_2550;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_state12_io;
reg    ap_block_pp0_stage11_11001;
reg  signed [31:0] gmem_addr_3_read_reg_2555;
reg   [63:0] gmem_addr_11_reg_2560;
reg   [15:0] tmp_9_reg_2566;
reg    ap_block_state13_pp0_stage12_iter0;
reg    ap_block_state13_io;
reg    ap_block_pp0_stage12_11001;
reg  signed [31:0] gmem_addr_4_read_reg_2571;
reg   [63:0] gmem_addr_12_reg_2576;
reg   [15:0] tmp_11_reg_2582;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_block_state14_io;
reg    ap_block_pp0_stage13_11001;
reg  signed [31:0] gmem_addr_5_read_reg_2587;
reg   [63:0] gmem_addr_13_reg_2592;
reg   [15:0] tmp_13_reg_2598;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_state15_io;
reg    ap_block_pp0_stage14_11001;
reg  signed [31:0] gmem_addr_6_read_reg_2603;
reg   [63:0] gmem_addr_14_reg_2608;
reg   [63:0] gmem_addr_15_reg_2614;
reg   [63:0] gmem_addr_16_reg_2620;
reg   [15:0] tmp_15_reg_2626;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_state16_io;
reg    ap_block_pp0_stage15_11001;
reg  signed [31:0] gmem_addr_7_read_reg_2631;
reg   [15:0] tmp_17_reg_2636;
reg    ap_block_state17_pp0_stage16_iter0;
reg    ap_block_state17_io;
reg    ap_block_pp0_stage16_11001;
reg  signed [31:0] gmem_addr_8_read_reg_2641;
reg   [15:0] tmp_19_reg_2646;
reg    ap_block_state18_pp0_stage17_iter0;
reg    ap_block_state18_io;
reg    ap_block_pp0_stage17_11001;
reg  signed [31:0] gmem_addr_9_read_reg_2651;
reg   [15:0] tmp_21_reg_2656;
reg    ap_block_state19_pp0_stage18_iter0;
reg    ap_block_pp0_stage18_11001;
reg  signed [31:0] gmem_addr_10_read_reg_2661;
reg   [15:0] tmp_23_reg_2666;
reg    ap_block_state20_pp0_stage19_iter0;
reg    ap_block_pp0_stage19_11001;
reg  signed [31:0] gmem_addr_11_read_reg_2671;
reg   [15:0] tmp_25_reg_2676;
reg    ap_block_state21_pp0_stage20_iter0;
reg    ap_block_pp0_stage20_11001;
reg  signed [31:0] gmem_addr_12_read_reg_2681;
reg   [15:0] tmp_27_reg_2686;
reg    ap_block_state22_pp0_stage21_iter0;
reg    ap_block_pp0_stage21_11001;
reg  signed [31:0] gmem_addr_13_read_reg_2691;
reg   [15:0] tmp_29_reg_2696;
reg    ap_block_state23_pp0_stage22_iter0;
reg    ap_block_pp0_stage22_11001;
reg  signed [31:0] gmem_addr_14_read_reg_2701;
reg   [15:0] tmp_31_reg_2706;
reg    ap_block_state24_pp0_stage23_iter0;
reg    ap_block_pp0_stage23_11001;
reg  signed [31:0] gmem_addr_15_read_reg_2711;
reg   [15:0] tmp_33_reg_2716;
reg    ap_block_state25_pp0_stage24_iter0;
reg    ap_block_pp0_stage24_11001;
reg  signed [31:0] gmem_addr_16_read_reg_2721;
reg   [15:0] tmp_35_reg_2726;
wire    ap_block_state26_pp0_stage25_iter0;
reg    ap_block_state26_io;
reg    ap_block_pp0_stage25_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] p_cast90_mid2_v_fu_643_p1;
wire   [63:0] p_cast95_mid2_v_fu_654_p1;
wire   [63:0] p_cast100_mid2_v_fu_713_p1;
wire   [63:0] p_cast104_mid2_v_fu_723_p1;
wire   [63:0] p_cast109_mid2_v_fu_769_p1;
wire   [63:0] p_cast113_mid2_v_fu_779_p1;
wire   [63:0] p_cast117_mid2_v_fu_827_p1;
wire   [63:0] p_cast121_mid2_v_fu_837_p1;
wire   [63:0] p_cast125_mid2_v_fu_885_p1;
wire   [63:0] p_cast129_mid2_v_fu_895_p1;
wire   [63:0] p_cast133_mid2_v_fu_937_p1;
wire   [63:0] p_cast137_mid2_v_fu_947_p1;
wire   [63:0] p_cast141_mid2_v_fu_995_p1;
wire   [63:0] p_cast145_mid2_v_fu_1005_p1;
wire   [63:0] p_cast149_mid2_v_fu_1053_p1;
wire   [63:0] p_cast153_mid2_v_fu_1063_p1;
wire  signed [63:0] p_cast85_cast_fu_693_p1;
wire  signed [63:0] p_cast89_cast_fu_754_p1;
wire  signed [63:0] p_cast94_cast_fu_812_p1;
wire  signed [63:0] p_cast99_cast_fu_870_p1;
wire  signed [63:0] p_cast103_cast_fu_922_p1;
wire  signed [63:0] p_cast108_cast_fu_980_p1;
wire  signed [63:0] p_cast112_cast_fu_1038_p1;
wire  signed [63:0] p_cast116_cast_fu_1090_p1;
wire  signed [63:0] p_cast120_cast_fu_1122_p1;
wire  signed [63:0] p_cast124_cast_fu_1178_p1;
wire  signed [63:0] p_cast128_cast_fu_1261_p1;
wire  signed [63:0] p_cast132_cast_fu_1344_p1;
wire  signed [63:0] p_cast136_cast_fu_1427_p1;
wire  signed [63:0] p_cast140_cast_fu_1504_p1;
wire  signed [63:0] p_cast144_cast_fu_1581_p1;
wire  signed [63:0] p_cast148_cast_fu_1613_p1;
wire  signed [63:0] p_cast152_cast_fu_1645_p1;
wire    ap_block_state27_pp0_stage26_iter0;
reg    ap_block_state27_io;
reg    ap_block_pp0_stage26_11001;
wire    ap_block_pp0_stage26_01001;
reg   [4:0] indvars_iv11_fu_162;
wire   [4:0] indvars_iv_next12_fu_2159_p2;
wire    ap_block_pp0_stage30_11001;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_indvars_iv11_load;
reg   [4:0] indvars_iv15_fu_166;
wire   [4:0] indvars_iv15_mid2_fu_2154_p3;
reg   [4:0] ap_sig_allocacmp_indvars_iv15_load;
reg   [8:0] indvar_flatten330_fu_170;
wire   [8:0] indvar_flatten_next331_fu_586_p2;
reg   [8:0] ap_sig_allocacmp_indvar_flatten330_load;
wire   [3:0] empty_fu_568_p1;
wire   [3:0] empty_23_fu_615_p1;
wire   [7:0] p_mid_fu_627_p3;
wire   [7:0] tmp_s_fu_572_p3;
wire   [7:0] empty_26_fu_648_p2;
wire   [3:0] indvars_iv15_cast_mid2_fu_619_p3;
wire   [9:0] tmp_1_fu_663_p4;
wire   [63:0] p_cast205_fu_673_p1;
wire   [63:0] empty_57_fu_677_p2;
wire   [61:0] p_cast_fu_683_p4;
wire   [7:0] empty_28_fu_708_p2;
wire   [7:0] empty_30_fu_718_p2;
wire   [5:0] tmp_2_fu_728_p3;
wire   [63:0] p_cast206_fu_735_p1;
wire   [63:0] empty_59_fu_739_p2;
wire   [61:0] p_cast1_fu_744_p4;
wire   [7:0] empty_32_fu_764_p2;
wire   [7:0] empty_34_fu_774_p2;
wire   [63:0] p_cast207_cast_cast_fu_793_p1;
wire   [63:0] empty_61_fu_797_p2;
wire   [61:0] p_cast2_fu_802_p4;
wire   [7:0] empty_36_fu_822_p2;
wire   [7:0] empty_38_fu_832_p2;
wire   [63:0] p_cast208_cast_cast_fu_851_p1;
wire   [63:0] empty_63_fu_855_p2;
wire   [61:0] p_cast3_fu_860_p4;
wire   [7:0] empty_40_fu_880_p2;
wire   [7:0] empty_42_fu_890_p2;
wire  signed [7:0] p_cast209_cast_fu_900_p1;
wire   [63:0] p_cast209_cast_cast_fu_903_p1;
wire   [63:0] empty_65_fu_907_p2;
wire   [61:0] p_cast4_fu_912_p4;
wire   [7:0] empty_44_fu_932_p2;
wire   [7:0] empty_46_fu_942_p2;
wire   [63:0] p_cast210_cast_cast_fu_961_p1;
wire   [63:0] empty_67_fu_965_p2;
wire   [61:0] p_cast5_fu_970_p4;
wire   [7:0] empty_48_fu_990_p2;
wire   [7:0] empty_50_fu_1000_p2;
wire   [63:0] p_cast211_cast_cast_fu_1019_p1;
wire   [63:0] empty_69_fu_1023_p2;
wire   [61:0] p_cast6_fu_1028_p4;
wire   [7:0] empty_52_fu_1048_p2;
wire   [7:0] empty_54_fu_1058_p2;
wire  signed [8:0] p_cast212_cast_fu_1068_p1;
wire   [63:0] p_cast212_cast_cast_fu_1071_p1;
wire   [63:0] empty_71_fu_1075_p2;
wire   [61:0] p_cast7_fu_1080_p4;
wire  signed [8:0] p_cast213_cast_fu_1100_p1;
wire   [63:0] p_cast213_cast_cast_fu_1103_p1;
wire   [63:0] empty_73_fu_1107_p2;
wire   [61:0] p_cast8_fu_1112_p4;
wire   [31:0] empty_58_fu_1135_p1;
wire   [44:0] empty_58_fu_1135_p2;
wire   [9:0] p_cast214_cast_fu_1150_p4;
wire   [63:0] p_cast214_cast_cast_fu_1159_p1;
wire   [63:0] empty_75_fu_1163_p2;
wire   [61:0] p_cast9_fu_1168_p4;
wire   [31:0] empty_60_fu_1194_p1;
wire   [47:0] empty_60_fu_1194_p2;
wire   [31:0] mul60_u0_32fixp_fu_1200_p4;
wire   [31:0] tmp_4_fu_1210_p3;
wire   [31:0] add65_u0_32fixp_0_fu_1217_p2;
wire   [9:0] p_cast215_cast_fu_1233_p4;
wire   [63:0] p_cast215_cast_cast_fu_1242_p1;
wire   [63:0] empty_77_fu_1246_p2;
wire   [61:0] p_cast10_fu_1251_p4;
wire   [31:0] empty_62_fu_1284_p1;
wire   [47:0] empty_62_fu_1284_p2;
wire   [31:0] mul60_u0_32fixp_1_fu_1290_p4;
wire   [31:0] tmp_6_fu_1274_p3;
wire   [31:0] add65_u0_32fixp_1_fu_1300_p2;
wire   [9:0] p_cast216_cast_fu_1316_p4;
wire   [63:0] p_cast216_cast_cast_fu_1325_p1;
wire   [63:0] empty_79_fu_1329_p2;
wire   [61:0] p_cast11_fu_1334_p4;
wire   [31:0] empty_64_fu_1367_p1;
wire   [47:0] empty_64_fu_1367_p2;
wire   [31:0] mul60_u0_32fixp_2_fu_1373_p4;
wire   [31:0] tmp_8_fu_1357_p3;
wire   [31:0] add65_u0_32fixp_2_fu_1383_p2;
wire   [9:0] p_cast217_cast_fu_1399_p4;
wire   [63:0] p_cast217_cast_cast_fu_1408_p1;
wire   [63:0] empty_81_fu_1412_p2;
wire   [61:0] p_cast12_fu_1417_p4;
wire   [31:0] empty_66_fu_1450_p1;
wire   [47:0] empty_66_fu_1450_p2;
wire   [31:0] mul60_u0_32fixp_3_fu_1456_p4;
wire   [31:0] tmp_10_fu_1440_p3;
wire   [31:0] add65_u0_32fixp_3_fu_1466_p2;
wire  signed [9:0] p_cast218_cast_fu_1482_p1;
wire   [63:0] p_cast218_cast_cast_fu_1485_p1;
wire   [63:0] empty_83_fu_1489_p2;
wire   [61:0] p_cast13_fu_1494_p4;
wire   [31:0] empty_68_fu_1527_p1;
wire   [47:0] empty_68_fu_1527_p2;
wire   [31:0] mul60_u0_32fixp_4_fu_1533_p4;
wire   [31:0] tmp_12_fu_1517_p3;
wire   [31:0] add65_u0_32fixp_4_fu_1543_p2;
wire  signed [9:0] p_cast219_cast_fu_1559_p1;
wire   [63:0] p_cast219_cast_cast_fu_1562_p1;
wire   [63:0] empty_85_fu_1566_p2;
wire   [61:0] p_cast14_fu_1571_p4;
wire  signed [9:0] p_cast220_cast_fu_1591_p1;
wire   [63:0] p_cast220_cast_cast_fu_1594_p1;
wire   [63:0] empty_87_fu_1598_p2;
wire   [61:0] p_cast15_fu_1603_p4;
wire  signed [9:0] p_cast221_cast_fu_1623_p1;
wire   [63:0] p_cast221_cast_cast_fu_1626_p1;
wire   [63:0] empty_89_fu_1630_p2;
wire   [61:0] p_cast16_fu_1635_p4;
wire   [31:0] empty_70_fu_1668_p1;
wire   [47:0] empty_70_fu_1668_p2;
wire   [31:0] mul60_u0_32fixp_5_fu_1674_p4;
wire   [31:0] tmp_14_fu_1658_p3;
wire   [31:0] add65_u0_32fixp_5_fu_1684_p2;
wire   [31:0] empty_72_fu_1713_p1;
wire   [47:0] empty_72_fu_1713_p2;
wire   [31:0] mul60_u0_32fixp_6_fu_1719_p4;
wire   [31:0] tmp_16_fu_1703_p3;
wire   [31:0] add65_u0_32fixp_6_fu_1729_p2;
wire   [31:0] empty_74_fu_1758_p1;
wire   [47:0] empty_74_fu_1758_p2;
wire   [31:0] mul60_u0_32fixp_7_fu_1764_p4;
wire   [31:0] tmp_18_fu_1748_p3;
wire   [31:0] add65_u0_32fixp_7_fu_1774_p2;
wire   [31:0] empty_76_fu_1803_p1;
wire   [47:0] empty_76_fu_1803_p2;
wire   [31:0] mul60_u0_32fixp_8_fu_1809_p4;
wire   [31:0] tmp_20_fu_1793_p3;
wire   [31:0] add65_u0_32fixp_8_fu_1819_p2;
wire   [31:0] empty_78_fu_1848_p1;
wire   [47:0] empty_78_fu_1848_p2;
wire   [31:0] mul60_u0_32fixp_9_fu_1854_p4;
wire   [31:0] tmp_22_fu_1838_p3;
wire   [31:0] add65_u0_32fixp_9_fu_1864_p2;
wire   [31:0] empty_80_fu_1893_p1;
wire   [47:0] empty_80_fu_1893_p2;
wire   [31:0] mul60_u0_32fixp_s_fu_1899_p4;
wire   [31:0] tmp_24_fu_1883_p3;
wire   [31:0] add65_u0_32fixp_10_fu_1909_p2;
wire   [31:0] empty_82_fu_1938_p1;
wire   [47:0] empty_82_fu_1938_p2;
wire   [31:0] mul60_u0_32fixp_10_fu_1944_p4;
wire   [31:0] tmp_26_fu_1928_p3;
wire   [31:0] add65_u0_32fixp_11_fu_1954_p2;
wire   [31:0] empty_84_fu_1983_p1;
wire   [47:0] empty_84_fu_1983_p2;
wire   [31:0] mul60_u0_32fixp_11_fu_1989_p4;
wire   [31:0] tmp_28_fu_1973_p3;
wire   [31:0] add65_u0_32fixp_12_fu_1999_p2;
wire   [31:0] empty_86_fu_2028_p1;
wire   [47:0] empty_86_fu_2028_p2;
wire   [31:0] mul60_u0_32fixp_12_fu_2034_p4;
wire   [31:0] tmp_30_fu_2018_p3;
wire   [31:0] add65_u0_32fixp_13_fu_2044_p2;
wire   [31:0] empty_88_fu_2073_p1;
wire   [47:0] empty_88_fu_2073_p2;
wire   [31:0] mul60_u0_32fixp_13_fu_2079_p4;
wire   [31:0] tmp_32_fu_2063_p3;
wire   [31:0] add65_u0_32fixp_14_fu_2089_p2;
wire   [31:0] empty_90_fu_2118_p1;
wire   [47:0] empty_90_fu_2118_p2;
wire   [31:0] mul60_u0_32fixp_14_fu_2124_p4;
wire   [31:0] tmp_34_fu_2108_p3;
wire   [31:0] add65_u0_32fixp_15_fu_2134_p2;
wire    ap_block_pp0_stage30;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [30:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_block_pp0_stage24_subdone;
reg    ap_block_pp0_stage25_subdone;
reg    ap_block_pp0_stage26_subdone;
wire    ap_block_state28_pp0_stage27_iter0;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_state29_pp0_stage28_iter0;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_state30_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [47:0] empty_60_fu_1194_p10;
wire   [47:0] empty_62_fu_1284_p10;
wire   [47:0] empty_64_fu_1367_p10;
wire   [47:0] empty_66_fu_1450_p10;
wire   [47:0] empty_68_fu_1527_p10;
wire   [47:0] empty_70_fu_1668_p10;
wire   [47:0] empty_72_fu_1713_p10;
wire   [47:0] empty_74_fu_1758_p10;
wire   [47:0] empty_76_fu_1803_p10;
wire   [47:0] empty_78_fu_1848_p10;
wire   [47:0] empty_80_fu_1893_p10;
wire   [47:0] empty_82_fu_1938_p10;
wire   [47:0] empty_84_fu_1983_p10;
wire   [47:0] empty_86_fu_2028_p10;
wire   [47:0] empty_88_fu_2073_p10;
wire   [47:0] empty_90_fu_2118_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 31'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

mm2_mul_32s_32ns_45_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 45 ))
mul_32s_32ns_45_1_1_U40(
    .din0(gmem_addr_read_reg_2507),
    .din1(empty_58_fu_1135_p1),
    .dout(empty_58_fu_1135_p2)
);

mm2_mul_32s_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_1_1_U41(
    .din0(gmem_addr_1_read_reg_2518),
    .din1(empty_60_fu_1194_p1),
    .dout(empty_60_fu_1194_p2)
);

mm2_mul_32s_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_1_1_U42(
    .din0(gmem_addr_2_read_reg_2539),
    .din1(empty_62_fu_1284_p1),
    .dout(empty_62_fu_1284_p2)
);

mm2_mul_32s_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_1_1_U43(
    .din0(gmem_addr_3_read_reg_2555),
    .din1(empty_64_fu_1367_p1),
    .dout(empty_64_fu_1367_p2)
);

mm2_mul_32s_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_1_1_U44(
    .din0(gmem_addr_4_read_reg_2571),
    .din1(empty_66_fu_1450_p1),
    .dout(empty_66_fu_1450_p2)
);

mm2_mul_32s_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_1_1_U45(
    .din0(gmem_addr_5_read_reg_2587),
    .din1(empty_68_fu_1527_p1),
    .dout(empty_68_fu_1527_p2)
);

mm2_mul_32s_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_1_1_U46(
    .din0(gmem_addr_6_read_reg_2603),
    .din1(empty_70_fu_1668_p1),
    .dout(empty_70_fu_1668_p2)
);

mm2_mul_32s_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_1_1_U47(
    .din0(gmem_addr_7_read_reg_2631),
    .din1(empty_72_fu_1713_p1),
    .dout(empty_72_fu_1713_p2)
);

mm2_mul_32s_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_1_1_U48(
    .din0(gmem_addr_8_read_reg_2641),
    .din1(empty_74_fu_1758_p1),
    .dout(empty_74_fu_1758_p2)
);

mm2_mul_32s_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_1_1_U49(
    .din0(gmem_addr_9_read_reg_2651),
    .din1(empty_76_fu_1803_p1),
    .dout(empty_76_fu_1803_p2)
);

mm2_mul_32s_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_1_1_U50(
    .din0(gmem_addr_10_read_reg_2661),
    .din1(empty_78_fu_1848_p1),
    .dout(empty_78_fu_1848_p2)
);

mm2_mul_32s_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_1_1_U51(
    .din0(gmem_addr_11_read_reg_2671),
    .din1(empty_80_fu_1893_p1),
    .dout(empty_80_fu_1893_p2)
);

mm2_mul_32s_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_1_1_U52(
    .din0(gmem_addr_12_read_reg_2681),
    .din1(empty_82_fu_1938_p1),
    .dout(empty_82_fu_1938_p2)
);

mm2_mul_32s_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_1_1_U53(
    .din0(gmem_addr_13_read_reg_2691),
    .din1(empty_84_fu_1983_p1),
    .dout(empty_84_fu_1983_p2)
);

mm2_mul_32s_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_1_1_U54(
    .din0(gmem_addr_14_read_reg_2701),
    .din1(empty_86_fu_2028_p1),
    .dout(empty_86_fu_2028_p2)
);

mm2_mul_32s_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_1_1_U55(
    .din0(gmem_addr_15_read_reg_2711),
    .din1(empty_88_fu_2073_p1),
    .dout(empty_88_fu_2073_p2)
);

mm2_mul_32s_32ns_48_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
mul_32s_32ns_48_1_1_U56(
    .din0(gmem_addr_16_read_reg_2721),
    .din1(empty_90_fu_2118_p1),
    .dout(empty_90_fu_2118_p2)
);

mm2_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten332_fu_580_p2 == 1'd0))) begin
            indvar_flatten330_fu_170 <= indvar_flatten_next331_fu_586_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten330_fu_170 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1))) begin
        indvars_iv11_fu_162 <= 5'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage30_11001))) begin
        indvars_iv11_fu_162 <= indvars_iv_next12_fu_2159_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1))) begin
        indvars_iv15_fu_166 <= 5'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage30_11001))) begin
        indvars_iv15_fu_166 <= indvars_iv15_mid2_fu_2154_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten332_fu_580_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_24_reg_2244[7 : 4] <= empty_24_fu_635_p3[7 : 4];
        empty_56_reg_2272 <= empty_56_fu_659_p1;
        exitcond142434_reg_2229 <= exitcond142434_fu_595_p2;
        gmem_addr_reg_2285 <= p_cast85_cast_fu_693_p1;
        indvars_iv11_mid2_reg_2234 <= indvars_iv11_mid2_fu_601_p3;
        indvars_iv_next16_dup414_reg_2239 <= indvars_iv_next16_dup414_fu_609_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        empty_25_reg_2292 <= tmp_q1;
        empty_27_reg_2297 <= tmp_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        empty_29_reg_2318 <= tmp_q1;
        empty_31_reg_2323 <= tmp_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        empty_33_reg_2351 <= tmp_q1;
        empty_35_reg_2356 <= tmp_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        empty_37_reg_2383 <= tmp_q1;
        empty_39_reg_2388 <= tmp_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        empty_41_reg_2409 <= tmp_q1;
        empty_43_reg_2414 <= tmp_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        empty_45_reg_2440 <= tmp_q1;
        empty_47_reg_2445 <= tmp_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        empty_49_reg_2471 <= tmp_q1;
        empty_51_reg_2476 <= tmp_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        empty_53_reg_2497 <= tmp_q1;
        empty_55_reg_2502 <= tmp_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten332_reg_2225 <= exitcond_flatten332_fu_580_p2;
        indvars_iv15_load_reg_2220 <= ap_sig_allocacmp_indvars_iv15_load;
        p_cast86_cast_reg_2215[31 : 0] <= p_cast86_cast_fu_543_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage18) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001))) begin
        gmem_addr_10_read_reg_2661 <= m_axi_gmem_RDATA;
        tmp_21_reg_2656 <= {{add65_u0_32fixp_8_fu_1819_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        gmem_addr_10_reg_2544 <= p_cast128_cast_fu_1261_p1;
        gmem_addr_2_read_reg_2539 <= m_axi_gmem_RDATA;
        tmp_5_reg_2534 <= {{add65_u0_32fixp_0_fu_1217_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage19) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001))) begin
        gmem_addr_11_read_reg_2671 <= m_axi_gmem_RDATA;
        tmp_23_reg_2666 <= {{add65_u0_32fixp_9_fu_1864_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        gmem_addr_11_reg_2560 <= p_cast132_cast_fu_1344_p1;
        gmem_addr_3_read_reg_2555 <= m_axi_gmem_RDATA;
        tmp_7_reg_2550 <= {{add65_u0_32fixp_1_fu_1300_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage20) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001))) begin
        gmem_addr_12_read_reg_2681 <= m_axi_gmem_RDATA;
        tmp_25_reg_2676 <= {{add65_u0_32fixp_10_fu_1909_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        gmem_addr_12_reg_2576 <= p_cast136_cast_fu_1427_p1;
        gmem_addr_4_read_reg_2571 <= m_axi_gmem_RDATA;
        tmp_9_reg_2566 <= {{add65_u0_32fixp_2_fu_1383_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage21) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001))) begin
        gmem_addr_13_read_reg_2691 <= m_axi_gmem_RDATA;
        tmp_27_reg_2686 <= {{add65_u0_32fixp_11_fu_1954_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        gmem_addr_13_reg_2592 <= p_cast140_cast_fu_1504_p1;
        gmem_addr_5_read_reg_2587 <= m_axi_gmem_RDATA;
        tmp_11_reg_2582 <= {{add65_u0_32fixp_3_fu_1466_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage22) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001))) begin
        gmem_addr_14_read_reg_2701 <= m_axi_gmem_RDATA;
        tmp_29_reg_2696 <= {{add65_u0_32fixp_12_fu_1999_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        gmem_addr_14_reg_2608 <= p_cast144_cast_fu_1581_p1;
        gmem_addr_15_reg_2614 <= p_cast148_cast_fu_1613_p1;
        gmem_addr_16_reg_2620 <= p_cast152_cast_fu_1645_p1;
        gmem_addr_6_read_reg_2603 <= m_axi_gmem_RDATA;
        tmp_13_reg_2598 <= {{add65_u0_32fixp_4_fu_1543_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage23) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001))) begin
        gmem_addr_15_read_reg_2711 <= m_axi_gmem_RDATA;
        tmp_31_reg_2706 <= {{add65_u0_32fixp_13_fu_2044_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage24) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001))) begin
        gmem_addr_16_read_reg_2721 <= m_axi_gmem_RDATA;
        tmp_33_reg_2716 <= {{add65_u0_32fixp_14_fu_2089_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        gmem_addr_1_read_reg_2518 <= m_axi_gmem_RDATA;
        gmem_addr_9_reg_2528 <= p_cast124_cast_fu_1178_p1;
        tmp_3_reg_2523 <= {{empty_58_fu_1135_p2[44:29]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gmem_addr_1_reg_2312 <= p_cast89_cast_fu_754_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        gmem_addr_2_reg_2345 <= p_cast94_cast_fu_812_p1;
        p_cast207_cast_reg_2338[5 : 2] <= p_cast207_cast_fu_784_p4[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        gmem_addr_3_reg_2377 <= p_cast99_cast_fu_870_p1;
        p_cast208_cast_reg_2371[5 : 2] <= p_cast208_cast_fu_842_p4[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        gmem_addr_4_reg_2403 <= p_cast103_cast_fu_922_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        gmem_addr_5_reg_2434 <= p_cast108_cast_fu_980_p1;
        p_cast210_cast_reg_2429[5 : 2] <= p_cast210_cast_fu_952_p4[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        gmem_addr_6_reg_2465 <= p_cast112_cast_fu_1038_p1;
        p_cast211_cast_reg_2460[5 : 2] <= p_cast211_cast_fu_1010_p4[5 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001))) begin
        gmem_addr_7_read_reg_2631 <= m_axi_gmem_RDATA;
        tmp_15_reg_2626 <= {{add65_u0_32fixp_5_fu_1684_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        gmem_addr_7_reg_2491 <= p_cast116_cast_fu_1090_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001))) begin
        gmem_addr_8_read_reg_2641 <= m_axi_gmem_RDATA;
        tmp_17_reg_2636 <= {{add65_u0_32fixp_6_fu_1729_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        gmem_addr_8_reg_2512 <= p_cast120_cast_fu_1122_p1;
        gmem_addr_read_reg_2507 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage17) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001))) begin
        gmem_addr_9_read_reg_2651 <= m_axi_gmem_RDATA;
        tmp_19_reg_2646 <= {{add65_u0_32fixp_7_fu_1774_p2[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage25) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        tmp_35_reg_2726 <= {{add65_u0_32fixp_15_fu_2134_p2[31:16]}};
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten332_fu_580_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten330_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten330_load = indvar_flatten330_fu_170;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvars_iv11_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvars_iv11_load = indvars_iv11_fu_162;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvars_iv15_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvars_iv15_load = indvars_iv15_fu_166;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage17)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage16)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage15)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage14)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage13)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage12)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage11)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage9)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage1)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage25))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage24)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage23)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage22)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage21)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage20)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage19)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage18)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage17)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage16)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage15)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage14)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage13)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage12)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage11)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage10)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage9)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage8)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage26))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten332_reg_2225 == 1'd0))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_16_reg_2620;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_15_reg_2614;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_14_reg_2608;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_13_reg_2592;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_12_reg_2576;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_11_reg_2560;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_10_reg_2544;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_9_reg_2528;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_8_reg_2512;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_7_reg_2491;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_6_reg_2465;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_5_reg_2434;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_4_reg_2403;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_3_reg_2377;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_2_reg_2345;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_1_reg_2312;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            m_axi_gmem_ARADDR = gmem_addr_reg_2285;
        end else begin
            m_axi_gmem_ARADDR = 'bx;
        end
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (exitcond_flatten332_reg_2225 == 1'd0) & (1'b0 == ap_block_pp0_stage26_11001))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
            tmp_address0 = p_cast153_mid2_v_fu_1063_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
            tmp_address0 = p_cast145_mid2_v_fu_1005_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
            tmp_address0 = p_cast137_mid2_v_fu_947_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            tmp_address0 = p_cast129_mid2_v_fu_895_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            tmp_address0 = p_cast121_mid2_v_fu_837_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            tmp_address0 = p_cast113_mid2_v_fu_779_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            tmp_address0 = p_cast104_mid2_v_fu_723_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            tmp_address0 = p_cast95_mid2_v_fu_654_p1;
        end else begin
            tmp_address0 = 'bx;
        end
    end else begin
        tmp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
            tmp_address1 = p_cast149_mid2_v_fu_1053_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
            tmp_address1 = p_cast141_mid2_v_fu_995_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
            tmp_address1 = p_cast133_mid2_v_fu_937_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            tmp_address1 = p_cast125_mid2_v_fu_885_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            tmp_address1 = p_cast117_mid2_v_fu_827_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            tmp_address1 = p_cast109_mid2_v_fu_769_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            tmp_address1 = p_cast100_mid2_v_fu_713_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            tmp_address1 = p_cast90_mid2_v_fu_643_p1;
        end else begin
            tmp_address1 = 'bx;
        end
    end else begin
        tmp_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        tmp_ce0 = 1'b1;
    end else begin
        tmp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        tmp_ce1 = 1'b1;
    end else begin
        tmp_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add65_u0_32fixp_0_fu_1217_p2 = (mul60_u0_32fixp_fu_1200_p4 + tmp_4_fu_1210_p3);

assign add65_u0_32fixp_10_fu_1909_p2 = (mul60_u0_32fixp_s_fu_1899_p4 + tmp_24_fu_1883_p3);

assign add65_u0_32fixp_11_fu_1954_p2 = (mul60_u0_32fixp_10_fu_1944_p4 + tmp_26_fu_1928_p3);

assign add65_u0_32fixp_12_fu_1999_p2 = (mul60_u0_32fixp_11_fu_1989_p4 + tmp_28_fu_1973_p3);

assign add65_u0_32fixp_13_fu_2044_p2 = (mul60_u0_32fixp_12_fu_2034_p4 + tmp_30_fu_2018_p3);

assign add65_u0_32fixp_14_fu_2089_p2 = (mul60_u0_32fixp_13_fu_2079_p4 + tmp_32_fu_2063_p3);

assign add65_u0_32fixp_15_fu_2134_p2 = (mul60_u0_32fixp_14_fu_2124_p4 + tmp_34_fu_2108_p3);

assign add65_u0_32fixp_1_fu_1300_p2 = (mul60_u0_32fixp_1_fu_1290_p4 + tmp_6_fu_1274_p3);

assign add65_u0_32fixp_2_fu_1383_p2 = (mul60_u0_32fixp_2_fu_1373_p4 + tmp_8_fu_1357_p3);

assign add65_u0_32fixp_3_fu_1466_p2 = (mul60_u0_32fixp_3_fu_1456_p4 + tmp_10_fu_1440_p3);

assign add65_u0_32fixp_4_fu_1543_p2 = (mul60_u0_32fixp_4_fu_1533_p4 + tmp_12_fu_1517_p3);

assign add65_u0_32fixp_5_fu_1684_p2 = (mul60_u0_32fixp_5_fu_1674_p4 + tmp_14_fu_1658_p3);

assign add65_u0_32fixp_6_fu_1729_p2 = (mul60_u0_32fixp_6_fu_1719_p4 + tmp_16_fu_1703_p3);

assign add65_u0_32fixp_7_fu_1774_p2 = (mul60_u0_32fixp_7_fu_1764_p4 + tmp_18_fu_1748_p3);

assign add65_u0_32fixp_8_fu_1819_p2 = (mul60_u0_32fixp_8_fu_1809_p4 + tmp_20_fu_1793_p3);

assign add65_u0_32fixp_9_fu_1864_p2 = (mul60_u0_32fixp_9_fu_1854_p4 + tmp_22_fu_1838_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_BVALID == 1'b0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage25_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state26_io));
end

always @ (*) begin
    ap_block_pp0_stage25_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state26_io));
end

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage26_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state27_io));
end

always @ (*) begin
    ap_block_pp0_stage26_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state27_io));
end

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0))));
end

always @ (*) begin
    ap_block_state10_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state11_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state12_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state13_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state14_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state15_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state16_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state17_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state17_pp0_stage16_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state18_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state18_pp0_stage17_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state19_pp0_stage18_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage19_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state21_pp0_stage20_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state22_pp0_stage21_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state23_pp0_stage22_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state24_pp0_stage23_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp0_stage24_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state26_io = ((m_axi_gmem_AWREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_block_state26_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state27_io = ((m_axi_gmem_WREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_block_state27_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state32_pp0_stage0_iter1 = (m_axi_gmem_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state3_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((m_axi_gmem_ARREADY == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (exitcond_flatten332_reg_2225 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_23_fu_615_p1 = indvars_iv_next16_dup414_fu_609_p2[3:0];

assign empty_24_fu_635_p3 = ((exitcond142434_fu_595_p2[0:0] == 1'b1) ? p_mid_fu_627_p3 : tmp_s_fu_572_p3);

assign empty_26_fu_648_p2 = (empty_24_fu_635_p3 | 8'd1);

assign empty_28_fu_708_p2 = (empty_24_reg_2244 | 8'd2);

assign empty_30_fu_718_p2 = (empty_24_reg_2244 | 8'd3);

assign empty_32_fu_764_p2 = (empty_24_reg_2244 | 8'd4);

assign empty_34_fu_774_p2 = (empty_24_reg_2244 | 8'd5);

assign empty_36_fu_822_p2 = (empty_24_reg_2244 | 8'd6);

assign empty_38_fu_832_p2 = (empty_24_reg_2244 | 8'd7);

assign empty_40_fu_880_p2 = (empty_24_reg_2244 | 8'd8);

assign empty_42_fu_890_p2 = (empty_24_reg_2244 | 8'd9);

assign empty_44_fu_932_p2 = (empty_24_reg_2244 | 8'd10);

assign empty_46_fu_942_p2 = (empty_24_reg_2244 | 8'd11);

assign empty_48_fu_990_p2 = (empty_24_reg_2244 | 8'd12);

assign empty_50_fu_1000_p2 = (empty_24_reg_2244 | 8'd13);

assign empty_52_fu_1048_p2 = (empty_24_reg_2244 | 8'd14);

assign empty_54_fu_1058_p2 = (empty_24_reg_2244 | 8'd15);

assign empty_56_fu_659_p1 = indvars_iv11_mid2_fu_601_p3[3:0];

assign empty_57_fu_677_p2 = (p_cast205_fu_673_p1 + D);

assign empty_58_fu_1135_p1 = p_cast86_cast_reg_2215;

assign empty_59_fu_739_p2 = (p_cast206_fu_735_p1 + C);

assign empty_60_fu_1194_p1 = empty_60_fu_1194_p10;

assign empty_60_fu_1194_p10 = empty_25_reg_2292;

assign empty_61_fu_797_p2 = (p_cast207_cast_cast_fu_793_p1 + C);

assign empty_62_fu_1284_p1 = empty_62_fu_1284_p10;

assign empty_62_fu_1284_p10 = empty_27_reg_2297;

assign empty_63_fu_855_p2 = (p_cast208_cast_cast_fu_851_p1 + C);

assign empty_64_fu_1367_p1 = empty_64_fu_1367_p10;

assign empty_64_fu_1367_p10 = empty_29_reg_2318;

assign empty_65_fu_907_p2 = (p_cast209_cast_cast_fu_903_p1 + C);

assign empty_66_fu_1450_p1 = empty_66_fu_1450_p10;

assign empty_66_fu_1450_p10 = empty_31_reg_2323;

assign empty_67_fu_965_p2 = (p_cast210_cast_cast_fu_961_p1 + C);

assign empty_68_fu_1527_p1 = empty_68_fu_1527_p10;

assign empty_68_fu_1527_p10 = empty_33_reg_2351;

assign empty_69_fu_1023_p2 = (p_cast211_cast_cast_fu_1019_p1 + C);

assign empty_70_fu_1668_p1 = empty_70_fu_1668_p10;

assign empty_70_fu_1668_p10 = empty_35_reg_2356;

assign empty_71_fu_1075_p2 = (p_cast212_cast_cast_fu_1071_p1 + C);

assign empty_72_fu_1713_p1 = empty_72_fu_1713_p10;

assign empty_72_fu_1713_p10 = empty_37_reg_2383;

assign empty_73_fu_1107_p2 = (p_cast213_cast_cast_fu_1103_p1 + C);

assign empty_74_fu_1758_p1 = empty_74_fu_1758_p10;

assign empty_74_fu_1758_p10 = empty_39_reg_2388;

assign empty_75_fu_1163_p2 = (p_cast214_cast_cast_fu_1159_p1 + C);

assign empty_76_fu_1803_p1 = empty_76_fu_1803_p10;

assign empty_76_fu_1803_p10 = empty_41_reg_2409;

assign empty_77_fu_1246_p2 = (p_cast215_cast_cast_fu_1242_p1 + C);

assign empty_78_fu_1848_p1 = empty_78_fu_1848_p10;

assign empty_78_fu_1848_p10 = empty_43_reg_2414;

assign empty_79_fu_1329_p2 = (p_cast216_cast_cast_fu_1325_p1 + C);

assign empty_80_fu_1893_p1 = empty_80_fu_1893_p10;

assign empty_80_fu_1893_p10 = empty_45_reg_2440;

assign empty_81_fu_1412_p2 = (p_cast217_cast_cast_fu_1408_p1 + C);

assign empty_82_fu_1938_p1 = empty_82_fu_1938_p10;

assign empty_82_fu_1938_p10 = empty_47_reg_2445;

assign empty_83_fu_1489_p2 = (p_cast218_cast_cast_fu_1485_p1 + C);

assign empty_84_fu_1983_p1 = empty_84_fu_1983_p10;

assign empty_84_fu_1983_p10 = empty_49_reg_2471;

assign empty_85_fu_1566_p2 = (p_cast219_cast_cast_fu_1562_p1 + C);

assign empty_86_fu_2028_p1 = empty_86_fu_2028_p10;

assign empty_86_fu_2028_p10 = empty_51_reg_2476;

assign empty_87_fu_1598_p2 = (p_cast220_cast_cast_fu_1594_p1 + C);

assign empty_88_fu_2073_p1 = empty_88_fu_2073_p10;

assign empty_88_fu_2073_p10 = empty_53_reg_2497;

assign empty_89_fu_1630_p2 = (p_cast221_cast_cast_fu_1626_p1 + C);

assign empty_90_fu_2118_p1 = empty_90_fu_2118_p10;

assign empty_90_fu_2118_p10 = empty_55_reg_2502;

assign empty_fu_568_p1 = ap_sig_allocacmp_indvars_iv15_load[3:0];

assign exitcond142434_fu_595_p2 = ((ap_sig_allocacmp_indvars_iv11_load == 5'd16) ? 1'b1 : 1'b0);

assign exitcond_flatten332_fu_580_p2 = ((ap_sig_allocacmp_indvar_flatten330_load == 9'd256) ? 1'b1 : 1'b0);

assign indvar_flatten_next331_fu_586_p2 = (ap_sig_allocacmp_indvar_flatten330_load + 9'd1);

assign indvars_iv11_mid2_fu_601_p3 = ((exitcond142434_fu_595_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_indvars_iv11_load);

assign indvars_iv15_cast_mid2_fu_619_p3 = ((exitcond142434_fu_595_p2[0:0] == 1'b1) ? empty_23_fu_615_p1 : empty_fu_568_p1);

assign indvars_iv15_mid2_fu_2154_p3 = ((exitcond142434_reg_2229[0:0] == 1'b1) ? indvars_iv_next16_dup414_reg_2239 : indvars_iv15_load_reg_2220);

assign indvars_iv_next12_fu_2159_p2 = (indvars_iv11_mid2_reg_2234 + 5'd1);

assign indvars_iv_next16_dup414_fu_609_p2 = (ap_sig_allocacmp_indvars_iv15_load + 5'd1);

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = gmem_addr_reg_2285;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_WDATA = tmp_35_reg_2726;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd15;

assign m_axi_gmem_WUSER = 1'd0;

assign mul60_u0_32fixp_10_fu_1944_p4 = {{empty_82_fu_1938_p2[47:16]}};

assign mul60_u0_32fixp_11_fu_1989_p4 = {{empty_84_fu_1983_p2[47:16]}};

assign mul60_u0_32fixp_12_fu_2034_p4 = {{empty_86_fu_2028_p2[47:16]}};

assign mul60_u0_32fixp_13_fu_2079_p4 = {{empty_88_fu_2073_p2[47:16]}};

assign mul60_u0_32fixp_14_fu_2124_p4 = {{empty_90_fu_2118_p2[47:16]}};

assign mul60_u0_32fixp_1_fu_1290_p4 = {{empty_62_fu_1284_p2[47:16]}};

assign mul60_u0_32fixp_2_fu_1373_p4 = {{empty_64_fu_1367_p2[47:16]}};

assign mul60_u0_32fixp_3_fu_1456_p4 = {{empty_66_fu_1450_p2[47:16]}};

assign mul60_u0_32fixp_4_fu_1533_p4 = {{empty_68_fu_1527_p2[47:16]}};

assign mul60_u0_32fixp_5_fu_1674_p4 = {{empty_70_fu_1668_p2[47:16]}};

assign mul60_u0_32fixp_6_fu_1719_p4 = {{empty_72_fu_1713_p2[47:16]}};

assign mul60_u0_32fixp_7_fu_1764_p4 = {{empty_74_fu_1758_p2[47:16]}};

assign mul60_u0_32fixp_8_fu_1809_p4 = {{empty_76_fu_1803_p2[47:16]}};

assign mul60_u0_32fixp_9_fu_1854_p4 = {{empty_78_fu_1848_p2[47:16]}};

assign mul60_u0_32fixp_fu_1200_p4 = {{empty_60_fu_1194_p2[47:16]}};

assign mul60_u0_32fixp_s_fu_1899_p4 = {{empty_80_fu_1893_p2[47:16]}};

assign p_cast100_mid2_v_fu_713_p1 = empty_28_fu_708_p2;

assign p_cast103_cast_fu_922_p1 = $signed(p_cast4_fu_912_p4);

assign p_cast104_mid2_v_fu_723_p1 = empty_30_fu_718_p2;

assign p_cast108_cast_fu_980_p1 = $signed(p_cast5_fu_970_p4);

assign p_cast109_mid2_v_fu_769_p1 = empty_32_fu_764_p2;

assign p_cast10_fu_1251_p4 = {{empty_77_fu_1246_p2[63:2]}};

assign p_cast112_cast_fu_1038_p1 = $signed(p_cast6_fu_1028_p4);

assign p_cast113_mid2_v_fu_779_p1 = empty_34_fu_774_p2;

assign p_cast116_cast_fu_1090_p1 = $signed(p_cast7_fu_1080_p4);

assign p_cast117_mid2_v_fu_827_p1 = empty_36_fu_822_p2;

assign p_cast11_fu_1334_p4 = {{empty_79_fu_1329_p2[63:2]}};

assign p_cast120_cast_fu_1122_p1 = $signed(p_cast8_fu_1112_p4);

assign p_cast121_mid2_v_fu_837_p1 = empty_38_fu_832_p2;

assign p_cast124_cast_fu_1178_p1 = $signed(p_cast9_fu_1168_p4);

assign p_cast125_mid2_v_fu_885_p1 = empty_40_fu_880_p2;

assign p_cast128_cast_fu_1261_p1 = $signed(p_cast10_fu_1251_p4);

assign p_cast129_mid2_v_fu_895_p1 = empty_42_fu_890_p2;

assign p_cast12_fu_1417_p4 = {{empty_81_fu_1412_p2[63:2]}};

assign p_cast132_cast_fu_1344_p1 = $signed(p_cast11_fu_1334_p4);

assign p_cast133_mid2_v_fu_937_p1 = empty_44_fu_932_p2;

assign p_cast136_cast_fu_1427_p1 = $signed(p_cast12_fu_1417_p4);

assign p_cast137_mid2_v_fu_947_p1 = empty_46_fu_942_p2;

assign p_cast13_fu_1494_p4 = {{empty_83_fu_1489_p2[63:2]}};

assign p_cast140_cast_fu_1504_p1 = $signed(p_cast13_fu_1494_p4);

assign p_cast141_mid2_v_fu_995_p1 = empty_48_fu_990_p2;

assign p_cast144_cast_fu_1581_p1 = $signed(p_cast14_fu_1571_p4);

assign p_cast145_mid2_v_fu_1005_p1 = empty_50_fu_1000_p2;

assign p_cast148_cast_fu_1613_p1 = $signed(p_cast15_fu_1603_p4);

assign p_cast149_mid2_v_fu_1053_p1 = empty_52_fu_1048_p2;

assign p_cast14_fu_1571_p4 = {{empty_85_fu_1566_p2[63:2]}};

assign p_cast152_cast_fu_1645_p1 = $signed(p_cast16_fu_1635_p4);

assign p_cast153_mid2_v_fu_1063_p1 = empty_54_fu_1058_p2;

assign p_cast15_fu_1603_p4 = {{empty_87_fu_1598_p2[63:2]}};

assign p_cast16_fu_1635_p4 = {{empty_89_fu_1630_p2[63:2]}};

assign p_cast1_fu_744_p4 = {{empty_59_fu_739_p2[63:2]}};

assign p_cast205_fu_673_p1 = tmp_1_fu_663_p4;

assign p_cast206_fu_735_p1 = tmp_2_fu_728_p3;

assign p_cast207_cast_cast_fu_793_p1 = $unsigned(p_cast207_cast_fu_784_p4);

assign p_cast207_cast_fu_784_p4 = {{{{1'd1}, {empty_56_reg_2272}}}, {2'd0}};

assign p_cast208_cast_cast_fu_851_p1 = $unsigned(p_cast208_cast_fu_842_p4);

assign p_cast208_cast_fu_842_p4 = {{{{2'd2}, {empty_56_reg_2272}}}, {2'd0}};

assign p_cast209_cast_cast_fu_903_p1 = $unsigned(p_cast209_cast_fu_900_p1);

assign p_cast209_cast_fu_900_p1 = p_cast207_cast_reg_2338;

assign p_cast210_cast_cast_fu_961_p1 = $unsigned(p_cast210_cast_fu_952_p4);

assign p_cast210_cast_fu_952_p4 = {{{{3'd4}, {empty_56_reg_2272}}}, {2'd0}};

assign p_cast211_cast_cast_fu_1019_p1 = $unsigned(p_cast211_cast_fu_1010_p4);

assign p_cast211_cast_fu_1010_p4 = {{{{3'd5}, {empty_56_reg_2272}}}, {2'd0}};

assign p_cast212_cast_cast_fu_1071_p1 = $unsigned(p_cast212_cast_fu_1068_p1);

assign p_cast212_cast_fu_1068_p1 = p_cast208_cast_reg_2371;

assign p_cast213_cast_cast_fu_1103_p1 = $unsigned(p_cast213_cast_fu_1100_p1);

assign p_cast213_cast_fu_1100_p1 = p_cast207_cast_reg_2338;

assign p_cast214_cast_cast_fu_1159_p1 = p_cast214_cast_fu_1150_p4;

assign p_cast214_cast_fu_1150_p4 = {{{{4'd8}, {empty_56_reg_2272}}}, {2'd0}};

assign p_cast215_cast_cast_fu_1242_p1 = p_cast215_cast_fu_1233_p4;

assign p_cast215_cast_fu_1233_p4 = {{{{4'd9}, {empty_56_reg_2272}}}, {2'd0}};

assign p_cast216_cast_cast_fu_1325_p1 = p_cast216_cast_fu_1316_p4;

assign p_cast216_cast_fu_1316_p4 = {{{{4'd10}, {empty_56_reg_2272}}}, {2'd0}};

assign p_cast217_cast_cast_fu_1408_p1 = p_cast217_cast_fu_1399_p4;

assign p_cast217_cast_fu_1399_p4 = {{{{4'd11}, {empty_56_reg_2272}}}, {2'd0}};

assign p_cast218_cast_cast_fu_1485_p1 = $unsigned(p_cast218_cast_fu_1482_p1);

assign p_cast218_cast_fu_1482_p1 = p_cast210_cast_reg_2429;

assign p_cast219_cast_cast_fu_1562_p1 = $unsigned(p_cast219_cast_fu_1559_p1);

assign p_cast219_cast_fu_1559_p1 = p_cast211_cast_reg_2460;

assign p_cast220_cast_cast_fu_1594_p1 = $unsigned(p_cast220_cast_fu_1591_p1);

assign p_cast220_cast_fu_1591_p1 = p_cast208_cast_reg_2371;

assign p_cast221_cast_cast_fu_1626_p1 = $unsigned(p_cast221_cast_fu_1623_p1);

assign p_cast221_cast_fu_1623_p1 = p_cast207_cast_reg_2338;

assign p_cast2_fu_802_p4 = {{empty_61_fu_797_p2[63:2]}};

assign p_cast3_fu_860_p4 = {{empty_63_fu_855_p2[63:2]}};

assign p_cast4_fu_912_p4 = {{empty_65_fu_907_p2[63:2]}};

assign p_cast5_fu_970_p4 = {{empty_67_fu_965_p2[63:2]}};

assign p_cast6_fu_1028_p4 = {{empty_69_fu_1023_p2[63:2]}};

assign p_cast7_fu_1080_p4 = {{empty_71_fu_1075_p2[63:2]}};

assign p_cast85_cast_fu_693_p1 = $signed(p_cast_fu_683_p4);

assign p_cast86_cast_fu_543_p1 = p_cast86;

assign p_cast89_cast_fu_754_p1 = $signed(p_cast1_fu_744_p4);

assign p_cast8_fu_1112_p4 = {{empty_73_fu_1107_p2[63:2]}};

assign p_cast90_mid2_v_fu_643_p1 = empty_24_fu_635_p3;

assign p_cast94_cast_fu_812_p1 = $signed(p_cast2_fu_802_p4);

assign p_cast95_mid2_v_fu_654_p1 = empty_26_fu_648_p2;

assign p_cast99_cast_fu_870_p1 = $signed(p_cast3_fu_860_p4);

assign p_cast9_fu_1168_p4 = {{empty_75_fu_1163_p2[63:2]}};

assign p_cast_fu_683_p4 = {{empty_57_fu_677_p2[63:2]}};

assign p_mid_fu_627_p3 = {{empty_23_fu_615_p1}, {4'd0}};

assign tmp_10_fu_1440_p3 = {{tmp_9_reg_2566}, {16'd0}};

assign tmp_12_fu_1517_p3 = {{tmp_11_reg_2582}, {16'd0}};

assign tmp_14_fu_1658_p3 = {{tmp_13_reg_2598}, {16'd0}};

assign tmp_16_fu_1703_p3 = {{tmp_15_reg_2626}, {16'd0}};

assign tmp_18_fu_1748_p3 = {{tmp_17_reg_2636}, {16'd0}};

assign tmp_1_fu_663_p4 = {{{indvars_iv15_cast_mid2_fu_619_p3}, {empty_56_fu_659_p1}}, {2'd0}};

assign tmp_20_fu_1793_p3 = {{tmp_19_reg_2646}, {16'd0}};

assign tmp_22_fu_1838_p3 = {{tmp_21_reg_2656}, {16'd0}};

assign tmp_24_fu_1883_p3 = {{tmp_23_reg_2666}, {16'd0}};

assign tmp_26_fu_1928_p3 = {{tmp_25_reg_2676}, {16'd0}};

assign tmp_28_fu_1973_p3 = {{tmp_27_reg_2686}, {16'd0}};

assign tmp_2_fu_728_p3 = {{empty_56_reg_2272}, {2'd0}};

assign tmp_30_fu_2018_p3 = {{tmp_29_reg_2696}, {16'd0}};

assign tmp_32_fu_2063_p3 = {{tmp_31_reg_2706}, {16'd0}};

assign tmp_34_fu_2108_p3 = {{tmp_33_reg_2716}, {16'd0}};

assign tmp_4_fu_1210_p3 = {{tmp_3_reg_2523}, {16'd0}};

assign tmp_6_fu_1274_p3 = {{tmp_5_reg_2534}, {16'd0}};

assign tmp_8_fu_1357_p3 = {{tmp_7_reg_2550}, {16'd0}};

assign tmp_s_fu_572_p3 = {{empty_fu_568_p1}, {4'd0}};

always @ (posedge ap_clk) begin
    p_cast86_cast_reg_2215[44:32] <= 13'b0000000000000;
    empty_24_reg_2244[3:0] <= 4'b0000;
    p_cast207_cast_reg_2338[1:0] <= 2'b00;
    p_cast207_cast_reg_2338[6] <= 1'b1;
    p_cast208_cast_reg_2371[1:0] <= 2'b00;
    p_cast208_cast_reg_2371[7:6] <= 2'b10;
    p_cast210_cast_reg_2429[1:0] <= 2'b00;
    p_cast210_cast_reg_2429[8:6] <= 3'b100;
    p_cast211_cast_reg_2460[1:0] <= 2'b00;
    p_cast211_cast_reg_2460[8:6] <= 3'b101;
end

endmodule //mm2_mm2_Pipeline_VITIS_LOOP_65_4_VITIS_LOOP_67_5

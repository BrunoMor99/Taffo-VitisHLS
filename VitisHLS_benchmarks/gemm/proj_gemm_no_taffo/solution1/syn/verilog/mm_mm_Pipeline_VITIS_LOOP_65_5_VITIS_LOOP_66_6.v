// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mm_mm_Pipeline_VITIS_LOOP_65_5_VITIS_LOOP_66_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        D_address0,
        D_ce0,
        D_we0,
        D_d0,
        D_1_address0,
        D_1_ce0,
        D_1_we0,
        D_1_d0,
        D_2_address0,
        D_2_ce0,
        D_2_we0,
        D_2_d0,
        D_3_address0,
        D_3_ce0,
        D_3_we0,
        D_3_d0,
        D_4_address0,
        D_4_ce0,
        D_4_we0,
        D_4_d0,
        D_5_address0,
        D_5_ce0,
        D_5_we0,
        D_5_d0,
        D_6_address0,
        D_6_ce0,
        D_6_we0,
        D_6_d0,
        D_7_address0,
        D_7_ce0,
        D_7_we0,
        D_7_d0,
        D_8_address0,
        D_8_ce0,
        D_8_we0,
        D_8_d0,
        D_9_address0,
        D_9_ce0,
        D_9_we0,
        D_9_d0,
        D_10_address0,
        D_10_ce0,
        D_10_we0,
        D_10_d0,
        D_11_address0,
        D_11_ce0,
        D_11_we0,
        D_11_d0,
        D_12_address0,
        D_12_ce0,
        D_12_we0,
        D_12_d0,
        D_13_address0,
        D_13_ce0,
        D_13_we0,
        D_13_d0,
        D_14_address0,
        D_14_ce0,
        D_14_we0,
        D_14_d0,
        D_15_address0,
        D_15_ce0,
        D_15_we0,
        D_15_d0,
        D_16_address0,
        D_16_ce0,
        D_16_we0,
        D_16_d0,
        D_17_address0,
        D_17_ce0,
        D_17_we0,
        D_17_d0,
        D_18_address0,
        D_18_ce0,
        D_18_we0,
        D_18_d0,
        D_19_address0,
        D_19_ce0,
        D_19_we0,
        D_19_d0,
        D_20_address0,
        D_20_ce0,
        D_20_we0,
        D_20_d0,
        D_21_address0,
        D_21_ce0,
        D_21_we0,
        D_21_d0,
        D_22_address0,
        D_22_ce0,
        D_22_we0,
        D_22_d0,
        D_23_address0,
        D_23_ce0,
        D_23_we0,
        D_23_d0,
        D_24_address0,
        D_24_ce0,
        D_24_we0,
        D_24_d0,
        D_25_address0,
        D_25_ce0,
        D_25_we0,
        D_25_d0,
        D_26_address0,
        D_26_ce0,
        D_26_we0,
        D_26_d0,
        D_27_address0,
        D_27_ce0,
        D_27_we0,
        D_27_d0,
        D_28_address0,
        D_28_ce0,
        D_28_we0,
        D_28_d0,
        D_29_address0,
        D_29_ce0,
        D_29_we0,
        D_29_d0,
        D_30_address0,
        D_30_ce0,
        D_30_we0,
        D_30_d0,
        D_31_address0,
        D_31_ce0,
        D_31_we0,
        D_31_d0,
        grp_fu_335_p_din0,
        grp_fu_335_p_din1,
        grp_fu_335_p_dout0,
        grp_fu_335_p_ce,
        grp_fu_358_p_din0,
        grp_fu_358_p_din1,
        grp_fu_358_p_dout0,
        grp_fu_358_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] D_address0;
output   D_ce0;
output   D_we0;
output  [31:0] D_d0;
output  [4:0] D_1_address0;
output   D_1_ce0;
output   D_1_we0;
output  [31:0] D_1_d0;
output  [4:0] D_2_address0;
output   D_2_ce0;
output   D_2_we0;
output  [31:0] D_2_d0;
output  [4:0] D_3_address0;
output   D_3_ce0;
output   D_3_we0;
output  [31:0] D_3_d0;
output  [4:0] D_4_address0;
output   D_4_ce0;
output   D_4_we0;
output  [31:0] D_4_d0;
output  [4:0] D_5_address0;
output   D_5_ce0;
output   D_5_we0;
output  [31:0] D_5_d0;
output  [4:0] D_6_address0;
output   D_6_ce0;
output   D_6_we0;
output  [31:0] D_6_d0;
output  [4:0] D_7_address0;
output   D_7_ce0;
output   D_7_we0;
output  [31:0] D_7_d0;
output  [4:0] D_8_address0;
output   D_8_ce0;
output   D_8_we0;
output  [31:0] D_8_d0;
output  [4:0] D_9_address0;
output   D_9_ce0;
output   D_9_we0;
output  [31:0] D_9_d0;
output  [4:0] D_10_address0;
output   D_10_ce0;
output   D_10_we0;
output  [31:0] D_10_d0;
output  [4:0] D_11_address0;
output   D_11_ce0;
output   D_11_we0;
output  [31:0] D_11_d0;
output  [4:0] D_12_address0;
output   D_12_ce0;
output   D_12_we0;
output  [31:0] D_12_d0;
output  [4:0] D_13_address0;
output   D_13_ce0;
output   D_13_we0;
output  [31:0] D_13_d0;
output  [4:0] D_14_address0;
output   D_14_ce0;
output   D_14_we0;
output  [31:0] D_14_d0;
output  [4:0] D_15_address0;
output   D_15_ce0;
output   D_15_we0;
output  [31:0] D_15_d0;
output  [4:0] D_16_address0;
output   D_16_ce0;
output   D_16_we0;
output  [31:0] D_16_d0;
output  [4:0] D_17_address0;
output   D_17_ce0;
output   D_17_we0;
output  [31:0] D_17_d0;
output  [4:0] D_18_address0;
output   D_18_ce0;
output   D_18_we0;
output  [31:0] D_18_d0;
output  [4:0] D_19_address0;
output   D_19_ce0;
output   D_19_we0;
output  [31:0] D_19_d0;
output  [4:0] D_20_address0;
output   D_20_ce0;
output   D_20_we0;
output  [31:0] D_20_d0;
output  [4:0] D_21_address0;
output   D_21_ce0;
output   D_21_we0;
output  [31:0] D_21_d0;
output  [4:0] D_22_address0;
output   D_22_ce0;
output   D_22_we0;
output  [31:0] D_22_d0;
output  [4:0] D_23_address0;
output   D_23_ce0;
output   D_23_we0;
output  [31:0] D_23_d0;
output  [4:0] D_24_address0;
output   D_24_ce0;
output   D_24_we0;
output  [31:0] D_24_d0;
output  [4:0] D_25_address0;
output   D_25_ce0;
output   D_25_we0;
output  [31:0] D_25_d0;
output  [4:0] D_26_address0;
output   D_26_ce0;
output   D_26_we0;
output  [31:0] D_26_d0;
output  [4:0] D_27_address0;
output   D_27_ce0;
output   D_27_we0;
output  [31:0] D_27_d0;
output  [4:0] D_28_address0;
output   D_28_ce0;
output   D_28_we0;
output  [31:0] D_28_d0;
output  [4:0] D_29_address0;
output   D_29_ce0;
output   D_29_we0;
output  [31:0] D_29_d0;
output  [4:0] D_30_address0;
output   D_30_ce0;
output   D_30_we0;
output  [31:0] D_30_d0;
output  [4:0] D_31_address0;
output   D_31_ce0;
output   D_31_we0;
output  [31:0] D_31_d0;
output  [31:0] grp_fu_335_p_din0;
output  [31:0] grp_fu_335_p_din1;
input  [31:0] grp_fu_335_p_dout0;
output   grp_fu_335_p_ce;
output  [31:0] grp_fu_358_p_din0;
output  [31:0] grp_fu_358_p_din1;
input  [31:0] grp_fu_358_p_dout0;
output   grp_fu_358_p_ce;

reg ap_idle;
reg D_ce0;
reg D_we0;
reg D_1_ce0;
reg D_1_we0;
reg D_2_ce0;
reg D_2_we0;
reg D_3_ce0;
reg D_3_we0;
reg D_4_ce0;
reg D_4_we0;
reg D_5_ce0;
reg D_5_we0;
reg D_6_ce0;
reg D_6_we0;
reg D_7_ce0;
reg D_7_we0;
reg D_8_ce0;
reg D_8_we0;
reg D_9_ce0;
reg D_9_we0;
reg D_10_ce0;
reg D_10_we0;
reg D_11_ce0;
reg D_11_we0;
reg D_12_ce0;
reg D_12_we0;
reg D_13_ce0;
reg D_13_we0;
reg D_14_ce0;
reg D_14_we0;
reg D_15_ce0;
reg D_15_we0;
reg D_16_ce0;
reg D_16_we0;
reg D_17_ce0;
reg D_17_we0;
reg D_18_ce0;
reg D_18_we0;
reg D_19_ce0;
reg D_19_we0;
reg D_20_ce0;
reg D_20_we0;
reg D_21_ce0;
reg D_21_we0;
reg D_22_ce0;
reg D_22_we0;
reg D_23_ce0;
reg D_23_we0;
reg D_24_ce0;
reg D_24_we0;
reg D_25_ce0;
reg D_25_we0;
reg D_26_ce0;
reg D_26_we0;
reg D_27_ce0;
reg D_27_we0;
reg D_28_ce0;
reg D_28_we0;
reg D_29_ce0;
reg D_29_we0;
reg D_30_ce0;
reg D_30_we0;
reg D_31_ce0;
reg D_31_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln65_fu_655_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [5:0] select_ln65_1_fu_693_p3;
reg   [5:0] select_ln65_1_reg_807;
reg   [5:0] select_ln65_1_reg_807_pp0_iter1_reg;
reg   [5:0] select_ln65_1_reg_807_pp0_iter2_reg;
reg   [5:0] select_ln65_1_reg_807_pp0_iter3_reg;
reg   [5:0] select_ln65_1_reg_807_pp0_iter4_reg;
wire   [4:0] empty_7_fu_705_p1;
reg   [4:0] empty_7_reg_812;
reg   [4:0] empty_7_reg_812_pp0_iter1_reg;
reg   [4:0] empty_7_reg_812_pp0_iter2_reg;
reg   [4:0] empty_7_reg_812_pp0_iter3_reg;
reg   [4:0] empty_7_reg_812_pp0_iter4_reg;
wire   [31:0] grp_fu_634_p1;
reg   [31:0] conv_reg_821;
reg   [31:0] mul4_reg_826;
wire   [63:0] zext_ln65_fu_747_p1;
wire    ap_block_pp0_stage0;
reg   [5:0] j_fu_164;
wire   [5:0] add_ln66_fu_726_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_j_load;
reg   [5:0] i_fu_168;
reg   [5:0] ap_sig_allocacmp_i_load;
reg   [10:0] indvar_flatten_fu_172;
wire   [10:0] add_ln65_fu_661_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [31:0] grp_fu_634_p0;
wire   [0:0] icmp_ln66_fu_673_p2;
wire   [5:0] add_ln65_1_fu_687_p2;
wire   [5:0] select_ln65_fu_679_p3;
wire  signed [4:0] mul_ln67_fu_715_p0;
wire  signed [4:0] mul_ln67_fu_715_p1;
wire   [4:0] mul_ln67_fu_715_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_done_reg = 1'b0;
end

mm_sitofp_32ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_2_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_634_p0),
    .ce(1'b1),
    .dout(grp_fu_634_p1)
);

mm_mul_5s_5s_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
mul_5s_5s_5_1_1_U4(
    .din0(mul_ln67_fu_715_p0),
    .din1(mul_ln67_fu_715_p1),
    .dout(mul_ln67_fu_715_p2)
);

mm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln65_fu_655_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_168 <= select_ln65_1_fu_693_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_168 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln65_fu_655_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_172 <= add_ln65_fu_661_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_172 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln65_fu_655_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_164 <= add_ln66_fu_726_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_164 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        conv_reg_821 <= grp_fu_634_p1;
        empty_7_reg_812_pp0_iter1_reg <= empty_7_reg_812;
        select_ln65_1_reg_807_pp0_iter1_reg <= select_ln65_1_reg_807;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        empty_7_reg_812_pp0_iter2_reg <= empty_7_reg_812_pp0_iter1_reg;
        empty_7_reg_812_pp0_iter3_reg <= empty_7_reg_812_pp0_iter2_reg;
        empty_7_reg_812_pp0_iter4_reg <= empty_7_reg_812_pp0_iter3_reg;
        mul4_reg_826 <= grp_fu_335_p_dout0;
        select_ln65_1_reg_807_pp0_iter2_reg <= select_ln65_1_reg_807_pp0_iter1_reg;
        select_ln65_1_reg_807_pp0_iter3_reg <= select_ln65_1_reg_807_pp0_iter2_reg;
        select_ln65_1_reg_807_pp0_iter4_reg <= select_ln65_1_reg_807_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_fu_655_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_7_reg_812 <= empty_7_fu_705_p1;
        select_ln65_1_reg_807 <= select_ln65_1_fu_693_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_10_ce0 = 1'b1;
    end else begin
        D_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd10))) begin
        D_10_we0 = 1'b1;
    end else begin
        D_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_11_ce0 = 1'b1;
    end else begin
        D_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd11))) begin
        D_11_we0 = 1'b1;
    end else begin
        D_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_12_ce0 = 1'b1;
    end else begin
        D_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd12))) begin
        D_12_we0 = 1'b1;
    end else begin
        D_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_13_ce0 = 1'b1;
    end else begin
        D_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd13))) begin
        D_13_we0 = 1'b1;
    end else begin
        D_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_14_ce0 = 1'b1;
    end else begin
        D_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd14))) begin
        D_14_we0 = 1'b1;
    end else begin
        D_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_15_ce0 = 1'b1;
    end else begin
        D_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd15))) begin
        D_15_we0 = 1'b1;
    end else begin
        D_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_16_ce0 = 1'b1;
    end else begin
        D_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd16))) begin
        D_16_we0 = 1'b1;
    end else begin
        D_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_17_ce0 = 1'b1;
    end else begin
        D_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd17))) begin
        D_17_we0 = 1'b1;
    end else begin
        D_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_18_ce0 = 1'b1;
    end else begin
        D_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd18))) begin
        D_18_we0 = 1'b1;
    end else begin
        D_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_19_ce0 = 1'b1;
    end else begin
        D_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd19))) begin
        D_19_we0 = 1'b1;
    end else begin
        D_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_1_ce0 = 1'b1;
    end else begin
        D_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd1))) begin
        D_1_we0 = 1'b1;
    end else begin
        D_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_20_ce0 = 1'b1;
    end else begin
        D_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd20))) begin
        D_20_we0 = 1'b1;
    end else begin
        D_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_21_ce0 = 1'b1;
    end else begin
        D_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd21))) begin
        D_21_we0 = 1'b1;
    end else begin
        D_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_22_ce0 = 1'b1;
    end else begin
        D_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd22))) begin
        D_22_we0 = 1'b1;
    end else begin
        D_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_23_ce0 = 1'b1;
    end else begin
        D_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd23))) begin
        D_23_we0 = 1'b1;
    end else begin
        D_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_24_ce0 = 1'b1;
    end else begin
        D_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd24))) begin
        D_24_we0 = 1'b1;
    end else begin
        D_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_25_ce0 = 1'b1;
    end else begin
        D_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd25))) begin
        D_25_we0 = 1'b1;
    end else begin
        D_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_26_ce0 = 1'b1;
    end else begin
        D_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd26))) begin
        D_26_we0 = 1'b1;
    end else begin
        D_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_27_ce0 = 1'b1;
    end else begin
        D_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd27))) begin
        D_27_we0 = 1'b1;
    end else begin
        D_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_28_ce0 = 1'b1;
    end else begin
        D_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd28))) begin
        D_28_we0 = 1'b1;
    end else begin
        D_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_29_ce0 = 1'b1;
    end else begin
        D_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd29))) begin
        D_29_we0 = 1'b1;
    end else begin
        D_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_2_ce0 = 1'b1;
    end else begin
        D_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd2))) begin
        D_2_we0 = 1'b1;
    end else begin
        D_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_30_ce0 = 1'b1;
    end else begin
        D_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd30))) begin
        D_30_we0 = 1'b1;
    end else begin
        D_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_31_ce0 = 1'b1;
    end else begin
        D_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd31))) begin
        D_31_we0 = 1'b1;
    end else begin
        D_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_3_ce0 = 1'b1;
    end else begin
        D_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd3))) begin
        D_3_we0 = 1'b1;
    end else begin
        D_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_4_ce0 = 1'b1;
    end else begin
        D_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd4))) begin
        D_4_we0 = 1'b1;
    end else begin
        D_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_5_ce0 = 1'b1;
    end else begin
        D_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd5))) begin
        D_5_we0 = 1'b1;
    end else begin
        D_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_6_ce0 = 1'b1;
    end else begin
        D_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd6))) begin
        D_6_we0 = 1'b1;
    end else begin
        D_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_7_ce0 = 1'b1;
    end else begin
        D_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd7))) begin
        D_7_we0 = 1'b1;
    end else begin
        D_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_8_ce0 = 1'b1;
    end else begin
        D_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd8))) begin
        D_8_we0 = 1'b1;
    end else begin
        D_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_9_ce0 = 1'b1;
    end else begin
        D_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd9))) begin
        D_9_we0 = 1'b1;
    end else begin
        D_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        D_ce0 = 1'b1;
    end else begin
        D_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (empty_7_reg_812_pp0_iter4_reg == 5'd0))) begin
        D_we0 = 1'b1;
    end else begin
        D_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_fu_655_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 6'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_168;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_172;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_load = 6'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_164;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign D_10_address0 = zext_ln65_fu_747_p1;

assign D_10_d0 = grp_fu_358_p_dout0;

assign D_11_address0 = zext_ln65_fu_747_p1;

assign D_11_d0 = grp_fu_358_p_dout0;

assign D_12_address0 = zext_ln65_fu_747_p1;

assign D_12_d0 = grp_fu_358_p_dout0;

assign D_13_address0 = zext_ln65_fu_747_p1;

assign D_13_d0 = grp_fu_358_p_dout0;

assign D_14_address0 = zext_ln65_fu_747_p1;

assign D_14_d0 = grp_fu_358_p_dout0;

assign D_15_address0 = zext_ln65_fu_747_p1;

assign D_15_d0 = grp_fu_358_p_dout0;

assign D_16_address0 = zext_ln65_fu_747_p1;

assign D_16_d0 = grp_fu_358_p_dout0;

assign D_17_address0 = zext_ln65_fu_747_p1;

assign D_17_d0 = grp_fu_358_p_dout0;

assign D_18_address0 = zext_ln65_fu_747_p1;

assign D_18_d0 = grp_fu_358_p_dout0;

assign D_19_address0 = zext_ln65_fu_747_p1;

assign D_19_d0 = grp_fu_358_p_dout0;

assign D_1_address0 = zext_ln65_fu_747_p1;

assign D_1_d0 = grp_fu_358_p_dout0;

assign D_20_address0 = zext_ln65_fu_747_p1;

assign D_20_d0 = grp_fu_358_p_dout0;

assign D_21_address0 = zext_ln65_fu_747_p1;

assign D_21_d0 = grp_fu_358_p_dout0;

assign D_22_address0 = zext_ln65_fu_747_p1;

assign D_22_d0 = grp_fu_358_p_dout0;

assign D_23_address0 = zext_ln65_fu_747_p1;

assign D_23_d0 = grp_fu_358_p_dout0;

assign D_24_address0 = zext_ln65_fu_747_p1;

assign D_24_d0 = grp_fu_358_p_dout0;

assign D_25_address0 = zext_ln65_fu_747_p1;

assign D_25_d0 = grp_fu_358_p_dout0;

assign D_26_address0 = zext_ln65_fu_747_p1;

assign D_26_d0 = grp_fu_358_p_dout0;

assign D_27_address0 = zext_ln65_fu_747_p1;

assign D_27_d0 = grp_fu_358_p_dout0;

assign D_28_address0 = zext_ln65_fu_747_p1;

assign D_28_d0 = grp_fu_358_p_dout0;

assign D_29_address0 = zext_ln65_fu_747_p1;

assign D_29_d0 = grp_fu_358_p_dout0;

assign D_2_address0 = zext_ln65_fu_747_p1;

assign D_2_d0 = grp_fu_358_p_dout0;

assign D_30_address0 = zext_ln65_fu_747_p1;

assign D_30_d0 = grp_fu_358_p_dout0;

assign D_31_address0 = zext_ln65_fu_747_p1;

assign D_31_d0 = grp_fu_358_p_dout0;

assign D_3_address0 = zext_ln65_fu_747_p1;

assign D_3_d0 = grp_fu_358_p_dout0;

assign D_4_address0 = zext_ln65_fu_747_p1;

assign D_4_d0 = grp_fu_358_p_dout0;

assign D_5_address0 = zext_ln65_fu_747_p1;

assign D_5_d0 = grp_fu_358_p_dout0;

assign D_6_address0 = zext_ln65_fu_747_p1;

assign D_6_d0 = grp_fu_358_p_dout0;

assign D_7_address0 = zext_ln65_fu_747_p1;

assign D_7_d0 = grp_fu_358_p_dout0;

assign D_8_address0 = zext_ln65_fu_747_p1;

assign D_8_d0 = grp_fu_358_p_dout0;

assign D_9_address0 = zext_ln65_fu_747_p1;

assign D_9_d0 = grp_fu_358_p_dout0;

assign D_address0 = zext_ln65_fu_747_p1;

assign D_d0 = grp_fu_358_p_dout0;

assign add_ln65_1_fu_687_p2 = (ap_sig_allocacmp_i_load + 6'd1);

assign add_ln65_fu_661_p2 = (ap_sig_allocacmp_indvar_flatten_load + 11'd1);

assign add_ln66_fu_726_p2 = (select_ln65_fu_679_p3 + 6'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_7_fu_705_p1 = select_ln65_fu_679_p3[4:0];

assign grp_fu_335_p_ce = 1'b1;

assign grp_fu_335_p_din0 = conv_reg_821;

assign grp_fu_335_p_din1 = 32'd1084227584;

assign grp_fu_358_p_ce = 1'b1;

assign grp_fu_358_p_din0 = mul4_reg_826;

assign grp_fu_358_p_din1 = 32'd1023410176;

assign grp_fu_634_p0 = mul_ln67_fu_715_p2;

assign icmp_ln65_fu_655_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_673_p2 = ((ap_sig_allocacmp_j_load == 6'd32) ? 1'b1 : 1'b0);

assign mul_ln67_fu_715_p0 = (empty_7_fu_705_p1 + 5'd2);

assign mul_ln67_fu_715_p1 = select_ln65_1_fu_693_p3[4:0];

assign select_ln65_1_fu_693_p3 = ((icmp_ln66_fu_673_p2[0:0] == 1'b1) ? add_ln65_1_fu_687_p2 : ap_sig_allocacmp_i_load);

assign select_ln65_fu_679_p3 = ((icmp_ln66_fu_673_p2[0:0] == 1'b1) ? 6'd0 : ap_sig_allocacmp_j_load);

assign zext_ln65_fu_747_p1 = select_ln65_1_reg_807_pp0_iter4_reg;

endmodule //mm_mm_Pipeline_VITIS_LOOP_65_5_VITIS_LOOP_66_6

// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mm_mm,hls_ip_2022_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7v585t-ffg1761-2,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=14.547000,HLS_SYN_LAT=2060,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=296,HLS_SYN_LUT=730,HLS_VERSION=2022_2}" *)

module mm (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        gamma,
        ap_return
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] gamma;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state3;
wire   [31:0] grp_fu_64_p2;
wire    ap_CS_fsm_state4;
reg   [31:0] mul139_s8_24fixp_reg_121;
wire    ap_CS_fsm_state5;
wire   [31:0] grp_fu_75_p1;
reg   [31:0] tmp_1_reg_126;
wire    ap_CS_fsm_state7;
reg   [9:0] D_s6_26fixp_address0;
reg    D_s6_26fixp_ce0;
reg    D_s6_26fixp_we0;
reg   [29:0] D_s6_26fixp_d0;
reg    D_s6_26fixp_ce1;
wire   [29:0] D_s6_26fixp_q1;
wire    grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_start;
wire    grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_done;
wire    grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_idle;
wire    grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_ready;
wire   [9:0] grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_D_s6_26fixp_address0;
wire    grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_D_s6_26fixp_ce0;
wire    grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_D_s6_26fixp_we0;
wire   [29:0] grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_D_s6_26fixp_d0;
wire    grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_start;
wire    grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_done;
wire    grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_idle;
wire    grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_ready;
wire   [9:0] grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_address0;
wire    grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_ce0;
wire    grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_we0;
wire   [29:0] grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_d0;
wire   [9:0] grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_address1;
wire    grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_ce1;
wire  signed [31:0] grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_sum_s8_24fixp_14_out;
wire    grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_sum_s8_24fixp_14_out_ap_vld;
reg    grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_start_reg;
reg   [31:0] grp_fu_64_p0;
reg   [31:0] grp_fu_64_p1;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state6;
wire  signed [31:0] grp_fu_71_p1;
wire   [55:0] empty_14_fu_89_p2;
reg    grp_fu_64_ce;
wire    ap_CS_fsm_state9;
reg    grp_fu_71_ce;
reg   [8:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_start_reg = 1'b0;
#0 grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_start_reg = 1'b0;
end

mm_D_s6_26fixp_RAM_AUTO_1R1W #(
    .DataWidth( 30 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
D_s6_26fixp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(D_s6_26fixp_address0),
    .ce0(D_s6_26fixp_ce0),
    .we0(D_s6_26fixp_we0),
    .d0(D_s6_26fixp_d0),
    .address1(grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_address1),
    .ce1(D_s6_26fixp_ce1),
    .q1(D_s6_26fixp_q1)
);

mm_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6 grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_start),
    .ap_done(grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_done),
    .ap_idle(grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_idle),
    .ap_ready(grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_ready),
    .D_s6_26fixp_address0(grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_D_s6_26fixp_address0),
    .D_s6_26fixp_ce0(grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_D_s6_26fixp_ce0),
    .D_s6_26fixp_we0(grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_D_s6_26fixp_we0),
    .D_s6_26fixp_d0(grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_D_s6_26fixp_d0)
);

mm_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8 grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_start),
    .ap_done(grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_done),
    .ap_idle(grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_idle),
    .ap_ready(grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_ready),
    .D_s6_26fixp_address0(grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_address0),
    .D_s6_26fixp_ce0(grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_ce0),
    .D_s6_26fixp_we0(grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_we0),
    .D_s6_26fixp_d0(grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_d0),
    .D_s6_26fixp_address1(grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_address1),
    .D_s6_26fixp_ce1(grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_ce1),
    .D_s6_26fixp_q1(D_s6_26fixp_q1),
    .sum_s8_24fixp_14_out(grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_sum_s8_24fixp_14_out),
    .sum_s8_24fixp_14_out_ap_vld(grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_sum_s8_24fixp_14_out_ap_vld)
);

mm_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_64_p0),
    .din1(grp_fu_64_p1),
    .ce(grp_fu_64_ce),
    .dout(grp_fu_64_p2)
);

mm_fptosi_32ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fptosi_32ns_32_2_no_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_64_p2),
    .ce(grp_fu_71_ce),
    .dout(grp_fu_71_p1)
);

mm_sitofp_32ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32ns_32_2_no_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul139_s8_24fixp_reg_121),
    .ce(1'b1),
    .dout(grp_fu_75_p1)
);

mm_mul_32s_32s_56_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 56 ))
mul_32s_32s_56_1_1_U7(
    .din0(grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_sum_s8_24fixp_14_out),
    .din1(grp_fu_71_p1),
    .dout(empty_14_fu_89_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_start_reg <= 1'b1;
        end else if ((grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_ready == 1'b1)) begin
            grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_start_reg <= 1'b1;
        end else if ((grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_ready == 1'b1)) begin
            grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mul139_s8_24fixp_reg_121 <= {{empty_14_fu_89_p2[55:24]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_1_reg_126 <= grp_fu_75_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        D_s6_26fixp_address0 = grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        D_s6_26fixp_address0 = grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_D_s6_26fixp_address0;
    end else begin
        D_s6_26fixp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        D_s6_26fixp_ce0 = grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        D_s6_26fixp_ce0 = grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_D_s6_26fixp_ce0;
    end else begin
        D_s6_26fixp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        D_s6_26fixp_ce1 = grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_ce1;
    end else begin
        D_s6_26fixp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        D_s6_26fixp_d0 = grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        D_s6_26fixp_d0 = grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_D_s6_26fixp_d0;
    end else begin
        D_s6_26fixp_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        D_s6_26fixp_we0 = grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_D_s6_26fixp_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        D_s6_26fixp_we0 = grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_D_s6_26fixp_we0;
    end else begin
        D_s6_26fixp_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | ((grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_fu_64_ce = 1'b1;
    end else begin
        grp_fu_64_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_64_p0 = tmp_1_reg_126;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_64_p0 = gamma;
    end else begin
        grp_fu_64_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_64_p1 = 32'd864026624;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_64_p1 = 32'd1266679808;
    end else begin
        grp_fu_64_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_fu_71_ce = 1'b1;
    end else begin
        grp_fu_71_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = grp_fu_64_p2;

assign grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_start = grp_mm_Pipeline_VITIS_LOOP_60_5_VITIS_LOOP_61_6_fu_52_ap_start_reg;

assign grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_start = grp_mm_Pipeline_VITIS_LOOP_73_7_VITIS_LOOP_75_8_fu_58_ap_start_reg;

endmodule //mm

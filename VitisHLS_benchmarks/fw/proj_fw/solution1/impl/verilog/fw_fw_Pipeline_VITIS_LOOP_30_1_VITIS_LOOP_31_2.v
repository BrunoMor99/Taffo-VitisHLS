// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fw_fw_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        path_s12_20fixp_address0,
        path_s12_20fixp_ce0,
        path_s12_20fixp_we0,
        path_s12_20fixp_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] path_s12_20fixp_address0;
output   path_s12_20fixp_ce0;
output   path_s12_20fixp_we0;
output  [31:0] path_s12_20fixp_d0;

reg ap_idle;
reg path_s12_20fixp_ce0;
reg path_s12_20fixp_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] exitcond_flatten_fu_107_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] empty_16_fu_177_p2;
wire   [7:0] empty_18_fu_189_p2;
reg   [7:0] empty_18_reg_370;
reg   [7:0] empty_18_reg_370_pp0_iter1_reg;
reg   [7:0] empty_18_reg_370_pp0_iter2_reg;
reg   [7:0] empty_18_reg_370_pp0_iter3_reg;
reg   [7:0] empty_18_reg_370_pp0_iter4_reg;
reg   [7:0] empty_18_reg_370_pp0_iter5_reg;
reg   [7:0] empty_18_reg_370_pp0_iter6_reg;
reg   [7:0] empty_18_reg_370_pp0_iter7_reg;
reg   [7:0] empty_18_reg_370_pp0_iter8_reg;
reg   [7:0] empty_18_reg_370_pp0_iter9_reg;
reg   [7:0] empty_18_reg_370_pp0_iter10_reg;
wire   [4:0] empty_20_fu_203_p2;
wire   [0:0] cmp12_fu_252_p2;
reg   [0:0] cmp12_reg_382;
reg   [0:0] cmp12_reg_382_pp0_iter9_reg;
reg   [0:0] cmp12_reg_382_pp0_iter10_reg;
wire   [0:0] cmp16_fu_262_p2;
reg   [0:0] cmp16_reg_387;
reg   [0:0] cmp16_reg_387_pp0_iter9_reg;
reg   [0:0] cmp16_reg_387_pp0_iter10_reg;
wire   [0:0] cmp21_fu_272_p2;
reg   [0:0] cmp21_reg_392;
reg   [0:0] cmp21_reg_392_pp0_iter9_reg;
reg   [0:0] cmp21_reg_392_pp0_iter10_reg;
wire   [63:0] p_cast5_fu_310_p1;
wire    ap_block_pp0_stage0;
reg   [4:0] indvars_iv19_fu_64;
wire   [4:0] indvars_iv_next20_fu_227_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_indvars_iv19_load;
reg   [4:0] indvars_iv25_fu_68;
wire   [4:0] indvars_iv25_cast2_mid2_v_fu_145_p3;
reg   [4:0] ap_sig_allocacmp_indvars_iv25_load;
reg   [8:0] indvar_flatten_fu_72;
wire   [8:0] indvar_flatten_next_fu_113_p2;
reg   [8:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [0:0] exitcond24441_fu_125_p2;
wire   [4:0] indvars_iv_next26_dup39_fu_139_p2;
wire   [3:0] empty_15_fu_157_p1;
wire   [4:0] indvars_iv19_mid2_fu_131_p3;
wire   [4:0] empty_16_fu_177_p0;
wire   [7:0] indvars_iv19_cast3_fu_173_p1;
wire   [4:0] empty_16_fu_177_p1;
wire   [3:0] grp_fu_183_p1;
wire   [7:0] p_mid2_fu_161_p3;
wire   [3:0] empty_19_fu_195_p1;
wire   [4:0] indvars_iv19_cast4_cast_fu_199_p1;
wire   [4:0] indvars_iv25_cast1_cast_mid2_fu_169_p1;
wire   [3:0] grp_fu_215_p1;
wire   [3:0] grp_fu_209_p2;
wire   [3:0] empty_21_fu_248_p1;
wire   [2:0] grp_fu_215_p2;
wire   [2:0] empty_22_fu_258_p1;
wire   [3:0] grp_fu_221_p2;
wire   [3:0] empty_23_fu_268_p1;
wire   [2:0] grp_fu_183_p2;
wire   [2:0] empty_17_fu_278_p1;
wire   [29:0] add_fu_282_p3;
wire   [29:0] conv_s5_27fixp_fu_290_p2;
wire   [22:0] tmp_3_fu_296_p4;
wire   [0:0] tmp_fu_314_p2;
wire   [0:0] or_cond7_fu_318_p2;
wire   [25:0] p_cast15_fu_306_p1;
wire   [25:0] p_s_fu_323_p3;
wire  signed [29:0] p_cast_cast_cast_fu_331_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [7:0] empty_16_fu_177_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fw_mul_5ns_5ns_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
mul_5ns_5ns_8_1_1_U1(
    .din0(empty_16_fu_177_p0),
    .din1(empty_16_fu_177_p1),
    .dout(empty_16_fu_177_p2)
);

fw_urem_8ns_4ns_3_12_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_8ns_4ns_3_12_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_16_fu_177_p2),
    .din1(grp_fu_183_p1),
    .ce(1'b1),
    .dout(grp_fu_183_p2)
);

fw_urem_5ns_5ns_4_9_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 4 ))
urem_5ns_5ns_4_9_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_20_fu_203_p2),
    .din1(5'd13),
    .ce(1'b1),
    .dout(grp_fu_209_p2)
);

fw_urem_5ns_4ns_3_9_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_5ns_4ns_3_9_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_20_fu_203_p2),
    .din1(grp_fu_215_p1),
    .ce(1'b1),
    .dout(grp_fu_215_p2)
);

fw_urem_5ns_5ns_4_9_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 4 ))
urem_5ns_5ns_4_9_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(empty_20_fu_203_p2),
    .din1(5'd11),
    .ce(1'b1),
    .dout(grp_fu_221_p2)
);

fw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((exitcond_flatten_fu_107_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_72 <= indvar_flatten_next_fu_113_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_72 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((exitcond_flatten_fu_107_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvars_iv19_fu_64 <= indvars_iv_next20_fu_227_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvars_iv19_fu_64 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((exitcond_flatten_fu_107_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvars_iv25_fu_68 <= indvars_iv25_cast2_mid2_v_fu_145_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvars_iv25_fu_68 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        cmp12_reg_382 <= cmp12_fu_252_p2;
        cmp12_reg_382_pp0_iter10_reg <= cmp12_reg_382_pp0_iter9_reg;
        cmp12_reg_382_pp0_iter9_reg <= cmp12_reg_382;
        cmp16_reg_387 <= cmp16_fu_262_p2;
        cmp16_reg_387_pp0_iter10_reg <= cmp16_reg_387_pp0_iter9_reg;
        cmp16_reg_387_pp0_iter9_reg <= cmp16_reg_387;
        cmp21_reg_392 <= cmp21_fu_272_p2;
        cmp21_reg_392_pp0_iter10_reg <= cmp21_reg_392_pp0_iter9_reg;
        cmp21_reg_392_pp0_iter9_reg <= cmp21_reg_392;
        empty_18_reg_370_pp0_iter10_reg <= empty_18_reg_370_pp0_iter9_reg;
        empty_18_reg_370_pp0_iter2_reg <= empty_18_reg_370_pp0_iter1_reg;
        empty_18_reg_370_pp0_iter3_reg <= empty_18_reg_370_pp0_iter2_reg;
        empty_18_reg_370_pp0_iter4_reg <= empty_18_reg_370_pp0_iter3_reg;
        empty_18_reg_370_pp0_iter5_reg <= empty_18_reg_370_pp0_iter4_reg;
        empty_18_reg_370_pp0_iter6_reg <= empty_18_reg_370_pp0_iter5_reg;
        empty_18_reg_370_pp0_iter7_reg <= empty_18_reg_370_pp0_iter6_reg;
        empty_18_reg_370_pp0_iter8_reg <= empty_18_reg_370_pp0_iter7_reg;
        empty_18_reg_370_pp0_iter9_reg <= empty_18_reg_370_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_18_reg_370_pp0_iter1_reg <= empty_18_reg_370;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_107_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_18_reg_370 <= empty_18_fu_189_p2;
    end
end

always @ (*) begin
    if (((exitcond_flatten_fu_107_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_72;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvars_iv19_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvars_iv19_load = indvars_iv19_fu_64;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvars_iv25_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvars_iv25_load = indvars_iv25_fu_68;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        path_s12_20fixp_ce0 = 1'b1;
    end else begin
        path_s12_20fixp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        path_s12_20fixp_we0 = 1'b1;
    end else begin
        path_s12_20fixp_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_fu_282_p3 = {{empty_17_fu_278_p1}, {27'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign cmp12_fu_252_p2 = ((empty_21_fu_248_p1 == 4'd0) ? 1'b1 : 1'b0);

assign cmp16_fu_262_p2 = ((empty_22_fu_258_p1 == 3'd0) ? 1'b1 : 1'b0);

assign cmp21_fu_272_p2 = ((empty_23_fu_268_p1 == 4'd0) ? 1'b1 : 1'b0);

assign conv_s5_27fixp_fu_290_p2 = (add_fu_282_p3 + 30'd134217728);

assign empty_15_fu_157_p1 = indvars_iv25_cast2_mid2_v_fu_145_p3[3:0];

assign empty_16_fu_177_p0 = indvars_iv19_cast3_fu_173_p1;

assign empty_16_fu_177_p1 = empty_16_fu_177_p10;

assign empty_16_fu_177_p10 = indvars_iv25_cast2_mid2_v_fu_145_p3;

assign empty_17_fu_278_p1 = grp_fu_183_p2[2:0];

assign empty_18_fu_189_p2 = (indvars_iv19_cast3_fu_173_p1 + p_mid2_fu_161_p3);

assign empty_19_fu_195_p1 = indvars_iv19_mid2_fu_131_p3[3:0];

assign empty_20_fu_203_p2 = (indvars_iv19_cast4_cast_fu_199_p1 + indvars_iv25_cast1_cast_mid2_fu_169_p1);

assign empty_21_fu_248_p1 = grp_fu_209_p2[3:0];

assign empty_22_fu_258_p1 = grp_fu_215_p2[2:0];

assign empty_23_fu_268_p1 = grp_fu_221_p2[3:0];

assign exitcond24441_fu_125_p2 = ((ap_sig_allocacmp_indvars_iv19_load == 5'd16) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_107_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 9'd256) ? 1'b1 : 1'b0);

assign grp_fu_183_p1 = 8'd7;

assign grp_fu_215_p1 = 5'd7;

assign indvar_flatten_next_fu_113_p2 = (ap_sig_allocacmp_indvar_flatten_load + 9'd1);

assign indvars_iv19_cast3_fu_173_p1 = indvars_iv19_mid2_fu_131_p3;

assign indvars_iv19_cast4_cast_fu_199_p1 = empty_19_fu_195_p1;

assign indvars_iv19_mid2_fu_131_p3 = ((exitcond24441_fu_125_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_indvars_iv19_load);

assign indvars_iv25_cast1_cast_mid2_fu_169_p1 = empty_15_fu_157_p1;

assign indvars_iv25_cast2_mid2_v_fu_145_p3 = ((exitcond24441_fu_125_p2[0:0] == 1'b1) ? indvars_iv_next26_dup39_fu_139_p2 : ap_sig_allocacmp_indvars_iv25_load);

assign indvars_iv_next20_fu_227_p2 = (indvars_iv19_mid2_fu_131_p3 + 5'd1);

assign indvars_iv_next26_dup39_fu_139_p2 = (ap_sig_allocacmp_indvars_iv25_load + 5'd1);

assign or_cond7_fu_318_p2 = (tmp_fu_314_p2 | cmp12_reg_382_pp0_iter10_reg);

assign p_cast15_fu_306_p1 = tmp_3_fu_296_p4;

assign p_cast5_fu_310_p1 = empty_18_reg_370_pp0_iter10_reg;

assign p_cast_cast_cast_fu_331_p1 = $signed(p_s_fu_323_p3);

assign p_mid2_fu_161_p3 = {{empty_15_fu_157_p1}, {4'd0}};

assign p_s_fu_323_p3 = ((or_cond7_fu_318_p2[0:0] == 1'b1) ? 26'd40894464 : p_cast15_fu_306_p1);

assign path_s12_20fixp_address0 = p_cast5_fu_310_p1;

assign path_s12_20fixp_d0 = $unsigned(p_cast_cast_cast_fu_331_p1);

assign tmp_3_fu_296_p4 = {{conv_s5_27fixp_fu_290_p2[29:7]}};

assign tmp_fu_314_p2 = (cmp21_reg_392_pp0_iter10_reg | cmp16_reg_387_pp0_iter10_reg);

endmodule //fw_fw_Pipeline_VITIS_LOOP_30_1_VITIS_LOOP_31_2

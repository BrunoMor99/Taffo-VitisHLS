// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mm_mm_Pipeline_VITIS_LOOP_92_10 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        D_s9_23fixp_0_address0,
        D_s9_23fixp_0_ce0,
        D_s9_23fixp_0_q0,
        D_s9_23fixp_1_address0,
        D_s9_23fixp_1_ce0,
        D_s9_23fixp_1_q0,
        D_s9_23fixp_2_address0,
        D_s9_23fixp_2_ce0,
        D_s9_23fixp_2_q0,
        D_s9_23fixp_3_address0,
        D_s9_23fixp_3_ce0,
        D_s9_23fixp_3_q0,
        D_s9_23fixp_4_address0,
        D_s9_23fixp_4_ce0,
        D_s9_23fixp_4_q0,
        D_s9_23fixp_5_address0,
        D_s9_23fixp_5_ce0,
        D_s9_23fixp_5_q0,
        D_s9_23fixp_6_address0,
        D_s9_23fixp_6_ce0,
        D_s9_23fixp_6_q0,
        D_s9_23fixp_7_address0,
        D_s9_23fixp_7_ce0,
        D_s9_23fixp_7_q0,
        D_s9_23fixp_8_address0,
        D_s9_23fixp_8_ce0,
        D_s9_23fixp_8_q0,
        D_s9_23fixp_9_address0,
        D_s9_23fixp_9_ce0,
        D_s9_23fixp_9_q0,
        D_s9_23fixp_10_address0,
        D_s9_23fixp_10_ce0,
        D_s9_23fixp_10_q0,
        D_s9_23fixp_11_address0,
        D_s9_23fixp_11_ce0,
        D_s9_23fixp_11_q0,
        D_s9_23fixp_12_address0,
        D_s9_23fixp_12_ce0,
        D_s9_23fixp_12_q0,
        D_s9_23fixp_13_address0,
        D_s9_23fixp_13_ce0,
        D_s9_23fixp_13_q0,
        D_s9_23fixp_14_address0,
        D_s9_23fixp_14_ce0,
        D_s9_23fixp_14_q0,
        D_s9_23fixp_15_address0,
        D_s9_23fixp_15_ce0,
        D_s9_23fixp_15_q0,
        sum_s8_24fixp_06_out,
        sum_s8_24fixp_06_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] D_s9_23fixp_0_address0;
output   D_s9_23fixp_0_ce0;
input  [30:0] D_s9_23fixp_0_q0;
output  [3:0] D_s9_23fixp_1_address0;
output   D_s9_23fixp_1_ce0;
input  [30:0] D_s9_23fixp_1_q0;
output  [3:0] D_s9_23fixp_2_address0;
output   D_s9_23fixp_2_ce0;
input  [30:0] D_s9_23fixp_2_q0;
output  [3:0] D_s9_23fixp_3_address0;
output   D_s9_23fixp_3_ce0;
input  [30:0] D_s9_23fixp_3_q0;
output  [3:0] D_s9_23fixp_4_address0;
output   D_s9_23fixp_4_ce0;
input  [30:0] D_s9_23fixp_4_q0;
output  [3:0] D_s9_23fixp_5_address0;
output   D_s9_23fixp_5_ce0;
input  [30:0] D_s9_23fixp_5_q0;
output  [3:0] D_s9_23fixp_6_address0;
output   D_s9_23fixp_6_ce0;
input  [30:0] D_s9_23fixp_6_q0;
output  [3:0] D_s9_23fixp_7_address0;
output   D_s9_23fixp_7_ce0;
input  [30:0] D_s9_23fixp_7_q0;
output  [3:0] D_s9_23fixp_8_address0;
output   D_s9_23fixp_8_ce0;
input  [30:0] D_s9_23fixp_8_q0;
output  [3:0] D_s9_23fixp_9_address0;
output   D_s9_23fixp_9_ce0;
input  [30:0] D_s9_23fixp_9_q0;
output  [3:0] D_s9_23fixp_10_address0;
output   D_s9_23fixp_10_ce0;
input  [30:0] D_s9_23fixp_10_q0;
output  [3:0] D_s9_23fixp_11_address0;
output   D_s9_23fixp_11_ce0;
input  [30:0] D_s9_23fixp_11_q0;
output  [3:0] D_s9_23fixp_12_address0;
output   D_s9_23fixp_12_ce0;
input  [30:0] D_s9_23fixp_12_q0;
output  [3:0] D_s9_23fixp_13_address0;
output   D_s9_23fixp_13_ce0;
input  [30:0] D_s9_23fixp_13_q0;
output  [3:0] D_s9_23fixp_14_address0;
output   D_s9_23fixp_14_ce0;
input  [30:0] D_s9_23fixp_14_q0;
output  [3:0] D_s9_23fixp_15_address0;
output   D_s9_23fixp_15_ce0;
input  [30:0] D_s9_23fixp_15_q0;
output  [31:0] sum_s8_24fixp_06_out;
output   sum_s8_24fixp_06_out_ap_vld;

reg ap_idle;
reg D_s9_23fixp_0_ce0;
reg D_s9_23fixp_1_ce0;
reg D_s9_23fixp_2_ce0;
reg D_s9_23fixp_3_ce0;
reg D_s9_23fixp_4_ce0;
reg D_s9_23fixp_5_ce0;
reg D_s9_23fixp_6_ce0;
reg D_s9_23fixp_7_ce0;
reg D_s9_23fixp_8_ce0;
reg D_s9_23fixp_9_ce0;
reg D_s9_23fixp_10_ce0;
reg D_s9_23fixp_11_ce0;
reg D_s9_23fixp_12_ce0;
reg D_s9_23fixp_13_ce0;
reg D_s9_23fixp_14_ce0;
reg D_s9_23fixp_15_ce0;
reg sum_s8_24fixp_06_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] exitcond546_fu_310_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] exitcond546_reg_870;
wire   [63:0] indvars_iv51_cast_fu_322_p1;
reg   [63:0] indvars_iv51_cast_reg_874;
reg   [30:0] D_s9_23fixp_0_load_reg_973;
wire    ap_block_pp0_stage0;
reg   [31:0] sum_s8_24fixp_06_fu_74;
wire   [31:0] tmp_47_fu_838_p3;
wire    ap_loop_init;
reg   [4:0] indvars_iv51_fu_78;
wire   [4:0] indvars_iv_next52_fu_316_p2;
reg   [4:0] ap_sig_allocacmp_indvars_iv51_load;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] tmp_s_fu_335_p3;
wire   [31:0] fold85_fu_342_p2;
wire   [29:0] tmp_1_fu_348_p4;
wire   [31:0] tmp_3_fu_366_p3;
wire   [31:0] tmp_2_fu_358_p3;
wire   [31:0] fold_fu_374_p2;
wire   [29:0] tmp_4_fu_380_p4;
wire   [31:0] tmp_6_fu_398_p3;
wire   [31:0] tmp_5_fu_390_p3;
wire   [31:0] fold71_fu_406_p2;
wire   [29:0] tmp_7_fu_412_p4;
wire   [31:0] tmp_9_fu_430_p3;
wire   [31:0] tmp_8_fu_422_p3;
wire   [31:0] fold72_fu_438_p2;
wire   [29:0] tmp_10_fu_444_p4;
wire   [31:0] tmp_12_fu_462_p3;
wire   [31:0] tmp_11_fu_454_p3;
wire   [31:0] fold73_fu_470_p2;
wire   [29:0] tmp_13_fu_476_p4;
wire   [31:0] tmp_15_fu_494_p3;
wire   [31:0] tmp_14_fu_486_p3;
wire   [31:0] fold74_fu_502_p2;
wire   [29:0] tmp_16_fu_508_p4;
wire   [31:0] tmp_18_fu_526_p3;
wire   [31:0] tmp_17_fu_518_p3;
wire   [31:0] fold75_fu_534_p2;
wire   [29:0] tmp_19_fu_540_p4;
wire   [31:0] tmp_21_fu_558_p3;
wire   [31:0] tmp_20_fu_550_p3;
wire   [31:0] fold76_fu_566_p2;
wire   [29:0] tmp_22_fu_572_p4;
wire   [31:0] tmp_24_fu_590_p3;
wire   [31:0] tmp_23_fu_582_p3;
wire   [31:0] fold77_fu_598_p2;
wire   [29:0] tmp_25_fu_604_p4;
wire   [31:0] tmp_27_fu_622_p3;
wire   [31:0] tmp_26_fu_614_p3;
wire   [31:0] fold78_fu_630_p2;
wire   [29:0] tmp_28_fu_636_p4;
wire   [31:0] tmp_30_fu_654_p3;
wire   [31:0] tmp_29_fu_646_p3;
wire   [31:0] fold79_fu_662_p2;
wire   [29:0] tmp_31_fu_668_p4;
wire   [31:0] tmp_33_fu_686_p3;
wire   [31:0] tmp_32_fu_678_p3;
wire   [31:0] fold80_fu_694_p2;
wire   [29:0] tmp_34_fu_700_p4;
wire   [31:0] tmp_36_fu_718_p3;
wire   [31:0] tmp_35_fu_710_p3;
wire   [31:0] fold81_fu_726_p2;
wire   [29:0] tmp_37_fu_732_p4;
wire   [31:0] tmp_39_fu_750_p3;
wire   [31:0] tmp_38_fu_742_p3;
wire   [31:0] fold82_fu_758_p2;
wire   [29:0] tmp_40_fu_764_p4;
wire   [31:0] tmp_42_fu_782_p3;
wire   [31:0] tmp_41_fu_774_p3;
wire   [31:0] fold83_fu_790_p2;
wire   [29:0] tmp_43_fu_796_p4;
wire   [31:0] tmp_45_fu_814_p3;
wire   [31:0] tmp_44_fu_806_p3;
wire   [31:0] fold84_fu_822_p2;
wire   [29:0] tmp_46_fu_828_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

mm_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((exitcond546_fu_310_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvars_iv51_fu_78 <= indvars_iv_next52_fu_316_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvars_iv51_fu_78 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                        sum_s8_24fixp_06_fu_74[2] <= 1'b0;
            sum_s8_24fixp_06_fu_74[3] <= 1'b0;
            sum_s8_24fixp_06_fu_74[4] <= 1'b0;
            sum_s8_24fixp_06_fu_74[5] <= 1'b0;
            sum_s8_24fixp_06_fu_74[6] <= 1'b0;
            sum_s8_24fixp_06_fu_74[7] <= 1'b0;
            sum_s8_24fixp_06_fu_74[8] <= 1'b0;
            sum_s8_24fixp_06_fu_74[9] <= 1'b0;
            sum_s8_24fixp_06_fu_74[10] <= 1'b0;
            sum_s8_24fixp_06_fu_74[11] <= 1'b0;
            sum_s8_24fixp_06_fu_74[12] <= 1'b0;
            sum_s8_24fixp_06_fu_74[13] <= 1'b0;
            sum_s8_24fixp_06_fu_74[14] <= 1'b0;
            sum_s8_24fixp_06_fu_74[15] <= 1'b0;
            sum_s8_24fixp_06_fu_74[16] <= 1'b0;
            sum_s8_24fixp_06_fu_74[17] <= 1'b0;
            sum_s8_24fixp_06_fu_74[18] <= 1'b0;
            sum_s8_24fixp_06_fu_74[19] <= 1'b0;
            sum_s8_24fixp_06_fu_74[20] <= 1'b0;
            sum_s8_24fixp_06_fu_74[21] <= 1'b0;
            sum_s8_24fixp_06_fu_74[22] <= 1'b0;
            sum_s8_24fixp_06_fu_74[23] <= 1'b0;
            sum_s8_24fixp_06_fu_74[24] <= 1'b0;
            sum_s8_24fixp_06_fu_74[25] <= 1'b0;
            sum_s8_24fixp_06_fu_74[26] <= 1'b0;
            sum_s8_24fixp_06_fu_74[27] <= 1'b0;
            sum_s8_24fixp_06_fu_74[28] <= 1'b0;
            sum_s8_24fixp_06_fu_74[29] <= 1'b0;
            sum_s8_24fixp_06_fu_74[30] <= 1'b0;
            sum_s8_24fixp_06_fu_74[31] <= 1'b0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
                        sum_s8_24fixp_06_fu_74[31 : 2] <= tmp_47_fu_838_p3[31 : 2];
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_0_load_reg_973 <= D_s9_23fixp_0_q0;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        exitcond546_reg_870 <= exitcond546_fu_310_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond546_fu_310_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvars_iv51_cast_reg_874[4 : 0] <= indvars_iv51_cast_fu_322_p1[4 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_0_ce0 = 1'b1;
    end else begin
        D_s9_23fixp_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_10_ce0 = 1'b1;
    end else begin
        D_s9_23fixp_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_11_ce0 = 1'b1;
    end else begin
        D_s9_23fixp_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_12_ce0 = 1'b1;
    end else begin
        D_s9_23fixp_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_13_ce0 = 1'b1;
    end else begin
        D_s9_23fixp_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_14_ce0 = 1'b1;
    end else begin
        D_s9_23fixp_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_15_ce0 = 1'b1;
    end else begin
        D_s9_23fixp_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_1_ce0 = 1'b1;
    end else begin
        D_s9_23fixp_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_2_ce0 = 1'b1;
    end else begin
        D_s9_23fixp_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_3_ce0 = 1'b1;
    end else begin
        D_s9_23fixp_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_4_ce0 = 1'b1;
    end else begin
        D_s9_23fixp_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_5_ce0 = 1'b1;
    end else begin
        D_s9_23fixp_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_6_ce0 = 1'b1;
    end else begin
        D_s9_23fixp_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_7_ce0 = 1'b1;
    end else begin
        D_s9_23fixp_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_8_ce0 = 1'b1;
    end else begin
        D_s9_23fixp_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        D_s9_23fixp_9_ce0 = 1'b1;
    end else begin
        D_s9_23fixp_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond546_fu_310_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvars_iv51_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvars_iv51_load = indvars_iv51_fu_78;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond546_reg_870 == 1'd1))) begin
        sum_s8_24fixp_06_out_ap_vld = 1'b1;
    end else begin
        sum_s8_24fixp_06_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign D_s9_23fixp_0_address0 = indvars_iv51_cast_fu_322_p1;

assign D_s9_23fixp_10_address0 = indvars_iv51_cast_reg_874;

assign D_s9_23fixp_11_address0 = indvars_iv51_cast_reg_874;

assign D_s9_23fixp_12_address0 = indvars_iv51_cast_reg_874;

assign D_s9_23fixp_13_address0 = indvars_iv51_cast_reg_874;

assign D_s9_23fixp_14_address0 = indvars_iv51_cast_reg_874;

assign D_s9_23fixp_15_address0 = indvars_iv51_cast_reg_874;

assign D_s9_23fixp_1_address0 = indvars_iv51_cast_reg_874;

assign D_s9_23fixp_2_address0 = indvars_iv51_cast_reg_874;

assign D_s9_23fixp_3_address0 = indvars_iv51_cast_reg_874;

assign D_s9_23fixp_4_address0 = indvars_iv51_cast_reg_874;

assign D_s9_23fixp_5_address0 = indvars_iv51_cast_reg_874;

assign D_s9_23fixp_6_address0 = indvars_iv51_cast_reg_874;

assign D_s9_23fixp_7_address0 = indvars_iv51_cast_reg_874;

assign D_s9_23fixp_8_address0 = indvars_iv51_cast_reg_874;

assign D_s9_23fixp_9_address0 = indvars_iv51_cast_reg_874;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign exitcond546_fu_310_p2 = ((ap_sig_allocacmp_indvars_iv51_load == 5'd16) ? 1'b1 : 1'b0);

assign fold71_fu_406_p2 = (tmp_6_fu_398_p3 + tmp_5_fu_390_p3);

assign fold72_fu_438_p2 = (tmp_9_fu_430_p3 + tmp_8_fu_422_p3);

assign fold73_fu_470_p2 = (tmp_12_fu_462_p3 + tmp_11_fu_454_p3);

assign fold74_fu_502_p2 = (tmp_15_fu_494_p3 + tmp_14_fu_486_p3);

assign fold75_fu_534_p2 = (tmp_18_fu_526_p3 + tmp_17_fu_518_p3);

assign fold76_fu_566_p2 = (tmp_21_fu_558_p3 + tmp_20_fu_550_p3);

assign fold77_fu_598_p2 = (tmp_24_fu_590_p3 + tmp_23_fu_582_p3);

assign fold78_fu_630_p2 = (tmp_27_fu_622_p3 + tmp_26_fu_614_p3);

assign fold79_fu_662_p2 = (tmp_30_fu_654_p3 + tmp_29_fu_646_p3);

assign fold80_fu_694_p2 = (tmp_33_fu_686_p3 + tmp_32_fu_678_p3);

assign fold81_fu_726_p2 = (tmp_36_fu_718_p3 + tmp_35_fu_710_p3);

assign fold82_fu_758_p2 = (tmp_39_fu_750_p3 + tmp_38_fu_742_p3);

assign fold83_fu_790_p2 = (tmp_42_fu_782_p3 + tmp_41_fu_774_p3);

assign fold84_fu_822_p2 = (tmp_45_fu_814_p3 + tmp_44_fu_806_p3);

assign fold85_fu_342_p2 = (tmp_s_fu_335_p3 + sum_s8_24fixp_06_fu_74);

assign fold_fu_374_p2 = (tmp_3_fu_366_p3 + tmp_2_fu_358_p3);

assign indvars_iv51_cast_fu_322_p1 = ap_sig_allocacmp_indvars_iv51_load;

assign indvars_iv_next52_fu_316_p2 = (ap_sig_allocacmp_indvars_iv51_load + 5'd1);

assign sum_s8_24fixp_06_out = sum_s8_24fixp_06_fu_74;

assign tmp_10_fu_444_p4 = {{fold72_fu_438_p2[31:2]}};

assign tmp_11_fu_454_p3 = {{tmp_10_fu_444_p4}, {2'd0}};

assign tmp_12_fu_462_p3 = {{D_s9_23fixp_4_q0}, {1'd0}};

assign tmp_13_fu_476_p4 = {{fold73_fu_470_p2[31:2]}};

assign tmp_14_fu_486_p3 = {{tmp_13_fu_476_p4}, {2'd0}};

assign tmp_15_fu_494_p3 = {{D_s9_23fixp_5_q0}, {1'd0}};

assign tmp_16_fu_508_p4 = {{fold74_fu_502_p2[31:2]}};

assign tmp_17_fu_518_p3 = {{tmp_16_fu_508_p4}, {2'd0}};

assign tmp_18_fu_526_p3 = {{D_s9_23fixp_6_q0}, {1'd0}};

assign tmp_19_fu_540_p4 = {{fold75_fu_534_p2[31:2]}};

assign tmp_1_fu_348_p4 = {{fold85_fu_342_p2[31:2]}};

assign tmp_20_fu_550_p3 = {{tmp_19_fu_540_p4}, {2'd0}};

assign tmp_21_fu_558_p3 = {{D_s9_23fixp_7_q0}, {1'd0}};

assign tmp_22_fu_572_p4 = {{fold76_fu_566_p2[31:2]}};

assign tmp_23_fu_582_p3 = {{tmp_22_fu_572_p4}, {2'd0}};

assign tmp_24_fu_590_p3 = {{D_s9_23fixp_8_q0}, {1'd0}};

assign tmp_25_fu_604_p4 = {{fold77_fu_598_p2[31:2]}};

assign tmp_26_fu_614_p3 = {{tmp_25_fu_604_p4}, {2'd0}};

assign tmp_27_fu_622_p3 = {{D_s9_23fixp_9_q0}, {1'd0}};

assign tmp_28_fu_636_p4 = {{fold78_fu_630_p2[31:2]}};

assign tmp_29_fu_646_p3 = {{tmp_28_fu_636_p4}, {2'd0}};

assign tmp_2_fu_358_p3 = {{tmp_1_fu_348_p4}, {2'd0}};

assign tmp_30_fu_654_p3 = {{D_s9_23fixp_10_q0}, {1'd0}};

assign tmp_31_fu_668_p4 = {{fold79_fu_662_p2[31:2]}};

assign tmp_32_fu_678_p3 = {{tmp_31_fu_668_p4}, {2'd0}};

assign tmp_33_fu_686_p3 = {{D_s9_23fixp_11_q0}, {1'd0}};

assign tmp_34_fu_700_p4 = {{fold80_fu_694_p2[31:2]}};

assign tmp_35_fu_710_p3 = {{tmp_34_fu_700_p4}, {2'd0}};

assign tmp_36_fu_718_p3 = {{D_s9_23fixp_12_q0}, {1'd0}};

assign tmp_37_fu_732_p4 = {{fold81_fu_726_p2[31:2]}};

assign tmp_38_fu_742_p3 = {{tmp_37_fu_732_p4}, {2'd0}};

assign tmp_39_fu_750_p3 = {{D_s9_23fixp_13_q0}, {1'd0}};

assign tmp_3_fu_366_p3 = {{D_s9_23fixp_1_q0}, {1'd0}};

assign tmp_40_fu_764_p4 = {{fold82_fu_758_p2[31:2]}};

assign tmp_41_fu_774_p3 = {{tmp_40_fu_764_p4}, {2'd0}};

assign tmp_42_fu_782_p3 = {{D_s9_23fixp_14_q0}, {1'd0}};

assign tmp_43_fu_796_p4 = {{fold83_fu_790_p2[31:2]}};

assign tmp_44_fu_806_p3 = {{tmp_43_fu_796_p4}, {2'd0}};

assign tmp_45_fu_814_p3 = {{D_s9_23fixp_15_q0}, {1'd0}};

assign tmp_46_fu_828_p4 = {{fold84_fu_822_p2[31:2]}};

assign tmp_47_fu_838_p3 = {{tmp_46_fu_828_p4}, {2'd0}};

assign tmp_4_fu_380_p4 = {{fold_fu_374_p2[31:2]}};

assign tmp_5_fu_390_p3 = {{tmp_4_fu_380_p4}, {2'd0}};

assign tmp_6_fu_398_p3 = {{D_s9_23fixp_2_q0}, {1'd0}};

assign tmp_7_fu_412_p4 = {{fold71_fu_406_p2[31:2]}};

assign tmp_8_fu_422_p3 = {{tmp_7_fu_412_p4}, {2'd0}};

assign tmp_9_fu_430_p3 = {{D_s9_23fixp_3_q0}, {1'd0}};

assign tmp_s_fu_335_p3 = {{D_s9_23fixp_0_load_reg_973}, {1'd0}};

always @ (posedge ap_clk) begin
    indvars_iv51_cast_reg_874[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    sum_s8_24fixp_06_fu_74[1:0] <= 2'b00;
end

endmodule //mm_mm_Pipeline_VITIS_LOOP_92_10
